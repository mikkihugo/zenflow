name: Issue 108 Monitoring and Updates

on:
  issues:
    types: [opened, edited, closed, reopened]
  issue_comment:
    types: [created, edited, deleted]
  pull_request:
    types: [opened, closed, merged, synchronize]
  push:
    branches: [claude-flow-v2.0.0, main]

jobs:
  monitor-issue-108:
    runs-on: ubuntu-latest
    if: github.event.issue.number == 108 || contains(github.event.pull_request.title, 'Issue 108') || contains(github.event.commits[0].message, 'Issue 108')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install -g @anthropic/claude-code
          npm install -g ruv-swarm
          
      - name: Initialize swarm coordination
        run: |
          npx ruv-swarm init hierarchical 3 --claude
          npx ruv-swarm agent spawn coordinator --name "GitHub Monitor"
          npx ruv-swarm agent spawn analyst --name "Issue Tracker"
          npx ruv-swarm agent spawn researcher --name "Change Detector"
          
      - name: Update issue status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get current issue data
          ISSUE_DATA=$(gh issue view 108 --json title,body,state,assignees,labels,comments)
          
          # Create swarm memory entry
          npx ruv-swarm memory store "issue_108_update" "{
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"trigger\": \"${{ github.event_name }}\",
            \"issue_data\": $ISSUE_DATA,
            \"commit_sha\": \"${{ github.sha }}\",
            \"branch\": \"${{ github.ref_name }}\",
            \"actor\": \"${{ github.actor }}\"
          }"
          
          # Analyze changes and update issue
          npx ruv-swarm task orchestrate "Analyze changes and update issue 108 with progress" \
            --strategy adaptive --priority high
            
      - name: Add progress comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get swarm status
          SWARM_STATUS=$(npx ruv-swarm status --json)
          
          # Create progress update comment
          gh issue comment 108 --body "üöÄ Swarm Progress Update - $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)

          ## üìä Current Status

          ### üî¥ Event Triggered
          - **Action**: ${{ github.event_name }}
          - **Branch**: ${{ github.ref_name }}
          - **Commit**: ${{ github.sha }}
          - **Actor**: ${{ github.actor }}

          ### üéØ Swarm Coordination Status
          - **Active Swarms**: $(echo '$SWARM_STATUS' | jq -r '.active_swarms')
          - **Coordinated Agents**: $(echo '$SWARM_STATUS' | jq -r '.total_agents')
          - **Last Update**: $(date -u +%Y-%m-%dT%H:%M:%SZ)

          ### üìà Metrics
          - **Memory Usage**: $(npx ruv-swarm memory usage --summary)
          - **Neural Networks**: $(npx ruv-swarm neural status --summary)
          - **Task Queue**: $(npx ruv-swarm task status --summary)

          ### üìù Next Steps
          - Monitor build status changes
          - Track TypeScript error resolution
          - Coordinate with development swarm
          - Update progress metrics

          ---
          ü§ñ *Automated update by Issue 108 Monitor*"

  coordinate-with-other-swarms:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Cross-swarm coordination
        run: |
          # Initialize coordination swarm
          npx ruv-swarm init mesh 5 --claude
          
          # Spawn coordination agents
          npx ruv-swarm agent spawn coordinator --name "Cross-Swarm Coordinator"
          npx ruv-swarm agent spawn analyst --name "Build Status Tracker"
          npx ruv-swarm agent spawn researcher --name "Change Analyzer"
          npx ruv-swarm agent spawn coder --name "Integration Validator"
          
          # Share knowledge across swarms
          npx ruv-swarm memory store "cross_swarm_update" "{
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"repository\": \"${{ github.repository }}\",
            \"event\": \"${{ github.event_name }}\",
            \"ref\": \"${{ github.ref }}\",
            \"sha\": \"${{ github.sha }}\",
            \"changes\": \"$(git diff --name-only HEAD~1 HEAD | head -10)\",
            \"issue_108_status\": \"monitoring\",
            \"coordination_active\": true
          }"
          
          # Orchestrate cross-swarm coordination
          npx ruv-swarm task orchestrate "Coordinate with other swarms and update issue 108" \
            --strategy parallel --priority medium
            
      - name: Neural pattern learning
        run: |
          # Train neural patterns based on changes
          npx ruv-swarm neural train --iterations 5 --pattern adaptive
          
          # Update cognitive patterns
          npx ruv-swarm neural patterns --update convergent
          
          # Store learning results
          npx ruv-swarm memory store "neural_learning" "{
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"learning_session\": \"issue_108_coordination\",
            \"patterns_updated\": [\"adaptive\", \"convergent\"],
            \"performance_metrics\": \"$(npx ruv-swarm benchmark --quick)\"
          }"