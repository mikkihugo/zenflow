[package]
name = "zen-swarm-vector"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
description = "Unified Cozy + Lance database system for zen-orchestrator matching THE COLLECTIVE"

[dependencies]
# Core dependencies
async-trait = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }
parking_lot = { workspace = true }
futures = { workspace = true }

# LanceDB Rust bindings - LATEST VERSION for better compatibility
lancedb = { version = "0.20.0" }
arrow = { version = "54.0.0" }
arrow-array = { version = "54.0.0" }
arrow-schema = { version = "54.0.0" }

# Vector operations and similarity search
nalgebra = { version = "0.33.0", features = ["serde"] }
faiss = { version = "0.12.0", optional = true }

# Embeddings and ML - downgrade to compatible versions
candle-core = { version = "0.7.2" }
candle-nn = { version = "0.7.2" }
tokenizers = { version = "0.20.3" }

# Cozy-style document database functionality (compatible with THE COLLECTIVE's Cozy)
# Note: THE COLLECTIVE uses cozy-client (npm), zen-swarm uses Rust-compatible equivalent
# serde_json already defined above
bincode = { version = "1.3.3", optional = true }        # Efficient binary storage
graphviz-rust = { version = "0.9.0", optional = true }  # DOT file export for visualization

# Async streaming
tokio-stream = { version = "0.1" }
async-stream = { version = "0.3" }

# UUID and time
uuid = { workspace = true }
chrono = { version = "0.4", features = ["serde"] }

# WASM support
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { workspace = true }
js-sys = { workspace = true }
web-sys = { workspace = true, features = ["console", "Window"] }

[dev-dependencies]
criterion = { workspace = true }
tempfile = "3.12"
tokio-test = "0.4"

[features]
default = ["lancedb-backend", "embeddings", "graph"]
lancedb-backend = []
faiss-backend = ["faiss"]
embeddings = []
cozy = ["bincode"]                      # Cozy-style document database features
lance = []                               # Lance vector database features  
graph = ["graphviz-rust", "bincode"]     # Graph visualization support
cozy-lance = ["cozy", "lance"]           # Unified Cozy + Lance system
gpu = []
wasm = []

[[example]]
name = "vector_search_demo"
path = "examples/vector_search.rs"

[[example]]
name = "rag_pipeline"
path = "examples/rag_pipeline.rs"