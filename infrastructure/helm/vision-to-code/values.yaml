# Default values for vision-to-code
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  environment: production
  imageRegistry: "your-registry.com"
  imagePullSecrets:
    - name: regcred
  
  # Service mesh configuration
  serviceMesh:
    enabled: true
    provider: istio

# Business Service Configuration
businessService:
  enabled: true
  name: business-service
  replicaCount: 3
  
  image:
    repository: vision-to-code/business-service
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 4001
    targetPort: 4001
  
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: business-service-db
          key: url
    - name: GEMINI_API_KEY
      valueFrom:
        secretKeyRef:
          name: gemini-credentials
          key: api-key
    - name: LOG_LEVEL
      value: "info"

# Core Service Configuration
coreService:
  enabled: true
  name: core-service
  replicaCount: 3
  
  image:
    repository: vision-to-code/core-service
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 4002
    targetPort: 4002
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: core-service-db
          key: url
    - name: REDIS_URL
      valueFrom:
        secretKeyRef:
          name: redis-credentials
          key: url
    - name: LOG_LEVEL
      value: "info"

# Swarm Service Configuration


# Development Service Configuration
developmentService:
  enabled: true
  name: development-service
  replicaCount: 2
  
  image:
    repository: vision-to-code/development-service
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 4004
    targetPort: 4004
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: development-service-db
          key: url
    - name: CLAUDE_CODE_ENDPOINT
      value: "http://claude-code-service:8080"
    - name: LOG_LEVEL
      value: "info"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: api.vision-to-code.example.com
      paths:
        - path: /api/v1/business
          pathType: Prefix
          service: business-service
        - path: /api/v1/core
          pathType: Prefix
          service: core-service
        
        - path: /api/v1/development
          pathType: Prefix
          service: development-service
  tls:
    - secretName: vision-to-code-tls
      hosts:
        - api.vision-to-code.example.com

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    retention: 30d
    storageSize: 100Gi
    serviceMonitor:
      enabled: true
      interval: 30s
  grafana:
    adminPassword: changeme
    persistence:
      enabled: true
      size: 10Gi
    dashboards:
      enabled: true
      label: grafana_dashboard

# Service mesh configuration
serviceMesh:
  enabled: true
  istio:
    mtls:
      mode: STRICT
    tracing:
      enabled: true
      sampling: 1.0
    circuitBreaker:
      enabled: true
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 30s

# Database backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention:
    days: 30
  s3:
    bucket: vision-to-code-backups
    region: us-east-1

# Security policies
securityPolicies:
  podSecurityPolicy:
    enabled: true
  networkPolicy:
    enabled: true
    allowedNamespaces:
      - kube-system
      - istio-system
      - monitoring

# Resource quotas
resourceQuota:
  enabled: true
  limits:
    requests.cpu: "100"
    requests.memory: "200Gi"
    persistentvolumeclaims: "20"

# Pod disruption budgets
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Health checks
healthCheck:
  liveness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readiness:
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3