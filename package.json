{
  "name": "@zen-ai/claude-code-zen",
  "version": "1.0.0-alpha.44",
  "type": "module",
  "description": "Claude Code Zen: AI swarm orchestration platform with neural networks, web dashboard, and complete bundled system",
  "main": "dist/claude-zen.js",
  "bin": {
    "claude-zen": "dist/claude-zen.js"
  },
  "preferGlobal": true,
  "scripts": {
    "start": "node dist/claude-zen.js core",
    "dev": "npx tsx src/main.ts web --port 3000",
    "dev:web": "npx tsx src/main.ts web --port 3000",
    "dev:watch": "nodemon",
    "dev:svelte": "vite dev --port 3002",
    "dev:svelte:host": "vite dev --port 3002 --host",
    "dev:full": "concurrently \"npm:dev:watch\" \"npm:dev:svelte\" \"npm:type-check:watch\"",
    "build:svelte": "vite build",
    "preview:svelte": "vite preview",
    "check:svelte": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
    "dev:esbuild": "npm run build && node dist/claude-zen.js integrated",
    "debug": "node --inspect-brk -r tsx/cjs src/claude-zen-core.ts",
    "build": "tsc --project tsconfig.json",
    "build:strict": "tsc --project tsconfig.json --noEmit && node esbuild.config.js",
    "build:watch": "node esbuild.config.js --watch",
    "build:wasm": "cd src/neural/wasm && ./scripts/build-wasm.sh",
    "build:wasm:dev": "cd src/neural/wasm && BUILD_MODE=dev ./scripts/build-wasm.sh",
    "build:wasm:prod": "cd src/neural/wasm && OPTIMIZE_SIZE=true BUILD_MODE=release ./scripts/build-wasm.sh",
    "build:bindings": "cd src/bindings && npm run build",
    "build:bindings:dev": "cd src/bindings && npm run build:dev",
    "build:bindings:release": "cd src/bindings && npm run build:release",
    "clean": "gts clean",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:legacy": "NODE_OPTIONS='--experimental-vm-modules' vitest run --maxWorkers=1 --testTimeout=30000",
    "test:legacy:watch": "NODE_OPTIONS='--experimental-vm-modules' vitest --watch",
    "test:unit": "vitest run src/__tests__/unit",
    "test:integration": "vitest run src/__tests__/integration",
    "test:e2e": "vitest run src/__tests__/e2e",
    "test:comprehensive": "node scripts/run-infrastructure-tests.js && npm run test:coverage",
    "test:ci": "NODE_OPTIONS='--experimental-vm-modules' vitest run --coverage --maxWorkers=2",
    "test:debug": "NODE_OPTIONS='--experimental-vm-modules --inspect-brk' vitest run --no-coverage",
    "test:neural": "node src/bindings/test/test.js",
    "test:tdd-london": "node scripts/run-tdd-london-tests.js",
    "lint": "echo 'Linting disabled due to biome thread pool issues' && npm run lint:rust",
    "lint:fix": "npm run format && npm run format:rust",
    "lint:ts": "biome check .",
    "lint:rust": "find . -name '*.rs' -not -path '*/target/*' -not -path '*/node_modules/*' | head -20 | xargs -r rustfmt --edition=2024 --check || true",
    "lint:complexity": "node scripts/check-complexity.js",
    "lint:jsdoc": "node scripts/check-jsdoc-advanced.js",
    "lint:jsdoc-simple": "node scripts/check-jsdoc-simple.js",
    "lint:size": "node scripts/check-file-sizes.js",
    "format": "npm run format:ts && npm run format:rust",
    "format:ts": "BIOME_DAEMON=0 biome format --write . --max-diagnostics=50",
    "format:rust": "find . -name '*.rs' -not -path '*/target/*' -not -path '*/node_modules/*' | head -20 | xargs -r rustfmt --edition=2024 || true",
    "format:check": "npm run format:check:ts && npm run format:check:rust",
    "format:check:ts": "BIOME_DAEMON=0 biome check . --max-diagnostics=50",
    "format:check:rust": "find . -name '*.rs' -not -path '*/target/*' -not -path '*/node_modules/*' | head -20 | xargs -r rustfmt --edition=2024 --check || true",
    "fix:zen": "node scripts/hybrid-fixer.js",
    "fix:zen:compile": "tsc --noEmit --skipLibCheck && echo '✅ TypeScript compilation successful'",
    "fix:zen:production": "node scripts/compile-fixer-no-tests.js",
    "fix:zen:production:dry": "node scripts/compile-fixer-no-tests.js --dry-run",
    "fix:zen:errors": "node scripts/compile-fixer-errors-only.js",
    "fix:zen:errors:dry": "node scripts/compile-fixer-errors-only.js --dry-run",
    "fix:zen:errors:all": "node scripts/compile-fixer-errors-only.js --include-tests",
    "fix:zen:dry": "node scripts/hybrid-fixer.js --dry-run",
    "fix:zen:biome-only": "npx biome check --apply",
    "fix:zen:format": "npx biome format --write .",
    "fix:zen:zero": "node scripts/monitor-zen-to-zero.js",
    "fix:zen:quality": "npm run analyze:quality && npm run fix:naming && npm run fix:optional-chaining && npm run fix:unused-vars && node scripts/biome-ai-fixer.js",
    "analyze:quality": "node scripts/code-quality/complexity-analyzer.cjs",
    "analyze:quality:detailed": "node scripts/code-quality/complexity-analyzer.cjs src/**/*.ts > quality-report.md",
    "fix:naming": "npx jscodeshift --transform=scripts/transformers/naming-convention-fixer-silent.cjs --parser=tsx --extensions=ts,tsx src",
    "fix:naming:dry": "npx jscodeshift --transform=scripts/transformers/naming-convention-fixer-silent.cjs --parser=tsx --extensions=ts,tsx --dry src",
    "fix:optional-chaining": "npx jscodeshift --transform=scripts/transformers/optional-chaining-fixer.cjs --parser=tsx --extensions=ts,tsx src",
    "fix:optional-chaining:dry": "npx jscodeshift --transform=scripts/transformers/optional-chaining-fixer.cjs --parser=tsx --extensions=ts,tsx --dry src",
    "fix:optional-chaining:verbose": "npx jscodeshift --transform=scripts/transformers/optional-chaining-fixer.cjs --parser=tsx --extensions=ts,tsx --verbose src",
    "fix:bracket-notation": "npx jscodeshift --transform=scripts/transformers/bracket-notation-fixer.cjs --parser=tsx --extensions=ts,tsx src",
    "fix:bracket-notation:dry": "npx jscodeshift --transform=scripts/transformers/bracket-notation-fixer.cjs --parser=tsx --extensions=ts,tsx --dry src",
    "fix:bracket-notation:verbose": "npx jscodeshift --transform=scripts/transformers/bracket-notation-fixer.cjs --parser=tsx --extensions=ts,tsx --verbose=2 src",
    "fix:unused-vars": "npx jscodeshift --transform=scripts/transformers/unused-variable-fixer.cjs --parser=tsx --extensions=ts,tsx src",
    "fix:unused-vars:dry": "npx jscodeshift --transform=scripts/transformers/unused-variable-fixer.cjs --parser=tsx --extensions=ts,tsx --dry src",
    "fix:process-env": "npx jscodeshift --transform=scripts/transformers/process-env-bracket-fixer.cjs --parser=tsx --extensions=ts,tsx,js,jsx --verbose=2 src",
    "fix:process-env:dry": "npx jscodeshift --transform=scripts/transformers/process-env-bracket-fixer.cjs --parser=tsx --extensions=ts,tsx,js,jsx --dry --verbose=2 src",
    "fix:unused-imports": "npx jscodeshift --transform=scripts/transformers/import-cleanup-fixer.cjs --parser=tsx --extensions=ts,tsx src",
    "fix:unused-imports:dry": "npx jscodeshift --transform=scripts/transformers/import-cleanup-fixer.cjs --parser=tsx --extensions=ts,tsx --dry src",
    "format:biome": "biome format --write .",
    "naming:check": "find src -name '*.ts' -o -name '*.tsx' | grep -E '[A-Z]' && echo 'Non-kebab-case files found!' && exit 1 || echo 'All files follow kebab-case naming ✅'",
    "server": "node dist/claude-zen.js integrated",
    "benchmark": "node src/coordination/diagnostics/benchmark.js",
    "example:doc-analysis": "npx tsx src/examples/document-analysis-example.ts",
    "scan:docs": "npx tsx src/examples/document-analysis-example.ts --quick",
    "scan:interactive": "npx tsx src/examples/document-analysis-example.ts --full",
    "docs:build": "node scripts/docs-build.js",
    "docs:enhanced": "node scripts/enhanced-docs-generator.js",
    "docs:full": "npm run docs:build && npm run docs:enhanced",
    "docs:validate": "node scripts/jsdoc-validator.cjs",
    "docs:validate:fix": "node scripts/jsdoc-validator.js --auto-fix",
    "docs:coverage": "node scripts/docs-coverage.js",
    "docs:templates": "node scripts/template-validator.js",
    "docs:templates:fix": "node scripts/template-validator.js --auto-fix",
    "docs:deploy": "node scripts/docs-deploy.js",
    "docs:deploy:staging": "node scripts/docs-deploy.js --environment staging",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "binary:build": "npm run build:prod && npm run binary:bundle",
    "binary:bundle": "npm run binary:ncc && npm run binary:copy-wasm && npm run binary:create-launchers",
    "binary:ncc": "ncc build dist/claude-zen.js -o bin/bundle --minify --no-source-map-register",
    "binary:copy-wasm": "cp src/neural/wasm/pkg-manual/*.wasm bin/bundle/ && cp src/neural/wasm/pkg-manual/*.js bin/bundle/ 2>/dev/null || true",
    "binary:create-launchers": "node scripts/create-launchers.js",
    "binary:all": "npm run binary:build",
    "prepublishOnly": "npm run build",
    "publish:beta": "npm publish --tag beta",
    "publish:alpha": "npm publish --tag alpha",
    "publish:latest": "npm publish",
    "publish:dry": "npm publish --dry-run"
  },
  "files": [
    "dist/",
    "bin/",
    "package.json",
    "src/",
    "docs/",
    "scripts/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "keywords": [
    "ai",
    "swarm",
    "orchestration",
    "neural-networks",
    "coordination",
    "wasm",
    "web-dashboard",
    "typescript",
    "web-interface"
  ],
  "dependencies": {
    "@ag-ui/core": "^0.0.35",
    "@anthropic-ai/claude-code": "^1.0.81",
    "@babel/plugin-syntax-optional-chaining": "^7.8.3",
    "@floating-ui/dom": "^1.7.3",
    "@godaddy/terminus": "^4.12.1",
    "@lancedb/lancedb": "^0.21.2",
    "@logtape/file": "^1.0.4",
    "@logtape/logtape": "^1.0.4",
    "@octokit/rest": "^22.0.0",
    "@sveltejs/adapter-node": "^5.3.0",
    "@sveltejs/kit": "^2.31.0",
    "@sveltejs/vite-plugin-svelte": "^6.1.2",
    "@tailwindcss/typography": "^0.5.16",
    "@types/better-sqlite3": "^7.6.13",
    "@types/socket.io": "^3.0.2",
    "acorn": "^8.15.0",
    "autoprefixer": "^10.4.21",
    "better-sqlite3": "^12.2.0",
    "chalk": "^5.5.0",
    "commander": "^12.1.0",
    "compression": "^1.8.1",
    "connect-redis": "^9.0.0",
    "cors": "^2.8.5",
    "escomplex": "^1.3.0",
    "esprima": "^4.0.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "express-session": "^1.18.2",
    "express-slow-down": "^3.0.0",
    "express-status-monitor": "^1.3.4",
    "express-validator": "^7.2.1",
    "express-ws": "^5.0.2",
    "fs-extra": "^11.3.1",
    "helmet": "^8.1.0",
    "http-proxy-middleware": "^3.0.5",
    "ioredis": "^5.7.0",
    "js-yaml": "^4.1.0",
    "kuzu": "^0.7.1",
    "listr2": "^8.2.8",
    "lucide-svelte": "^0.539.0",
    "markdown-it": "^14.1.0",
    "morgan": "^1.10.1",
    "nanoid": "^5.0.10",
    "node-cron": "^4.2.1",
    "on-finished": "^2.4.1",
    "path-to-regexp": "^8.2.0",
    "playwright": "^1.54.2",
    "postcss": "^8.5.6",
    "prism-themes": "^1.9.0",
    "prismjs": "^1.30.0",
    "prom-client": "^15.1.3",
    "redis": "^5.8.1",
    "response-time": "^2.3.4",
    "semver": "^7.6.3",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "svelte": "^5.38.1",
    "svelte-check": "^4.3.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tailwindcss": "^4.1.12",
    "typescript": "^5.9.2",
    "uuid": "^11.1.0",
    "vite": "^7.1.2",
    "vitest": "^3.2.4",
    "ws": "^8.18.3",
    "yaml": "^2.6.1",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.1.4",
    "@types/blessed": "^0.1.25",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.2",
    "@types/fs-extra": "^11.0.4",
    "@types/js-yaml": "^4.0.9",
    "@types/markdown-it": "^14.1.2",
    "@types/node": "^22.17.1",
    "@types/node-cron": "^3.0.11",
    "@types/on-finished": "^2.3.5",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "@types/response-time": "^2.3.9",
    "@types/semver": "^7.5.8",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.18.1",
    "@vercel/ncc": "^0.38.3",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "@yao-pkg/pkg": "^6.6.0",
    "boxednode": "^2.4.4",
    "caxa": "^3.0.1",
    "concurrently": "^9.1.1",
    "dependency-cruiser": "^17.0.1",
    "esbuild": "^0.25.9",
    "execa": "^9.6.0",
    "fast-check": "^4.2.0",
    "glob": "^11.0.0",
    "happy-dom": "^18.0.1",
    "jscodeshift": "^17.1.1",
    "nodemon": "^3.1.7",
    "prettier": "^3.6.2",
    "react-devtools-core": "^4.28.5",
    "tsx": "^4.20.4"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-org/claude-code-zen.git"
  },
  "author": "Claude Code Zen Team",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/your-org/claude-code-zen/issues"
  },
  "homepage": "https://github.com/your-org/claude-code-zen#readme"
}
