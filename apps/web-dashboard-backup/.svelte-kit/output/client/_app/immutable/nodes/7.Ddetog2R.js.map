{"version":3,"file":"7.Ddetog2R.js","sources":["../../../../../../src/routes/roadmap/+page.svelte"],"sourcesContent":["<!--\n  @component Visionary Roadmap Planning System\n  Strategic planning interface with timeline visualization, milestone tracking, and roadmap management\n-->\n\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { writable } from 'svelte/store';\n\n  // Roadmap state management\n  const roadmaps = writable([]);\n  const milestones = writable([]);\n  const visionStatements = writable([]);\n  const strategicGoals = writable([]);\n  const roadmapMetrics = writable({\n    totalRoadmaps: 0,\n    activeMilestones: 0,\n    completionRate: 0,\n    strategicAlignment: 0\n  });\n\n  // View state\n  let selectedTimeframe = '12months';\n  let selectedRoadmap = null;\n  let viewMode = 'timeline'; // timeline, gantt, kanban\n  let showCompleted = true;\n  let filterPriority = 'all';\n\n  // Mock data for development\n  let mockRoadmaps = [\n    {\n      id: 'rm-001',\n      title: 'AI Platform Evolution 2024-2025',\n      description: 'Comprehensive roadmap for advancing AI capabilities and platform maturity',\n      vision: 'Become the leading AI-powered development platform with autonomous coding capabilities',\n      status: 'active',\n      priority: 'critical',\n      owner: 'AI Strategy Team',\n      startDate: new Date('2024-01-01'),\n      endDate: new Date('2025-12-31'),\n      completion: 45,\n      strategicThemes: ['AI Advancement', 'Platform Maturity', 'Developer Experience'],\n      stakeholders: ['Engineering', 'Product', 'AI Research', 'Customer Success'],\n      riskLevel: 'medium',\n      budget: '$2.5M',\n      dependencies: ['Infrastructure Scaling', 'Model Training'],\n      kpis: ['User Adoption', 'Code Quality', 'Response Time', 'Customer Satisfaction']\n    },\n    {\n      id: 'rm-002',\n      title: 'Developer Experience Enhancement',\n      description: 'Improving developer tools, documentation, and workflow optimization',\n      vision: 'Create the most intuitive and powerful development experience in the industry',\n      status: 'planning',\n      priority: 'high',\n      owner: 'Developer Relations',\n      startDate: new Date('2024-06-01'),\n      endDate: new Date('2024-12-31'),\n      completion: 15,\n      strategicThemes: ['Developer Productivity', 'Tool Integration', 'Learning Resources'],\n      stakeholders: ['Developer Community', 'Engineering', 'Documentation'],\n      riskLevel: 'low',\n      budget: '$800K',\n      dependencies: ['Platform Stability'],\n      kpis: ['Developer Satisfaction', 'Tool Adoption', 'Documentation Usage']\n    },\n    {\n      id: 'rm-003',\n      title: 'Security & Compliance Framework',\n      description: 'Implementing enterprise-grade security and regulatory compliance',\n      vision: 'Achieve SOC2 Type II and enterprise security standards while maintaining agility',\n      status: 'active',\n      priority: 'critical',\n      owner: 'Security Team',\n      startDate: new Date('2024-03-01'),\n      endDate: new Date('2024-09-30'),\n      completion: 75,\n      strategicThemes: ['Security', 'Compliance', 'Risk Management'],\n      stakeholders: ['Security', 'Legal', 'Compliance', 'Engineering'],\n      riskLevel: 'high',\n      budget: '$1.2M',\n      dependencies: ['Infrastructure Audit', 'Legal Review'],\n      kpis: ['Security Score', 'Compliance Rate', 'Incident Response', 'Audit Results']\n    }\n  ];\n\n  let mockMilestones = [\n    {\n      id: 'ms-001',\n      roadmapId: 'rm-001',\n      title: 'AI Model v3.0 Release',\n      description: 'Launch of next-generation AI model with improved reasoning capabilities',\n      type: 'major-release',\n      status: 'completed',\n      priority: 'critical',\n      dueDate: new Date('2024-08-15'),\n      completedDate: new Date('2024-08-12'),\n      owner: 'AI Research Team',\n      deliverables: ['Model Training', 'Performance Testing', 'Integration Testing', 'Documentation'],\n      dependencies: ['Infrastructure Scaling', 'Model Architecture'],\n      riskFactors: ['Training Data Quality', 'Compute Resources'],\n      successCriteria: ['95% accuracy', '50% performance improvement', 'Zero critical bugs']\n    },\n    {\n      id: 'ms-002',\n      roadmapId: 'rm-001',\n      title: 'Autonomous Code Generation Beta',\n      description: 'Beta release of autonomous code generation capabilities',\n      type: 'feature-release',\n      status: 'in-progress',\n      priority: 'high',\n      dueDate: new Date('2024-12-01'),\n      completedDate: null,\n      owner: 'AI Engineering',\n      deliverables: ['Code Generation Engine', 'Safety Controls', 'User Interface', 'Beta Testing'],\n      dependencies: ['AI Model v3.0', 'Security Framework'],\n      riskFactors: ['Code Quality', 'Security Vulnerabilities', 'User Adoption'],\n      successCriteria: ['90% code correctness', '1000 beta users', 'Positive feedback']\n    },\n    {\n      id: 'ms-003',\n      roadmapId: 'rm-002',\n      title: 'Developer Portal Redesign',\n      description: 'Complete redesign of developer portal with improved UX',\n      type: 'improvement',\n      status: 'planning',\n      priority: 'medium',\n      dueDate: new Date('2024-10-15'),\n      completedDate: null,\n      owner: 'UX Team',\n      deliverables: ['UI/UX Design', 'Frontend Development', 'Content Migration', 'User Testing'],\n      dependencies: ['User Research', 'Design System'],\n      riskFactors: ['Content Migration', 'User Adoption'],\n      successCriteria: ['50% better task completion', 'Improved user ratings', 'Reduced support tickets']\n    },\n    {\n      id: 'ms-004',\n      roadmapId: 'rm-003',\n      title: 'SOC2 Type II Certification',\n      description: 'Achieve SOC2 Type II certification for enterprise customers',\n      type: 'compliance',\n      status: 'in-progress',\n      priority: 'critical',\n      dueDate: new Date('2024-09-30'),\n      completedDate: null,\n      owner: 'Compliance Team',\n      deliverables: ['Security Controls', 'Process Documentation', 'Third-party Audit', 'Certification'],\n      dependencies: ['Security Framework', 'Process Implementation'],\n      riskFactors: ['Audit Findings', 'Control Gaps', 'Timeline Delays'],\n      successCriteria: ['Pass audit', 'Zero critical findings', 'Certification achieved']\n    }\n  ];\n\n  let mockVisionStatements = [\n    {\n      id: 'vs-001',\n      title: 'AI-First Development Platform',\n      description: 'To become the world\\'s leading AI-powered development platform that empowers developers to build exceptional software with unprecedented speed and quality.',\n      timeframe: '3-5 years',\n      strategicPillars: ['AI Innovation', 'Developer Experience', 'Platform Excellence'],\n      successMetrics: ['Market Leadership', 'Developer Adoption', 'Customer Satisfaction'],\n      status: 'active',\n      owner: 'Chief Product Officer',\n      lastUpdated: new Date('2024-01-15')\n    },\n    {\n      id: 'vs-002',\n      title: 'Autonomous Software Engineering',\n      description: 'Achieve autonomous software engineering capabilities where AI can independently design, develop, test, and deploy software solutions.',\n      timeframe: '5-10 years',\n      strategicPillars: ['AI Autonomy', 'Quality Assurance', 'Deployment Excellence'],\n      successMetrics: ['Autonomous Deployment Rate', 'Code Quality Score', 'Time to Market'],\n      status: 'research',\n      owner: 'Chief Technology Officer',\n      lastUpdated: new Date('2024-02-01')\n    }\n  ];\n\n  onMount(async () => {\n    // Load real data from APIs\n    await loadRoadmaps();\n    await loadMilestones();\n    await loadVisionStatements();\n    await loadRoadmapMetrics();\n  });\n\n  async function loadRoadmaps() {\n    try {\n      const response = await fetch('/api/roadmap/roadmaps');\n      if (response.ok) {\n        const data = await response.json();\n        roadmaps.set(data.roadmaps || mockRoadmaps);\n      } else {\n        roadmaps.set(mockRoadmaps);\n      }\n    } catch (error) {\n      console.error('Failed to load roadmaps:', error);\n      roadmaps.set(mockRoadmaps);\n    }\n  }\n\n  async function loadMilestones() {\n    try {\n      const response = await fetch('/api/roadmap/milestones');\n      if (response.ok) {\n        const data = await response.json();\n        milestones.set(data.milestones || mockMilestones);\n      } else {\n        milestones.set(mockMilestones);\n      }\n    } catch (error) {\n      console.error('Failed to load milestones:', error);\n      milestones.set(mockMilestones);\n    }\n  }\n\n  async function loadVisionStatements() {\n    try {\n      const response = await fetch('/api/roadmap/vision');\n      if (response.ok) {\n        const data = await response.json();\n        visionStatements.set(data.visions || mockVisionStatements);\n      } else {\n        visionStatements.set(mockVisionStatements);\n      }\n    } catch (error) {\n      console.error('Failed to load vision statements:', error);\n      visionStatements.set(mockVisionStatements);\n    }\n  }\n\n  async function loadRoadmapMetrics() {\n    try {\n      const response = await fetch('/api/roadmap/metrics');\n      if (response.ok) {\n        const data = await response.json();\n        roadmapMetrics.set(data);\n      } else {\n        // Calculate mock metrics\n        const totalRoadmaps = mockRoadmaps.length;\n        const activeMilestones = mockMilestones.filter(m => m.status === 'in-progress' || m.status === 'planning').length;\n        const completedMilestones = mockMilestones.filter(m => m.status === 'completed').length;\n        const completionRate = Math.round((completedMilestones / mockMilestones.length) * 100);\n        \n        roadmapMetrics.set({\n          totalRoadmaps,\n          activeMilestones,\n          completionRate,\n          strategicAlignment: 87\n        });\n      }\n    } catch (error) {\n      console.error('Failed to load roadmap metrics:', error);\n    }\n  }\n\n  function getStatusColor(status) {\n    switch (status) {\n      case 'active': return 'text-green-400';\n      case 'planning': return 'text-yellow-400';\n      case 'completed': return 'text-blue-400';\n      case 'on-hold': return 'text-gray-400';\n      case 'cancelled': return 'text-red-400';\n      case 'in-progress': return 'text-blue-400';\n      default: return 'text-gray-400';\n    }\n  }\n\n  function getPriorityColor(priority) {\n    switch (priority) {\n      case 'critical': return 'text-red-400 bg-red-900/20';\n      case 'high': return 'text-orange-400 bg-orange-900/20';\n      case 'medium': return 'text-yellow-400 bg-yellow-900/20';\n      case 'low': return 'text-blue-400 bg-blue-900/20';\n      default: return 'text-gray-400 bg-gray-900/20';\n    }\n  }\n\n  function getRiskColor(risk) {\n    switch (risk) {\n      case 'high': return 'text-red-400';\n      case 'medium': return 'text-yellow-400';\n      case 'low': return 'text-green-400';\n      default: return 'text-gray-400';\n    }\n  }\n\n  function getMilestoneTypeIcon(type) {\n    switch (type) {\n      case 'major-release': return '🚀';\n      case 'feature-release': return '✨';\n      case 'improvement': return '🔧';\n      case 'compliance': return '🛡️';\n      case 'research': return '🔬';\n      default: return '📌';\n    }\n  }\n\n  function formatDate(date) {\n    return new Intl.DateTimeFormat('en-US', { \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric' \n    }).format(date);\n  }\n\n  function calculateDaysRemaining(dueDate) {\n    const now = new Date();\n    const diffTime = dueDate.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  }\n\n  function selectRoadmap(roadmap) {\n    selectedRoadmap = roadmap;\n  }\n\n  function createNewRoadmap() {\n    window.location.href = '/roadmap/create';\n  }\n\n  function createNewMilestone() {\n    window.location.href = '/roadmap/milestone/create';\n  }\n\n  // Filter milestones based on selected roadmap\n  $: filteredMilestones = selectedRoadmap \n    ? $milestones.filter(m => m.roadmapId === selectedRoadmap.id)\n    : $milestones;\n\n  // Timeline calculation for visualization\n  $: timelineData = calculateTimelineData($roadmaps, $milestones);\n\n  function calculateTimelineData(roadmaps, milestones) {\n    // Calculate timeline positions and durations\n    const now = new Date();\n    const startDate = new Date(Math.min(...roadmaps.map(r => r.startDate.getTime())));\n    const endDate = new Date(Math.max(...roadmaps.map(r => r.endDate.getTime())));\n    \n    return {\n      startDate,\n      endDate,\n      totalDays: Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)),\n      currentPosition: Math.ceil((now.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24))\n    };\n  }\n</script>\n\n<svelte:head>\n  <title>Visionary Roadmap - Strategic Planning - Claude Code Zen</title>\n</svelte:head>\n\n<div class=\"min-h-screen bg-gray-900 text-white\">\n  <!-- Header -->\n  <div class=\"bg-gray-800 border-b border-gray-700 p-6\">\n    <div class=\"max-w-7xl mx-auto\">\n      <div class=\"flex justify-between items-start mb-4\">\n        <div>\n          <h1 class=\"text-3xl font-bold text-purple-400 mb-2\">🗺️ Visionary Roadmap</h1>\n          <p class=\"text-gray-300\">Strategic planning and roadmap visualization</p>\n        </div>\n        <div class=\"flex gap-3\">\n          <button \n            on:click={createNewRoadmap}\n            class=\"bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded-lg transition-colors\"\n          >\n            ➕ New Roadmap\n          </button>\n          <button \n            on:click={createNewMilestone}\n            class=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg transition-colors\"\n          >\n            📌 New Milestone\n          </button>\n        </div>\n      </div>\n      \n      <!-- Metrics Overview -->\n      <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        <div class=\"bg-gray-700 rounded-lg p-3\">\n          <div class=\"text-sm text-gray-400\">Total Roadmaps</div>\n          <div class=\"text-purple-400 font-semibold\">{$roadmapMetrics.totalRoadmaps}</div>\n        </div>\n        <div class=\"bg-gray-700 rounded-lg p-3\">\n          <div class=\"text-sm text-gray-400\">Active Milestones</div>\n          <div class=\"text-blue-400 font-semibold\">{$roadmapMetrics.activeMilestones}</div>\n        </div>\n        <div class=\"bg-gray-700 rounded-lg p-3\">\n          <div class=\"text-sm text-gray-400\">Completion Rate</div>\n          <div class=\"text-green-400 font-semibold\">{$roadmapMetrics.completionRate}%</div>\n        </div>\n        <div class=\"bg-gray-700 rounded-lg p-3\">\n          <div class=\"text-sm text-gray-400\">Strategic Alignment</div>\n          <div class=\"text-yellow-400 font-semibold\">{$roadmapMetrics.strategicAlignment}%</div>\n        </div>\n      </div>\n\n      <!-- View Controls -->\n      <div class=\"mt-4 flex flex-wrap gap-4 items-center\">\n        <div class=\"flex gap-2\">\n          <button \n            class=\"px-3 py-1 rounded text-sm {viewMode === 'timeline' ? 'bg-blue-600' : 'bg-gray-600'} transition-colors\"\n            on:click={() => viewMode = 'timeline'}\n          >\n            📅 Timeline\n          </button>\n          <button \n            class=\"px-3 py-1 rounded text-sm {viewMode === 'gantt' ? 'bg-blue-600' : 'bg-gray-600'} transition-colors\"\n            on:click={() => viewMode = 'gantt'}\n          >\n            📊 Gantt\n          </button>\n          <button \n            class=\"px-3 py-1 rounded text-sm {viewMode === 'kanban' ? 'bg-blue-600' : 'bg-gray-600'} transition-colors\"\n            on:click={() => viewMode = 'kanban'}\n          >\n            📋 Kanban\n          </button>\n        </div>\n        \n        <select \n          bind:value={selectedTimeframe}\n          class=\"bg-gray-700 border border-gray-600 rounded px-3 py-1 text-sm\"\n        >\n          <option value=\"3months\">3 Months</option>\n          <option value=\"6months\">6 Months</option>\n          <option value=\"12months\">12 Months</option>\n          <option value=\"24months\">24 Months</option>\n          <option value=\"all\">All Time</option>\n        </select>\n        \n        <select \n          bind:value={filterPriority}\n          class=\"bg-gray-700 border border-gray-600 rounded px-3 py-1 text-sm\"\n        >\n          <option value=\"all\">All Priorities</option>\n          <option value=\"critical\">Critical</option>\n          <option value=\"high\">High</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"low\">Low</option>\n        </select>\n        \n        <label class=\"flex items-center gap-2 text-sm\">\n          <input \n            type=\"checkbox\" \n            bind:checked={showCompleted}\n            class=\"rounded\"\n          />\n          Show Completed\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"max-w-7xl mx-auto p-6 grid grid-cols-1 lg:grid-cols-4 gap-6\">\n    <!-- Sidebar - Roadmaps List -->\n    <div class=\"lg:col-span-1 space-y-6\">\n      <!-- Vision Statements -->\n      <div class=\"bg-gray-800 rounded-lg p-4 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-3\">🎯 Vision Statements</h3>\n        <div class=\"space-y-3\">\n          {#each $visionStatements as vision}\n            <div class=\"bg-gray-700 rounded-lg p-3\">\n              <h4 class=\"font-medium text-purple-400 mb-1\">{vision.title}</h4>\n              <p class=\"text-gray-300 text-xs mb-2\">{vision.description}</p>\n              <div class=\"flex justify-between text-xs text-gray-400\">\n                <span>{vision.timeframe}</span>\n                <span class=\"text-blue-400\">{vision.status.toUpperCase()}</span>\n              </div>\n            </div>\n          {/each}\n        </div>\n      </div>\n\n      <!-- Roadmaps List -->\n      <div class=\"bg-gray-800 rounded-lg p-4 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-3\">🗺️ Active Roadmaps</h3>\n        <div class=\"space-y-2\">\n          {#each $roadmaps as roadmap}\n            <button\n              class=\"w-full text-left bg-gray-700 hover:bg-gray-600 p-3 rounded-lg transition-colors {selectedRoadmap?.id === roadmap.id ? 'ring-2 ring-purple-400' : ''}\"\n              on:click={() => selectRoadmap(roadmap)}\n            >\n              <div class=\"flex justify-between items-start mb-2\">\n                <h4 class=\"font-medium text-sm\">{roadmap.title}</h4>\n                <span class=\"px-2 py-1 rounded text-xs {getPriorityColor(roadmap.priority)}\">\n                  {roadmap.priority.toUpperCase()}\n                </span>\n              </div>\n              <div class=\"text-xs text-gray-400 mb-2\">{roadmap.description}</div>\n              <div class=\"flex justify-between items-center\">\n                <span class=\"text-xs {getStatusColor(roadmap.status)}\">● {roadmap.status.toUpperCase()}</span>\n                <div class=\"text-xs text-gray-400\">\n                  <div class=\"w-16 bg-gray-600 rounded-full h-1\">\n                    <div class=\"bg-blue-400 h-1 rounded-full\" style=\"width: {roadmap.completion}%\"></div>\n                  </div>\n                  <span>{roadmap.completion}%</span>\n                </div>\n              </div>\n            </button>\n          {/each}\n        </div>\n      </div>\n\n      <!-- Quick Stats -->\n      <div class=\"bg-gray-800 rounded-lg p-4 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-3\">📈 Quick Stats</h3>\n        <div class=\"space-y-3 text-sm\">\n          <div class=\"flex justify-between\">\n            <span class=\"text-gray-400\">On Track</span>\n            <span class=\"text-green-400\">{$roadmaps.filter(r => r.status === 'active').length}</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span class=\"text-gray-400\">Planning</span>\n            <span class=\"text-yellow-400\">{$roadmaps.filter(r => r.status === 'planning').length}</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span class=\"text-gray-400\">At Risk</span>\n            <span class=\"text-red-400\">{$roadmaps.filter(r => r.riskLevel === 'high').length}</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span class=\"text-gray-400\">Completed</span>\n            <span class=\"text-blue-400\">{$roadmaps.filter(r => r.status === 'completed').length}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Main Content Area -->\n    <div class=\"lg:col-span-3 space-y-6\">\n      {#if selectedRoadmap}\n        <!-- Selected Roadmap Details -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <div class=\"flex justify-between items-start mb-4\">\n            <div>\n              <h2 class=\"text-2xl font-semibold text-purple-400 mb-2\">{selectedRoadmap.title}</h2>\n              <p class=\"text-gray-300 mb-3\">{selectedRoadmap.description}</p>\n              <div class=\"bg-gray-700 rounded-lg p-3 mb-3\">\n                <div class=\"text-sm text-gray-400 mb-1\">Vision:</div>\n                <div class=\"text-gray-300 italic\">\"{selectedRoadmap.vision}\"</div>\n              </div>\n            </div>\n            <div class=\"text-right\">\n              <div class=\"px-3 py-1 rounded text-sm {getPriorityColor(selectedRoadmap.priority)} mb-2\">\n                {selectedRoadmap.priority.toUpperCase()}\n              </div>\n              <div class=\"text-sm text-gray-400\">\n                <div>Owner: {selectedRoadmap.owner}</div>\n                <div>Budget: {selectedRoadmap.budget}</div>\n                <div class=\"text-{getRiskColor(selectedRoadmap.riskLevel)}\">Risk: {selectedRoadmap.riskLevel.toUpperCase()}</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Progress Bar -->\n          <div class=\"mb-4\">\n            <div class=\"flex justify-between text-sm mb-1\">\n              <span class=\"text-gray-400\">Overall Progress</span>\n              <span class=\"text-blue-400\">{selectedRoadmap.completion}%</span>\n            </div>\n            <div class=\"w-full bg-gray-700 rounded-full h-3\">\n              <div class=\"bg-blue-400 h-3 rounded-full\" style=\"width: {selectedRoadmap.completion}%\"></div>\n            </div>\n          </div>\n\n          <!-- Roadmap Details Grid -->\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            <div>\n              <div class=\"text-sm text-gray-400 mb-1\">Timeline</div>\n              <div class=\"text-gray-300\">\n                {formatDate(selectedRoadmap.startDate)} - {formatDate(selectedRoadmap.endDate)}\n              </div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400 mb-1\">Strategic Themes</div>\n              <div class=\"flex flex-wrap gap-1\">\n                {#each selectedRoadmap.strategicThemes as theme}\n                  <span class=\"bg-purple-600 text-purple-100 px-2 py-1 rounded text-xs\">{theme}</span>\n                {/each}\n              </div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400 mb-1\">Key Stakeholders</div>\n              <div class=\"text-gray-300 text-sm\">{selectedRoadmap.stakeholders.join(', ')}</div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400 mb-1\">Success Metrics</div>\n              <div class=\"text-gray-300 text-sm\">{selectedRoadmap.kpis.join(', ')}</div>\n            </div>\n          </div>\n\n          <!-- Dependencies -->\n          {#if selectedRoadmap.dependencies.length > 0}\n            <div class=\"mb-4\">\n              <div class=\"text-sm text-gray-400 mb-2\">Dependencies</div>\n              <div class=\"flex flex-wrap gap-2\">\n                {#each selectedRoadmap.dependencies as dependency}\n                  <span class=\"bg-yellow-600 text-yellow-100 px-2 py-1 rounded text-sm\">⚠️ {dependency}</span>\n                {/each}\n              </div>\n            </div>\n          {/if}\n        </div>\n\n        <!-- Roadmap Milestones -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-xl font-semibold\">📌 Roadmap Milestones</h3>\n            <div class=\"text-sm text-gray-400\">\n              {filteredMilestones.filter(m => m.status === 'completed').length} of {filteredMilestones.length} completed\n            </div>\n          </div>\n\n          <!-- Timeline View -->\n          {#if viewMode === 'timeline'}\n            <div class=\"space-y-4\">\n              {#each filteredMilestones as milestone}\n                <div class=\"bg-gray-700 rounded-lg p-4 border-l-4 {milestone.status === 'completed' ? 'border-green-400' : milestone.status === 'in-progress' ? 'border-blue-400' : 'border-yellow-400'}\">\n                  <div class=\"flex justify-between items-start mb-3\">\n                    <div class=\"flex items-start gap-3\">\n                      <span class=\"text-2xl\">{getMilestoneTypeIcon(milestone.type)}</span>\n                      <div>\n                        <h4 class=\"font-semibold text-lg\">{milestone.title}</h4>\n                        <p class=\"text-gray-300 text-sm mb-2\">{milestone.description}</p>\n                        <div class=\"flex items-center gap-4 text-sm\">\n                          <span class=\"px-2 py-1 rounded text-xs {getPriorityColor(milestone.priority)}\">\n                            {milestone.priority.toUpperCase()}\n                          </span>\n                          <span class=\"text-purple-400\">{milestone.type.replace('-', ' ').toUpperCase()}</span>\n                          <span class=\"{getStatusColor(milestone.status)}\">● {milestone.status.replace('-', ' ').toUpperCase()}</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"text-right text-sm\">\n                      <div class=\"text-gray-400\">Due: {formatDate(milestone.dueDate)}</div>\n                      {#if milestone.status === 'completed'}\n                        <div class=\"text-green-400\">✅ Completed: {formatDate(milestone.completedDate)}</div>\n                      {:else}\n                        {@const daysRemaining = calculateDaysRemaining(milestone.dueDate)}\n                        <div class=\"text-{daysRemaining < 0 ? 'red' : daysRemaining < 7 ? 'yellow' : 'blue'}-400\">\n                          {daysRemaining < 0 ? 'Overdue by' : 'Due in'} {Math.abs(daysRemaining)} days\n                        </div>\n                      {/if}\n                      <div class=\"text-gray-400\">Owner: {milestone.owner}</div>\n                    </div>\n                  </div>\n\n                  <!-- Deliverables -->\n                  <div class=\"mb-3\">\n                    <div class=\"text-sm text-gray-400 mb-1\">Deliverables:</div>\n                    <div class=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                      {#each milestone.deliverables as deliverable}\n                        <div class=\"bg-gray-600 px-2 py-1 rounded text-xs text-center\">\n                          {deliverable}\n                        </div>\n                      {/each}\n                    </div>\n                  </div>\n\n                  <!-- Dependencies & Risks -->\n                  <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-3 text-sm\">\n                    <div>\n                      <div class=\"text-gray-400 mb-1\">Dependencies:</div>\n                      <div class=\"space-y-1\">\n                        {#each milestone.dependencies as dependency}\n                          <div class=\"text-yellow-400\">🔗 {dependency}</div>\n                        {/each}\n                      </div>\n                    </div>\n                    <div>\n                      <div class=\"text-gray-400 mb-1\">Risk Factors:</div>\n                      <div class=\"space-y-1\">\n                        {#each milestone.riskFactors as risk}\n                          <div class=\"text-orange-400\">⚠️ {risk}</div>\n                        {/each}\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Success Criteria -->\n                  <div class=\"mb-3\">\n                    <div class=\"text-sm text-gray-400 mb-1\">Success Criteria:</div>\n                    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-2\">\n                      {#each milestone.successCriteria as criteria}\n                        <div class=\"bg-green-900/20 text-green-400 px-2 py-1 rounded text-xs\">\n                          ✓ {criteria}\n                        </div>\n                      {/each}\n                    </div>\n                  </div>\n\n                  <!-- Action Buttons -->\n                  <div class=\"flex gap-2\">\n                    <a \n                      href=\"/roadmap/milestone/{milestone.id}\" \n                      class=\"bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-sm transition-colors\"\n                    >\n                      👁️ View Details\n                    </a>\n                    <button class=\"bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-sm transition-colors\">\n                      📝 Update Progress\n                    </button>\n                    <button class=\"bg-purple-600 hover:bg-purple-700 px-3 py-1 rounded text-sm transition-colors\">\n                      💬 Add Comment\n                    </button>\n                  </div>\n                </div>\n              {/each}\n            </div>\n          {/if}\n\n          <!-- Gantt View Placeholder -->\n          {#if viewMode === 'gantt'}\n            <div class=\"bg-gray-700 rounded-lg p-8 text-center\">\n              <div class=\"text-gray-400 mb-2\">📊 Gantt Chart View</div>\n              <div class=\"text-gray-500 text-sm\">Interactive Gantt chart visualization coming soon</div>\n            </div>\n          {/if}\n\n          <!-- Kanban View -->\n          {#if viewMode === 'kanban'}\n            <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              {#each ['planning', 'in-progress', 'review', 'completed'] as status}\n                <div class=\"bg-gray-700 rounded-lg p-4\">\n                  <h4 class=\"font-semibold mb-3 text-center {getStatusColor(status)}\">\n                    {status.replace('-', ' ').toUpperCase()}\n                  </h4>\n                  <div class=\"space-y-3\">\n                    {#each filteredMilestones.filter(m => m.status === status || (status === 'review' && m.status === 'under-review')) as milestone}\n                      <div class=\"bg-gray-600 rounded-lg p-3\">\n                        <div class=\"flex items-center gap-2 mb-2\">\n                          <span>{getMilestoneTypeIcon(milestone.type)}</span>\n                          <h5 class=\"font-medium text-sm\">{milestone.title}</h5>\n                        </div>\n                        <div class=\"text-xs text-gray-400 mb-2\">{milestone.description}</div>\n                        <div class=\"flex justify-between items-center text-xs\">\n                          <span class=\"px-2 py-1 rounded {getPriorityColor(milestone.priority)}\">\n                            {milestone.priority.charAt(0).toUpperCase()}\n                          </span>\n                          <span class=\"text-gray-400\">{formatDate(milestone.dueDate)}</span>\n                        </div>\n                      </div>\n                    {/each}\n                  </div>\n                </div>\n              {/each}\n            </div>\n          {/if}\n        </div>\n      {:else}\n        <!-- No Roadmap Selected -->\n        <div class=\"bg-gray-800 rounded-lg p-8 border border-gray-700 text-center\">\n          <div class=\"text-6xl mb-4\">🗺️</div>\n          <h2 class=\"text-2xl font-semibold text-purple-400 mb-3\">Select a Roadmap</h2>\n          <p class=\"text-gray-400 mb-6\">Choose a roadmap from the sidebar to view its details and milestones</p>\n          <button \n            on:click={createNewRoadmap}\n            class=\"bg-purple-600 hover:bg-purple-700 px-6 py-3 rounded-lg transition-colors\"\n          >\n            ➕ Create New Roadmap\n          </button>\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style>\n  :global(body) {\n    background-color: #111827;\n  }\n</style>"],"names":["roadmaps","writable","milestones","visionStatements","roadmapMetrics","selectedTimeframe","selectedRoadmap","viewMode","showCompleted","filterPriority","mockRoadmaps","mockMilestones","mockVisionStatements","onMount","loadRoadmaps","loadMilestones","loadVisionStatements","loadRoadmapMetrics","response","data","error","totalRoadmaps","activeMilestones","m","completedMilestones","completionRate","getStatusColor","status","getPriorityColor","priority","getRiskColor","risk","getMilestoneTypeIcon","type","formatDate","date","calculateDaysRemaining","dueDate","now","diffTime","selectRoadmap","roadmap","$.set","createNewRoadmap","createNewMilestone","calculateTimelineData","startDate","r","endDate","filteredMilestones","$milestones","$.get","timelineData","$roadmaps","$.each","div_19","$visionStatements","vision","$.untrack","div_23","$.event","button_5","theme","dependency","div_66","milestone","daysRemaining","$.derived_safe_equal","$.set_text","text_39","$0","deliverable","criteria","$$render","consequent_2","consequent_3","div_92","consequent_4","consequent_5","alternate_1","$roadmapMetrics","$.set_class","button_2","button_3","button_4","$.bind_select_value","select","$$value","select_1","$.bind_checked","input"],"mappings":"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"}