{"version":3,"file":"5.DYPHkrlk.js","sources":["../../../../../../src/routes/dev-communication/+page.svelte"],"sourcesContent":["<!--\n  @component Development Communication Hub\n  Central hub for developer-system communication and coordination\n-->\n\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { writable } from 'svelte/store';\n\n  // Communication state\n  const messages = writable([]);\n  const currentMessage = writable('');\n  const systemStatus = writable('ready');\n  const activeAgents = writable([]);\n\n  // Communication types\n  const communicationTypes = [\n    { id: 'direct', name: 'üí¨ Direct Command', desc: 'Direct system commands and queries' },\n    { id: 'coordination', name: 'ü§ù Agent Coordination', desc: 'Multi-agent task coordination' },\n    { id: 'analysis', name: 'üîç Code Analysis', desc: 'Deep code analysis requests' },\n    { id: 'planning', name: 'üìã Project Planning', desc: 'Strategic planning and roadmapping' },\n    { id: 'debugging', name: 'üêõ Debug Session', desc: 'Interactive debugging assistance' },\n    { id: 'review', name: 'üëÅÔ∏è Code Review', desc: 'Comprehensive code review requests' }\n  ];\n\n  let selectedType = 'direct';\n  let messageHistory = [];\n  let isProcessing = false;\n\n  onMount(async () => {\n    // Load message history\n    await loadMessageHistory();\n    // Connect to system status\n    await connectSystemStatus();\n  });\n\n  async function loadMessageHistory() {\n    try {\n      const response = await fetch('/api/dev-communication/history');\n      if (response.ok) {\n        messageHistory = await response.json();\n      }\n    } catch (error) {\n      console.error('Failed to load message history:', error);\n    }\n  }\n\n  async function connectSystemStatus() {\n    // WebSocket connection for real-time status\n    try {\n      const response = await fetch('/api/system/status');\n      if (response.ok) {\n        const status = await response.json();\n        systemStatus.set(status.status);\n        activeAgents.set(status.activeAgents || []);\n      }\n    } catch (error) {\n      console.error('Failed to connect to system status:', error);\n    }\n  }\n\n  async function sendMessage() {\n    if (!$currentMessage.trim() || isProcessing) return;\n    \n    isProcessing = true;\n    const message = {\n      id: Date.now(),\n      type: selectedType,\n      content: $currentMessage,\n      timestamp: new Date().toISOString(),\n      status: 'processing'\n    };\n\n    messageHistory = [...messageHistory, message];\n    currentMessage.set('');\n\n    try {\n      const response = await fetch('/api/dev-communication/send', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          type: selectedType,\n          message: message.content,\n          requestId: message.id\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        message.status = 'completed';\n        message.response = result.response;\n        message.agents = result.assignedAgents;\n      } else {\n        message.status = 'error';\n        message.error = 'Communication failed';\n      }\n    } catch (error) {\n      message.status = 'error';\n      message.error = error.message;\n    }\n\n    messageHistory = [...messageHistory];\n    isProcessing = false;\n  }\n\n  async function clearHistory() {\n    messageHistory = [];\n    try {\n      await fetch('/api/dev-communication/clear', { method: 'POST' });\n    } catch (error) {\n      console.error('Failed to clear history:', error);\n    }\n  }\n\n  function getStatusColor(status) {\n    switch (status) {\n      case 'processing': return 'text-yellow-400';\n      case 'completed': return 'text-green-400';\n      case 'error': return 'text-red-400';\n      default: return 'text-gray-400';\n    }\n  }\n\n  function formatTime(timestamp) {\n    return new Date(timestamp).toLocaleTimeString();\n  }\n</script>\n\n<svelte:head>\n  <title>Dev Communication - Claude Code Zen</title>\n</svelte:head>\n\n<div class=\"min-h-screen bg-gray-900 text-white\">\n  <!-- Header -->\n  <div class=\"bg-gray-800 border-b border-gray-700 p-6\">\n    <div class=\"max-w-7xl mx-auto\">\n      <h1 class=\"text-3xl font-bold text-blue-400 mb-2\">üí¨ Development Communication Hub</h1>\n      <p class=\"text-gray-300\">Direct communication interface with the Claude Code Zen system</p>\n      \n      <!-- System Status -->\n      <div class=\"mt-4 flex items-center gap-4\">\n        <div class=\"flex items-center gap-2\">\n          <div class=\"w-3 h-3 rounded-full {$systemStatus === 'ready' ? 'bg-green-400' : 'bg-yellow-400'}\"></div>\n          <span class=\"text-sm\">System: {$systemStatus}</span>\n        </div>\n        <div class=\"flex items-center gap-2\">\n          <span class=\"text-sm\">Active Agents: {$activeAgents.length}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"max-w-7xl mx-auto p-6 grid grid-cols-1 lg:grid-cols-3 gap-6\">\n    <!-- Communication Interface -->\n    <div class=\"lg:col-span-2 space-y-6\">\n      <!-- Message Input -->\n      <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n        <h2 class=\"text-xl font-semibold mb-4\">üìù New Communication</h2>\n        \n        <!-- Communication Type Selector -->\n        <div class=\"mb-4\">\n          <label class=\"block text-sm font-medium mb-2\">Communication Type</label>\n          <select bind:value={selectedType} class=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2\">\n            {#each communicationTypes as type}\n              <option value={type.id}>{type.name}</option>\n            {/each}\n          </select>\n          <p class=\"text-sm text-gray-400 mt-1\">\n            {communicationTypes.find(t => t.id === selectedType)?.desc || ''}\n          </p>\n        </div>\n\n        <!-- Message Input -->\n        <div class=\"mb-4\">\n          <label class=\"block text-sm font-medium mb-2\">Message</label>\n          <textarea\n            bind:value={$currentMessage}\n            placeholder=\"Describe what you need help with, the task to coordinate, or the analysis to perform...\"\n            class=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 h-32 resize-none\"\n            disabled={isProcessing}\n          ></textarea>\n        </div>\n\n        <!-- Send Button -->\n        <div class=\"flex justify-between items-center\">\n          <button\n            on:click={sendMessage}\n            disabled={!$currentMessage.trim() || isProcessing}\n            class=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed px-6 py-2 rounded-lg font-medium transition-colors\"\n          >\n            {isProcessing ? '‚è≥ Processing...' : 'üöÄ Send Communication'}\n          </button>\n          \n          <button\n            on:click={clearHistory}\n            class=\"text-gray-400 hover:text-red-400 text-sm transition-colors\"\n          >\n            üóëÔ∏è Clear History\n          </button>\n        </div>\n      </div>\n\n      <!-- Message History -->\n      <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n        <h2 class=\"text-xl font-semibold mb-4\">üìú Communication History</h2>\n        \n        <div class=\"space-y-4 max-h-96 overflow-y-auto\">\n          {#each messageHistory.slice().reverse() as message}\n            <div class=\"bg-gray-700 rounded-lg p-4 border-l-4 {message.status === 'completed' ? 'border-green-400' : message.status === 'error' ? 'border-red-400' : 'border-yellow-400'}\">\n              <!-- Message Header -->\n              <div class=\"flex justify-between items-start mb-2\">\n                <div class=\"flex items-center gap-2\">\n                  <span class=\"text-sm font-medium\">\n                    {communicationTypes.find(t => t.id === message.type)?.name || message.type}\n                  </span>\n                  <span class=\"text-xs {getStatusColor(message.status)}\">\n                    {message.status}\n                  </span>\n                </div>\n                <span class=\"text-xs text-gray-400\">{formatTime(message.timestamp)}</span>\n              </div>\n\n              <!-- Original Message -->\n              <div class=\"mb-3\">\n                <p class=\"text-sm text-gray-300\">{message.content}</p>\n              </div>\n\n              <!-- System Response -->\n              {#if message.response}\n                <div class=\"bg-gray-600 rounded p-3 mt-2\">\n                  <p class=\"text-sm text-green-300 font-medium mb-1\">System Response:</p>\n                  <p class=\"text-sm text-gray-200\">{message.response}</p>\n                  \n                  {#if message.agents && message.agents.length > 0}\n                    <div class=\"mt-2\">\n                      <p class=\"text-xs text-gray-400\">Assigned Agents:</p>\n                      <div class=\"flex flex-wrap gap-1 mt-1\">\n                        {#each message.agents as agent}\n                          <span class=\"bg-blue-600 text-xs px-2 py-1 rounded\">{agent}</span>\n                        {/each}\n                      </div>\n                    </div>\n                  {/if}\n                </div>\n              {/if}\n\n              <!-- Error Display -->\n              {#if message.error}\n                <div class=\"bg-red-900/30 rounded p-3 mt-2 border border-red-600\">\n                  <p class=\"text-sm text-red-300\">Error: {message.error}</p>\n                </div>\n              {/if}\n            </div>\n          {/each}\n          \n          {#if messageHistory.length === 0}\n            <div class=\"text-center py-8 text-gray-500\">\n              <p>No communications yet. Start a conversation with the system!</p>\n            </div>\n          {/if}\n        </div>\n      </div>\n    </div>\n\n    <!-- Sidebar -->\n    <div class=\"space-y-6\">\n      <!-- Quick Actions -->\n      <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-4\">‚ö° Quick Actions</h3>\n        <div class=\"space-y-2\">\n          <button class=\"w-full text-left bg-gray-700 hover:bg-gray-600 p-3 rounded-lg transition-colors\">\n            üîç System Health Check\n          </button>\n          <button class=\"w-full text-left bg-gray-700 hover:bg-gray-600 p-3 rounded-lg transition-colors\">\n            üêù Initialize New Swarm\n          </button>\n          <button class=\"w-full text-left bg-gray-700 hover:bg-gray-600 p-3 rounded-lg transition-colors\">\n            üìä Performance Analysis\n          </button>\n          <button class=\"w-full text-left bg-gray-700 hover:bg-gray-600 p-3 rounded-lg transition-colors\">\n            üîß Debug Current Task\n          </button>\n          <button class=\"w-full text-left bg-gray-700 hover:bg-gray-600 p-3 rounded-lg transition-colors\">\n            üìã Generate Status Report\n          </button>\n        </div>\n      </div>\n\n      <!-- Active Agents -->\n      <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-4\">ü§ñ Active Agents</h3>\n        <div class=\"space-y-2\">\n          {#each $activeAgents as agent}\n            <div class=\"flex items-center justify-between bg-gray-700 p-2 rounded\">\n              <span class=\"text-sm\">{agent.name}</span>\n              <span class=\"text-xs text-green-400\">{agent.status}</span>\n            </div>\n          {/each}\n          \n          {#if $activeAgents.length === 0}\n            <p class=\"text-sm text-gray-500\">No active agents</p>\n          {/if}\n        </div>\n      </div>\n\n      <!-- Communication Tips -->\n      <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-4\">üí° Communication Tips</h3>\n        <div class=\"space-y-3 text-sm text-gray-300\">\n          <div>\n            <p class=\"font-medium text-blue-400\">Be Specific:</p>\n            <p>Provide clear context and expected outcomes</p>\n          </div>\n          <div>\n            <p class=\"font-medium text-green-400\">Use Examples:</p>\n            <p>Include code snippets or file paths when relevant</p>\n          </div>\n          <div>\n            <p class=\"font-medium text-yellow-400\">Set Priorities:</p>\n            <p>Indicate urgency and dependencies</p>\n          </div>\n          <div>\n            <p class=\"font-medium text-purple-400\">Feedback Loop:</p>\n            <p>Ask for clarification if responses aren't clear</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  :global(body) {\n    background-color: #111827;\n  }\n</style>"],"names":["currentMessage","writable","systemStatus","activeAgents","communicationTypes","selectedType","messageHistory","$.mutable_source","isProcessing","onMount","loadMessageHistory","connectSystemStatus","response","error","status","sendMessage","$currentMessage","$.get","$.set","message","result","clearHistory","getStatusColor","formatTime","timestamp","$.each","select","type","$.set_text","text_2","option_value","option","node","$.index","$$anchor","agent","$$render","consequent","$.template_effect","text_9","consequent_1","text_11","consequent_2","text_6","text_8","t","consequent_3","node_5","$activeAgents","text_12","text_13","consequent_4","$.set_class","div_5","$systemStatus","text_1","$.bind_select_value","$$value","$.store_set"],"mappings":"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"}