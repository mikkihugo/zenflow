{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../src/routes/agu/task/[id]/+page.svelte"],"sourcesContent":["<!--\n  @component Task Approval Detail Page\n  Detailed task review and approval interface with rich context\n-->\n\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { page } from '$app/stores';\n  import { writable } from 'svelte/store';\n\n  // Get task ID from URL parameters\n  const taskId = $page.params.id;\n\n  // Task state\n  const task = writable(null);\n  const isLoading = writable(true);\n  const decision = writable('');\n  const rationale = writable('');\n  const modifications = writable({});\n  const showModificationForm = writable(false);\n\n  // Mock task data - in production, this would come from the AGU backend\n  const mockTask = {\n    id: taskId,\n    title: 'Refactor Authentication Module',\n    description: 'Modernize auth system to use JWT tokens and improve security. This task was generated from automated code analysis that detected outdated authentication patterns and potential security vulnerabilities.',\n    type: 'refactoring',\n    priority: 'high',\n    estimatedHours: 8,\n    requiredAgentTypes: ['Security Expert', 'Backend Developer', 'QA Engineer'],\n    suggestedSwarmType: 'security-focused',\n    sourceAnalysis: {\n      filePath: 'src/auth/auth-service.ts',\n      lineNumber: 45,\n      type: 'security',\n      severity: 'medium',\n      codeSnippet: `// Vulnerable session handling\nfunction authenticateUser(username, password) {\n  // TODO: Add JWT token generation\n  const user = findUser(username);\n  if (user && user.password === password) {\n    return { authenticated: true, user };\n  }\n  return { authenticated: false };\n}`,\n      tags: ['authentication', 'security', 'jwt', 'session-management'],\n      confidence: 0.92\n    },\n    acceptanceCriteria: [\n      'All tests pass with new JWT implementation',\n      'Security scan shows no critical vulnerabilities',\n      'Performance benchmarks maintained or improved',\n      'Existing API compatibility preserved',\n      'Documentation updated with new auth flow'\n    ],\n    businessContext: {\n      impact: 'high',\n      stakeholders: ['Security Team', 'Backend Team', 'Product Manager'],\n      deadline: new Date(Date.now() + 1000 * 60 * 60 * 24 * 2), // 2 days\n      dependencies: [\n        { reference: 'user-management-service', type: 'service', criticality: 'high' },\n        { reference: 'api-gateway', type: 'infrastructure', criticality: 'medium' }\n      ],\n      riskFactors: [\n        { description: 'Potential API breaking changes', severity: 'medium', probability: 0.3 },\n        { description: 'User session interruption during deployment', severity: 'low', probability: 0.8 }\n      ]\n    },\n    created: new Date(Date.now() - 1000 * 60 * 45), // 45 minutes ago\n    scannedBy: 'Enhanced Document Scanner v2.0',\n    correlationId: 'scan-2024-001-auth-analysis'\n  };\n\n  onMount(async () => {\n    await loadTaskDetails();\n  });\n\n  async function loadTaskDetails() {\n    try {\n      const response = await fetch(`/api/agu/tasks/${taskId}`);\n      if (response.ok) {\n        const data = await response.json();\n        task.set(data);\n      } else {\n        // Use mock data for development\n        task.set(mockTask);\n      }\n    } catch (error) {\n      console.error('Failed to load task details:', error);\n      task.set(mockTask);\n    } finally {\n      isLoading.set(false);\n    }\n  }\n\n  async function submitDecision() {\n    if (!$decision) {\n      alert('Please select a decision');\n      return;\n    }\n\n    if (($decision === 'reject' || $decision === 'modify') && !$rationale.trim()) {\n      alert('Please provide a rationale for your decision');\n      return;\n    }\n\n    try {\n      const payload = {\n        taskId,\n        decision: $decision,\n        approved: $decision === 'approve' || $decision === 'modify',\n        rationale: $rationale,\n        modifications: $decision === 'modify' ? $modifications : undefined,\n        decisionMaker: 'web-user', // In production, use actual user ID\n        timestamp: new Date().toISOString()\n      };\n\n      const response = await fetch('/api/agu/task-approval', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      if (response.ok) {\n        alert(`Task ${$decision}ed successfully!`);\n        // Redirect to AGU dashboard\n        window.location.href = '/agu';\n      } else {\n        alert('Failed to submit decision');\n      }\n    } catch (error) {\n      console.error('Decision submission error:', error);\n      alert('Error submitting decision');\n    }\n  }\n\n  function toggleModificationForm() {\n    showModificationForm.update(n => !n);\n  }\n\n  function getPriorityColor(priority) {\n    switch (priority) {\n      case 'critical': return 'text-red-400 bg-red-900/20';\n      case 'high': return 'text-orange-400 bg-orange-900/20';\n      case 'medium': return 'text-yellow-400 bg-yellow-900/20';\n      case 'low': return 'text-blue-400 bg-blue-900/20';\n      default: return 'text-gray-400 bg-gray-900/20';\n    }\n  }\n\n  function getSeverityColor(severity) {\n    switch (severity) {\n      case 'critical': return 'text-red-400';\n      case 'high': return 'text-orange-400';\n      case 'medium': return 'text-yellow-400';\n      case 'low': return 'text-blue-400';\n      default: return 'text-gray-400';\n    }\n  }\n\n  function formatTimeAgo(date) {\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    \n    if (diffMinutes < 60) {\n      return `${diffMinutes}m ago`;\n    } else if (diffMinutes < 24 * 60) {\n      return `${Math.floor(diffMinutes / 60)}h ago`;\n    } else {\n      return `${Math.floor(diffMinutes / (24 * 60))}d ago`;\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>Task Approval - {$task?.title || 'Loading...'} - Claude Code Zen</title>\n</svelte:head>\n\n<div class=\"min-h-screen bg-gray-900 text-white\">\n  {#if $isLoading}\n    <div class=\"flex items-center justify-center min-h-screen\">\n      <div class=\"text-center\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-400 mx-auto mb-4\"></div>\n        <p class=\"text-gray-300\">Loading task details...</p>\n      </div>\n    </div>\n  {:else if $task}\n    <!-- Header -->\n    <div class=\"bg-gray-800 border-b border-gray-700 p-6\">\n      <div class=\"max-w-7xl mx-auto\">\n        <div class=\"flex items-center gap-4 mb-4\">\n          <a href=\"/agu\" class=\"text-purple-400 hover:text-purple-300\">‚Üê Back to AGU</a>\n          <div class=\"h-6 w-px bg-gray-600\"></div>\n          <h1 class=\"text-2xl font-bold text-purple-400\">üìã Task Approval Review</h1>\n        </div>\n        \n        <div class=\"flex justify-between items-start\">\n          <div>\n            <h2 class=\"text-xl font-semibold mb-2\">{$task.title}</h2>\n            <div class=\"flex items-center gap-4 text-sm text-gray-300\">\n              <span class=\"px-2 py-1 rounded {getPriorityColor($task.priority)}\">{$task.priority.toUpperCase()}</span>\n              <span class=\"text-blue-400\">{$task.type}</span>\n              <span>{$task.estimatedHours}h estimated</span>\n              <span>Created {formatTimeAgo($task.created)}</span>\n            </div>\n          </div>\n          <div class=\"text-right text-sm text-gray-400\">\n            <div>Task ID: {$task.id}</div>\n            <div>Correlation: {$task.correlationId}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"max-w-7xl mx-auto p-6 grid grid-cols-1 lg:grid-cols-3 gap-6\">\n      <!-- Main Content -->\n      <div class=\"lg:col-span-2 space-y-6\">\n        <!-- Task Description -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-3\">üìù Task Description</h3>\n          <p class=\"text-gray-300 leading-relaxed\">{$task.description}</p>\n        </div>\n\n        <!-- Source Analysis -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-3\">üîç Source Analysis</h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            <div>\n              <div class=\"text-sm text-gray-400\">File Path</div>\n              <div class=\"font-mono text-green-400\">{$task.sourceAnalysis.filePath}</div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400\">Line Number</div>\n              <div class=\"text-blue-400\">{$task.sourceAnalysis.lineNumber || 'N/A'}</div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400\">Analysis Type</div>\n              <div class=\"text-purple-400\">{$task.sourceAnalysis.type}</div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400\">Severity</div>\n              <div class=\"{getSeverityColor($task.sourceAnalysis.severity)}\">{$task.sourceAnalysis.severity.toUpperCase()}</div>\n            </div>\n          </div>\n\n          {#if $task.sourceAnalysis.codeSnippet}\n            <div class=\"mb-4\">\n              <div class=\"text-sm text-gray-400 mb-2\">Code Context</div>\n              <pre class=\"bg-gray-900 rounded-lg p-4 text-sm font-mono overflow-x-auto border border-gray-600\"><code>{$task.sourceAnalysis.codeSnippet}</code></pre>\n            </div>\n          {/if}\n\n          <div class=\"mb-4\">\n            <div class=\"text-sm text-gray-400 mb-2\">Analysis Tags</div>\n            <div class=\"flex flex-wrap gap-2\">\n              {#each $task.sourceAnalysis.tags as tag}\n                <span class=\"bg-blue-600 text-blue-100 px-2 py-1 rounded text-xs\">{tag}</span>\n              {/each}\n            </div>\n          </div>\n\n          <div class=\"flex justify-between text-sm\">\n            <span class=\"text-gray-400\">Scanner: {$task.scannedBy}</span>\n            <span class=\"text-gray-400\">Confidence: {Math.round($task.sourceAnalysis.confidence * 100)}%</span>\n          </div>\n        </div>\n\n        <!-- Acceptance Criteria -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-3\">‚úÖ Acceptance Criteria</h3>\n          <div class=\"space-y-2\">\n            {#each $task.acceptanceCriteria as criterion}\n              <div class=\"flex items-start gap-2\">\n                <span class=\"text-green-400 mt-1\">‚Ä¢</span>\n                <span class=\"text-gray-300\">{criterion}</span>\n              </div>\n            {/each}\n          </div>\n        </div>\n\n        <!-- Business Context -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-3\">üè¢ Business Context</h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            <div>\n              <div class=\"text-sm text-gray-400\">Business Impact</div>\n              <div class=\"text-orange-400 font-semibold\">{$task.businessContext.impact.toUpperCase()}</div>\n            </div>\n            <div>\n              <div class=\"text-sm text-gray-400\">Deadline</div>\n              <div class=\"text-yellow-400\">{$task.businessContext.deadline.toLocaleDateString()}</div>\n            </div>\n          </div>\n\n          <div class=\"mb-4\">\n            <div class=\"text-sm text-gray-400 mb-2\">Stakeholders</div>\n            <div class=\"flex flex-wrap gap-2\">\n              {#each $task.businessContext.stakeholders as stakeholder}\n                <span class=\"bg-purple-600 text-purple-100 px-2 py-1 rounded text-xs\">{stakeholder}</span>\n              {/each}\n            </div>\n          </div>\n\n          {#if $task.businessContext.dependencies.length > 0}\n            <div class=\"mb-4\">\n              <div class=\"text-sm text-gray-400 mb-2\">Dependencies</div>\n              {#each $task.businessContext.dependencies as dep}\n                <div class=\"text-sm text-gray-300\">\n                  ‚Ä¢ {dep.reference} ({dep.type}, {dep.criticality} criticality)\n                </div>\n              {/each}\n            </div>\n          {/if}\n\n          {#if $task.businessContext.riskFactors.length > 0}\n            <div>\n              <div class=\"text-sm text-gray-400 mb-2\">Risk Factors</div>\n              {#each $task.businessContext.riskFactors as risk}\n                <div class=\"text-sm text-gray-300\">\n                  ‚Ä¢ {risk.description} ({risk.severity}, {Math.round(risk.probability * 100)}% probability)\n                </div>\n              {/each}\n            </div>\n          {/if}\n        </div>\n\n        <!-- Decision Form -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4\">üéØ Make Decision</h3>\n          \n          <!-- Decision Options -->\n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-medium mb-2\">Decision</label>\n            <div class=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n              <label class=\"flex items-center\">\n                <input type=\"radio\" bind:group={$decision} value=\"approve\" class=\"mr-2\">\n                <span class=\"text-green-400\">‚úÖ Approve</span>\n              </label>\n              <label class=\"flex items-center\">\n                <input type=\"radio\" bind:group={$decision} value=\"modify\" class=\"mr-2\">\n                <span class=\"text-yellow-400\">üìù Modify</span>\n              </label>\n              <label class=\"flex items-center\">\n                <input type=\"radio\" bind:group={$decision} value=\"reject\" class=\"mr-2\">\n                <span class=\"text-red-400\">‚ùå Reject</span>\n              </label>\n              <label class=\"flex items-center\">\n                <input type=\"radio\" bind:group={$decision} value=\"defer\" class=\"mr-2\">\n                <span class=\"text-gray-400\">‚è∏Ô∏è Defer</span>\n              </label>\n            </div>\n          </div>\n\n          <!-- Rationale -->\n          <div class=\"mb-4\">\n            <label for=\"rationale\" class=\"block text-sm font-medium mb-2\">\n              Rationale {($decision === 'reject' || $decision === 'modify') ? '(Required)' : '(Optional)'}\n            </label>\n            <textarea\n              id=\"rationale\"\n              bind:value={$rationale}\n              placeholder=\"Provide reasoning for your decision...\"\n              class=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 h-24 resize-none\"\n            ></textarea>\n          </div>\n\n          <!-- Modification Form -->\n          {#if $decision === 'modify'}\n            <div class=\"mb-4 p-4 bg-gray-700 rounded-lg\">\n              <div class=\"flex justify-between items-center mb-3\">\n                <h4 class=\"font-medium\">Task Modifications</h4>\n                <button \n                  on:click={toggleModificationForm}\n                  class=\"text-blue-400 hover:text-blue-300 text-sm\"\n                >\n                  {$showModificationForm ? 'Hide' : 'Show'} Options\n                </button>\n              </div>\n\n              {#if $showModificationForm}\n                <div class=\"space-y-3\">\n                  <div>\n                    <label class=\"block text-sm text-gray-400 mb-1\">New Title</label>\n                    <input \n                      type=\"text\" \n                      bind:value={$modifications.title}\n                      placeholder=\"Leave empty to keep current title\"\n                      class=\"w-full bg-gray-600 border border-gray-500 rounded px-2 py-1 text-sm\"\n                    >\n                  </div>\n                  <div>\n                    <label class=\"block text-sm text-gray-400 mb-1\">Priority</label>\n                    <select bind:value={$modifications.priority} class=\"w-full bg-gray-600 border border-gray-500 rounded px-2 py-1 text-sm\">\n                      <option value=\"\">Keep current priority</option>\n                      <option value=\"low\">Low</option>\n                      <option value=\"medium\">Medium</option>\n                      <option value=\"high\">High</option>\n                      <option value=\"critical\">Critical</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label class=\"block text-sm text-gray-400 mb-1\">Estimated Hours</label>\n                    <input \n                      type=\"number\" \n                      bind:value={$modifications.estimatedHours}\n                      placeholder=\"Current: {$task.estimatedHours}\"\n                      class=\"w-full bg-gray-600 border border-gray-500 rounded px-2 py-1 text-sm\"\n                    >\n                  </div>\n                </div>\n              {/if}\n            </div>\n          {/if}\n\n          <!-- Submit Button -->\n          <button \n            on:click={submitDecision}\n            disabled={!$decision}\n            class=\"w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 disabled:cursor-not-allowed px-6 py-3 rounded-lg font-medium transition-colors\"\n          >\n            Submit Decision\n          </button>\n        </div>\n      </div>\n\n      <!-- Sidebar -->\n      <div class=\"space-y-6\">\n        <!-- Task Summary -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4\">üìä Task Summary</h3>\n          <div class=\"space-y-3 text-sm\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-400\">Type</span>\n              <span class=\"text-blue-400\">{$task.type}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-400\">Priority</span>\n              <span class=\"{getPriorityColor($task.priority).split(' ')[0]}\">{$task.priority.toUpperCase()}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-400\">Estimated Hours</span>\n              <span>{$task.estimatedHours}h</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-400\">Suggested Swarm</span>\n              <span class=\"text-purple-400\">{$task.suggestedSwarmType}</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Required Agents -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4\">üë• Required Agents</h3>\n          <div class=\"space-y-2\">\n            {#each $task.requiredAgentTypes as agent}\n              <div class=\"bg-gray-700 rounded px-3 py-2 text-sm\">{agent}</div>\n            {/each}\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4\">‚ö° Quick Actions</h3>\n          <div class=\"space-y-2\">\n            <button \n              on:click={() => { $decision = 'approve'; $rationale = 'Quick approval - task appears straightforward and low risk'; }}\n              class=\"w-full text-left bg-green-600 hover:bg-green-700 p-2 rounded text-sm transition-colors\"\n            >\n              ‚úÖ Quick Approve\n            </button>\n            <button \n              on:click={() => { $decision = 'defer'; $rationale = 'Requires additional review and stakeholder input'; }}\n              class=\"w-full text-left bg-yellow-600 hover:bg-yellow-700 p-2 rounded text-sm transition-colors\"\n            >\n              ‚è∏Ô∏è Defer for Review\n            </button>\n            <a \n              href=\"/agu/task/{$task.id}/export\" \n              class=\"w-full text-left bg-blue-600 hover:bg-blue-700 p-2 rounded text-sm transition-colors block\"\n            >\n              üìÑ Export Details\n            </a>\n          </div>\n        </div>\n\n        <!-- Analysis Confidence -->\n        <div class=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4\">üéØ Analysis Confidence</h3>\n          <div class=\"space-y-3\">\n            <div>\n              <div class=\"flex justify-between mb-1\">\n                <span class=\"text-gray-400\">Scanner Confidence</span>\n                <span class=\"text-blue-400\">{Math.round($task.sourceAnalysis.confidence * 100)}%</span>\n              </div>\n              <div class=\"w-full bg-gray-700 rounded-full h-2\">\n                <div class=\"bg-blue-400 h-2 rounded-full\" style=\"width: {$task.sourceAnalysis.confidence * 100}%\"></div>\n              </div>\n            </div>\n            <div class=\"text-xs text-gray-500\">\n              High confidence indicates reliable automated analysis\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  {:else}\n    <div class=\"flex items-center justify-center min-h-screen\">\n      <div class=\"text-center\">\n        <h1 class=\"text-2xl font-bold text-red-400 mb-4\">Task Not Found</h1>\n        <p class=\"text-gray-300 mb-4\">The requested task could not be found.</p>\n        <a href=\"/agu\" class=\"bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded transition-colors\">\n          Return to AGU Dashboard\n        </a>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  :global(body) {\n    background-color: #111827;\n  }\n</style>"],"names":["$.store_get","$$payload","$.escape","$.ensure_array_like","$.attr_class","$.stringify","$.attr","$.attr_style"],"mappings":"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"}