{
  "name": "@claude-zen/server",
  "version": "1.0.0-alpha.44",
  "type": "module",
  "description": "Claude Code Zen Server: Backend API service for AI swarm orchestration platform with neural networks and coordination system",
  "main": "dist/main.js",
  "bin": {
    "claude-zen-server": "dist/main.js"
  },
  "scripts": {
    "start": "node dist/main.js",
    "dev": "tsx src/main.ts",
    "dev:watch": "nodemon",
    "dev:hot": "nodemon --watch src --watch ../../packages --ext ts,js,json --exec \"tsx src/main.ts\"",
    "dev:zero-downtime": "GRACEFUL_RESTART=true nodemon --signal SIGUSR2",
    "debug": "node --inspect-brk -r tsx/cjs src/main.ts",
    "build": "tsc --project tsconfig.json",
    "build:watch": "tsc --project tsconfig.json --watch",
    "build:wasm": "cd src/neural/wasm && ./scripts/build-wasm.sh",
    "build:neural-wasm": "cd src/neural/rust/wasm-api && ./build.sh",
    "build:bindings": "cd src/bindings && pnpm run build",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:safe-sparc": "vitest run --testNamePattern=safe-sparc-workflow",
    "test:integration": "vitest run --testNamePattern=integration",
    "test:e2e": "vitest run --testNamePattern=e2e",
    "lint": "echo 'Linting disabled due to biome thread pool issues'",
    "format": "BIOME_DAEMON=0 biome format --write . --max-diagnostics=50",
    "type-check": "tsc --noEmit",
    "api:types": "npx openapi-typescript ../../docs/api/openapi.yaml -o src/types/api-types.ts",
    "api:validate": "node -e \"const parser = require('@apidevtools/swagger-parser'); parser.validate('../../docs/api/openapi.yaml').then(() => console.log('✅ OpenAPI spec is valid')).catch(err => { console.error('❌ OpenAPI spec validation failed:', err.message); process.exit(1); })\"",
    "api:server-types": "npm run api:validate && npm run api:types",
    "docs:check": "node scripts/check-tsdoc.mjs",
    "docs:check-verbose": "node scripts/check-tsdoc.mjs --verbose --show-documented",
    "docs:check-strict": "node scripts/check-tsdoc.mjs --threshold 100",
    "docs:fix": "node scripts/fix-tsdoc.mjs",
    "docs:fix-verbose": "node scripts/fix-tsdoc.mjs --verbose",
    "docs:fix-opus": "node scripts/fix-tsdoc.mjs --model opus",
    "build:fix": "node ../../scripts/fix-typescript.mjs",
    "build:fix:complete": "node ../../scripts/ai-eslint/zen-ai-fixer-complete.js --phase=compile",
    "iteration1": "tsx src/iteration1.ts",
    "validate-iteration1": "tsx src/validate-iteration1.ts",
    "test-llm": "tsx src/test-llmprovider.ts",
    "quick-llm-test": "tsx src/quick-llm-test.ts"
  },
  "dependencies": {
    "@apidevtools/swagger-parser": "^12.0.0",
    "@claude-zen/agent-manager": "workspace:*",
    "@claude-zen/agent-monitoring": "link:../../packages/implementation-packages/agent-monitoring",
    "@claude-zen/agui": "link:../../packages/implementation-packages/agui",
    "@claude-zen/ai-safety": "link:../../packages/implementation-packages/ai-safety",
    "@claude-zen/brain": "link:../../packages/implementation-packages/brain",
    "@claude-zen/chaos-engineering": "workspace:*",
    "@claude-zen/coordination-core": "workspace:*",
    "@claude-zen/dspy": "workspace:*",
    "@claude-zen/event-system": "link:../../packages/implementation-packages/event-system",
    "@claude-zen/fact-system": "workspace:*",
    "@claude-zen/foundation": "workspace:*",
    "@claude-zen/kanban": "link:../../packages/implementation-packages/kanban",
    "@claude-zen/knowledge": "link:../../packages/implementation-packages/knowledge",
    "@claude-zen/llm-routing": "workspace:*",
    "@claude-zen/memory": "link:../../packages/implementation-packages/memory",
    "@claude-zen/multi-level-orchestration": "workspace:*",
    "@claude-zen/neural-ml": "link:../../packages/implementation-packages/neural-ml",
    "@claude-zen/safe-framework": "workspace:*",
    "@claude-zen/sparc": "workspace:*",
    "@claude-zen/system-monitoring": "link:../../packages/implementation-packages/system-monitoring",
    "@claude-zen/teamwork": "link:../../packages/implementation-packages/teamwork",
    "@claude-zen/telemetry": "link:../../packages/implementation-packages/telemetry",
    "@claude-zen/workflows": "link:../../packages/implementation-packages/workflows",
    "@godaddy/terminus": "^4.12.1",
    "@lancedb/lancedb": "^0.21.3",
    "@logtape/file": "^1.0.4",
    "@logtape/logtape": "^1.0.4",
    "@logtape/otel": "^1.0.4",
    "@octokit/rest": "^22.0.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/sdk-trace-node": "^2.0.1",
    "@prisma/client": "^6.14.0",
    "@types/better-sqlite3": "^7.6.13",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "better-sqlite3": "^12.2.0",
    "chalk": "^5.6.0",
    "chokidar": "^4.0.3",
    "commander": "^14.0.0",
    "compression": "^1.8.1",
    "connect-redis": "^9.0.0",
    "cors": "^2.8.5",
    "diff3": "^0.0.4",
    "eventemitter3": "^5.0.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "express-session": "^1.18.2",
    "express-slow-down": "^3.0.0",
    "express-status-monitor": "^1.3.4",
    "express-validator": "^7.2.1",
    "express-ws": "^5.0.2",
    "fs-extra": "^11.3.1",
    "git-diff-parser": "^1.0.0",
    "helmet": "^8.1.0",
    "http-proxy-middleware": "^3.0.5",
    "ioredis": "^5.7.0",
    "js-yaml": "^4.1.0",
    "kuzu": "^0.11.1",
    "listr2": "^9.0.2",
    "markdown-it": "^14.1.0",
    "mcp-client": "^1.13.1",
    "morgan": "^1.10.1",
    "nanoid": "^5.1.5",
    "node-cron": "^4.2.1",
    "on-finished": "^2.4.1",
    "openapi-typescript": "^7.9.1",
    "path-to-regexp": "^8.2.0",
    "prisma": "^6.14.0",
    "prom-client": "^15.1.3",
    "redis": "^5.8.2",
    "response-time": "^2.3.4",
    "seedrandom": "^3.0.5",
    "semver": "^7.7.2",
    "socket.io": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "typescript": "^5.9.2",
    "umzug": "^3.8.2",
    "uuid": "^11.1.0",
    "ws": "^8.18.3",
    "yaml": "^2.8.1",
    "zod": "^4.0.17"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.2.0",
    "@types/compression": "^1.8.1",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/fs-extra": "^11.0.4",
    "@types/js-yaml": "^4.0.9",
    "@types/markdown-it": "^14.1.2",
    "@types/node": "22.17.1",
    "@types/node-cron": "^3.0.11",
    "@types/on-finished": "^2.3.5",
    "@types/response-time": "^2.3.9",
    "@types/seedrandom": "^3.0.8",
    "@types/semver": "^7.7.0",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.18.1",
    "@vitest/coverage-v8": "^3.2.4",
    "concurrently": "^9.2.0",
    "esbuild": "^0.25.9",
    "nodemon": "^3.1.10",
    "tsx": "^4.20.4",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "keywords": [
    "ai",
    "swarm",
    "orchestration",
    "neural-networks",
    "coordination",
    "backend",
    "api",
    "typescript",
    "claude-zen"
  ],
  "author": "Claude Code Zen Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zen-neural/claude-code-zen.git",
    "directory": "apps/claude-code-zen-server"
  }
}
