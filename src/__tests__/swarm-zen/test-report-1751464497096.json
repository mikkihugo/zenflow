{
  "metadata": {
    "generatedAt": "2025-07-02T13:54:42.957Z",
    "completedAt": "2025-07-02T13:54:57.096Z",
    "duration": "14.14s",
    "environment": {
      "node": "v22.16.0",
      "platform": "linux",
      "arch": "x64"
    }
  },
  "summary": {
    "totalSuites": 4,
    "passedSuites": 1,
    "failedSuites": 3,
    "totalTests": 8,
    "passedTests": 8,
    "failedTests": 0,
    "totalDuration": 14139
  },
  "suites": [
    {
      "name": "MCP Integration Tests",
      "file": "./mcp-integration.test.js",
      "startTime": "2025-07-02T13:54:52.962Z",
      "passed": false,
      "totalTests": 0,
      "passedTests": 0,
      "failedTests": 0,
      "duration": 30,
      "output": [],
      "errors": [
        "file:///workspaces/ruv-FANN/ruv-swarm/npm/test/mcp-integration.test.js:397",
        "      import fs from 'fs'.promises;",
        "             ^^",
        "SyntaxError: Unexpected identifier 'fs'",
        "    at compileSourceTextModule (node:internal/modules/esm/utils:344:16)",
        "    at ModuleLoader.moduleStrategy (node:internal/modules/esm/translators:105:18)",
        "    at #translate (node:internal/modules/esm/loader:534:12)",
        "    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:581:27)",
        "    at async ModuleJob._link (node:internal/modules/esm/module_job:116:19)",
        "Node.js v22.16.0"
      ],
      "exitCode": 1
    },
    {
      "name": "Persistence Layer Tests",
      "file": "./persistence.test.js",
      "startTime": "2025-07-02T13:54:53.991Z",
      "passed": false,
      "totalTests": 0,
      "passedTests": 0,
      "failedTests": 0,
      "duration": 43,
      "output": [],
      "errors": [
        "file:///workspaces/ruv-FANN/ruv-swarm/npm/test/persistence.test.js:7",
        "const sqlite3 = require('sqlite3').verbose();",
        "                ^",
        "ReferenceError: require is not defined in ES module scope, you can use import instead",
        "This file is being treated as an ES module because it has a '.js' file extension and '/workspaces/ruv-FANN/ruv-swarm/npm/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.",
        "    at file:///workspaces/ruv-FANN/ruv-swarm/npm/test/persistence.test.js:7:17",
        "    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)",
        "    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)",
        "    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)",
        "Node.js v22.16.0"
      ],
      "exitCode": 1
    },
    {
      "name": "Neural Network Integration Tests",
      "file": "./neural-integration.test.js",
      "startTime": "2025-07-02T13:54:55.035Z",
      "passed": false,
      "totalTests": 0,
      "passedTests": 0,
      "failedTests": 0,
      "duration": 28,
      "output": [],
      "errors": [
        "file:///workspaces/ruv-FANN/ruv-swarm/npm/test/neural-integration.test.js:7",
        "import { v4: uuidv4  } from 'uuid';",
        "           ^",
        "SyntaxError: Unexpected token ':'",
        "    at compileSourceTextModule (node:internal/modules/esm/utils:344:16)",
        "    at ModuleLoader.moduleStrategy (node:internal/modules/esm/translators:105:18)",
        "    at #translate (node:internal/modules/esm/loader:534:12)",
        "    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:581:27)",
        "    at async ModuleJob._link (node:internal/modules/esm/module_job:116:19)",
        "Node.js v22.16.0"
      ],
      "exitCode": 1
    },
    {
      "name": "Basic WASM Tests",
      "file": "./test.js",
      "startTime": "2025-07-02T13:54:56.063Z",
      "passed": true,
      "totalTests": 8,
      "passedTests": 8,
      "failedTests": 0,
      "duration": 32,
      "output": [
        "Running RuvSwarm tests...",
        "Initializing RuvSwarm with options: undefined",
        "✓ RuvSwarm.initialize() should return a RuvSwarm instance",
        "✓ RuvSwarm.detectSIMDSupport() should return a boolean",
        "✓ RuvSwarm.getVersion() should return a version string",
        "Initializing RuvSwarm with options: undefined",
        "✓ createSwarm() should create a swarm with correct properties",
        "Initializing RuvSwarm with options: undefined",
        "✓ spawn() should create an agent",
        "Initializing RuvSwarm with options: undefined",
        "✓ agent.execute() should execute a task",
        "Initializing RuvSwarm with options: undefined",
        "✓ orchestrate() should orchestrate a task",
        "Initializing RuvSwarm with options: undefined",
        "✓ getStatus() should return swarm status",
        "Tests completed: 8 passed, 0 failed"
      ],
      "errors": [],
      "exitCode": 0
    }
  ]
}