#!/usr/bin/env node

/**
 * Maestro Init Steering Command
 * Initializes steering documents for a domain
 */

import { mkdir, writeFile } from 'fs/promises';
import { join } from 'path';
import chalk from 'chalk';
import type { Arguments, Argv } from 'yargs';

interface InitSteeringArgs {
  domain: string;
}

export const command = 'init-steering <domain>';
export const describe = 'Initialize steering documents for a domain';

export const builder = (yargs: Argv): Argv<InitSteeringArgs> => {
  return yargs
    .positional('domain', {
      describe: 'Domain name for steering initialization',
      type: 'string',
      demandOption: true
    }) as Argv<InitSteeringArgs>;
};

export const handler = async (argv: Arguments<InitSteeringArgs>): Promise<void> => {
  const { domain } = argv;
  
  console.log(chalk.blue(`üéØ Initializing steering documents for domain: ${domain}`));
  
  try {
    // Create steering directory structure
    const steeringDir = join(process.cwd(), 'docs', 'maestro', 'steering', domain);
    await mkdir(steeringDir, { recursive: true });
    
    // Create basic steering document template
    const steeringContent = `# ${domain.charAt(0).toUpperCase() + domain.slice(1)} Steering Document

## Overview
This steering document provides guidance and standards for ${domain} domain activities.

## Principles
- Follow established patterns and best practices
- Maintain consistency with overall project architecture
- Document decisions and rationale
- Collaborate effectively with team members

## Guidelines

### Development Standards
- Write clean, maintainable code
- Include appropriate tests
- Follow naming conventions
- Document complex logic

### Quality Standards
- Code reviews required for all changes
- Automated testing must pass
- Performance considerations addressed
- Security guidelines followed

## Decision Framework
When making decisions in the ${domain} domain:
1. Review existing patterns and precedents
2. Consider impact on overall system architecture
3. Evaluate maintainability and scalability
4. Document the decision and rationale

## Resources
- Project documentation: docs/
- Architecture guidelines: docs/maestro/steering/architecture-principles.md
- Development standards: docs/maestro/steering/development-standards.md

*Generated by Maestro Steering Framework*
`;

    const steeringFile = join(steeringDir, `${domain}-steering.md`);
    await writeFile(steeringFile, steeringContent);
    
    console.log(chalk.green(`‚úÖ Steering document created: ${steeringFile}`));
    console.log(chalk.yellow(`üìù Edit the document to add domain-specific guidance`));
    
  } catch (error) {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    console.error(chalk.red(`‚ùå Failed to initialize steering for ${domain}:`), errorMessage);
    process.exit(1);
  }
};