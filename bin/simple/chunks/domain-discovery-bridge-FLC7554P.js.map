{
  "version": 3,
  "sources": ["../../node_modules/agent-base/src/helpers.ts", "../../node_modules/agent-base/src/index.ts", "../../node_modules/https-proxy-agent/src/parse-proxy-response.ts", "../../node_modules/https-proxy-agent/src/index.ts", "../../node_modules/http-proxy-agent/src/index.ts", "../../node_modules/@azure/core-tracing/src/state-cjs.cts", "../../src/coordination/discovery/domain-discovery-bridge.ts", "../../src/neural/models/presets/gnn.js", "../../src/coordination/services/llm-integration.service.ts", "../../node_modules/uuid/dist/esm/stringify.js", "../../node_modules/uuid/dist/esm/rng.js", "../../node_modules/uuid/dist/esm/native.js", "../../node_modules/uuid/dist/esm/v4.js", "../../node_modules/tslib/tslib.es6.mjs", "../../node_modules/@typespec/ts-http-runtime/src/abort-controller/AbortError.ts", "../../node_modules/@typespec/ts-http-runtime/src/logger/log.ts", "../../node_modules/@typespec/ts-http-runtime/src/logger/debug.ts", "../../node_modules/@typespec/ts-http-runtime/src/logger/logger.ts", "../../node_modules/@typespec/ts-http-runtime/src/httpHeaders.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/uuidUtils.ts", "../../node_modules/@typespec/ts-http-runtime/src/pipelineRequest.ts", "../../node_modules/@typespec/ts-http-runtime/src/pipeline.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/object.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/error.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/inspect.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/sanitizer.ts", "../../node_modules/@typespec/ts-http-runtime/src/restError.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/bytesEncoding.ts", "../../node_modules/@typespec/ts-http-runtime/src/nodeHttpClient.ts", "../../node_modules/@typespec/ts-http-runtime/src/log.ts", "../../node_modules/@typespec/ts-http-runtime/src/defaultHttpClient.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/logPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/redirectPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/userAgentPlatform.ts", "../../node_modules/@typespec/ts-http-runtime/src/constants.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/userAgent.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/userAgentPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/decompressResponsePolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/random.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/delay.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/helpers.ts", "../../node_modules/@typespec/ts-http-runtime/src/retryStrategies/throttlingRetryStrategy.ts", "../../node_modules/@typespec/ts-http-runtime/src/retryStrategies/exponentialRetryStrategy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/retryPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/defaultRetryPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/checkEnvironment.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/formDataPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/proxyPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/agentPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/tlsPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/typeGuards.ts", "../../node_modules/@typespec/ts-http-runtime/src/util/concat.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/multipartPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/createPipelineFromOptions.ts", "../../node_modules/@typespec/ts-http-runtime/src/client/apiVersionPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/auth/credentials.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/auth/checkInsecureConnection.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/auth/apiKeyAuthenticationPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/auth/basicAuthenticationPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/auth/bearerAuthenticationPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/policies/auth/oauth2AuthenticationPolicy.ts", "../../node_modules/@typespec/ts-http-runtime/src/client/clientHelpers.ts", "../../node_modules/@typespec/ts-http-runtime/src/client/multipart.ts", "../../node_modules/@typespec/ts-http-runtime/src/client/sendRequest.ts", "../../node_modules/@typespec/ts-http-runtime/src/client/urlHelpers.ts", "../../node_modules/@typespec/ts-http-runtime/src/client/getClient.ts", "../../node_modules/@azure/core-rest-pipeline/src/pipeline.ts", "../../node_modules/@azure/logger/src/index.ts", "../../node_modules/@azure/core-rest-pipeline/src/log.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/logPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/redirectPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/util/userAgentPlatform.ts", "../../node_modules/@azure/core-rest-pipeline/src/constants.ts", "../../node_modules/@azure/core-rest-pipeline/src/util/userAgent.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/userAgentPolicy.ts", "../../node_modules/@azure/abort-controller/src/AbortError.ts", "../../node_modules/@azure/core-util/src/createAbortablePromise.ts", "../../node_modules/@azure/core-util/src/delay.ts", "../../node_modules/@azure/core-util/src/error.ts", "../../node_modules/@azure/core-util/src/typeGuards.ts", "../../node_modules/@azure/core-util/src/index.ts", "../../node_modules/@azure/core-rest-pipeline/src/util/file.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/multipartPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/decompressResponsePolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/defaultRetryPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/formDataPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/proxyPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/setClientRequestIdPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/agentPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/tlsPolicy.ts", "../../node_modules/@azure/core-tracing/src/tracingContext.ts", "../../node_modules/@azure/core-tracing/src/state.ts", "../../node_modules/@azure/core-tracing/src/instrumenter.ts", "../../node_modules/@azure/core-tracing/src/tracingClient.ts", "../../node_modules/@azure/core-rest-pipeline/src/restError.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/tracingPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/util/wrapAbortSignal.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/wrapAbortSignalLikePolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/createPipelineFromOptions.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/retryPolicy.ts", "../../node_modules/@azure/core-rest-pipeline/src/util/tokenCycler.ts", "../../node_modules/@azure/core-rest-pipeline/src/policies/bearerTokenAuthenticationPolicy.ts", "../../node_modules/@azure/core-auth/src/azureKeyCredential.ts", "../../node_modules/@azure/core-auth/src/keyCredential.ts", "../../node_modules/@azure/core-auth/src/tokenCredential.ts", "../../node_modules/@azure-rest/core-client/src/apiVersionPolicy.ts", "../../node_modules/@azure-rest/core-client/src/keyCredentialAuthenticationPolicy.ts", "../../node_modules/@azure-rest/core-client/src/clientHelpers.ts", "../../node_modules/@azure-rest/core-client/src/getClient.ts", "../../node_modules/@azure-rest/ai-inference/src/logger.ts", "../../node_modules/@azure-rest/ai-inference/src/constants.ts", "../../node_modules/@azure-rest/ai-inference/src/tracingHelper.ts", "../../node_modules/@azure-rest/ai-inference/src/tracingPolicy.ts", "../../node_modules/@azure-rest/ai-inference/src/modelClient.ts", "../../node_modules/@azure-rest/ai-inference/src/isUnexpected.ts", "../../node_modules/@azure-rest/ai-inference/src/index.ts", "../../src/coordination/discovery/neural-domain-mapper.ts"],
  "sourcesContent": [null, null, null, null, null, "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexport const state = {\n  instrumenterImplementation: undefined,\n};\n", "/**\n * Domain Discovery Bridge - Connects Document Processing to Domain Analysis.\n *\n * This bridge connects the document-driven development workflow with domain discovery,\n * enabling automatic domain identification based on project documentation and code analysis.\n * It leverages neural networks for intelligent domain mapping and provides human-in-the-loop.\n * Validation through AGUI integration..\n *\n * @module coordination/discovery/domain-discovery-bridge\n *\n * Architecture:\n * - Listens to DocumentProcessor events for document changes\n * - Analyzes document content using NLP and concept extraction\n * - Maps documents to code domains using DomainAnalyzer\n * - Provides AGUI touchpoints for human validation\n * - Stores mappings in memory for continuous learning\n * @example\n * ```typescript\n * const bridge = new DomainDiscoveryBridge(\n *   documentProcessor,\n *   domainAnalyzer,\n *   projectAnalyzer,\n *   intelligenceCoordinator\n * );\n *\n * // Initialize and start discovery.\n * await bridge.initialize();\n * const domains = await bridge.discoverDomains();\n *\n * // Human validates relevant documents\n * const relevantDocs = await bridge.askHumanRelevance(documents);\n * ```\n */\n/**\n * @file Coordination system: domain-discovery-bridge.\n */\n\nimport { EventEmitter } from 'node:events';\nimport { basename } from 'node:path';\nimport { getLogger } from '../../config/logging-config.ts';\nimport type { Document, DocumentProcessor, DocumentType } from '../../core/document-processor.ts';\nimport type { IntelligenceCoordinationSystem } from '../../knowledge/intelligence-coordination-system.ts';\nimport type {\n  MonorepoInfo,\n  ProjectContextAnalyzer,\n} from '../../knowledge/project-context-analyzer.ts';\nimport type {\n  DomainAnalysis,\n  DomainAnalysisEngine,\n} from '../../tools/domain-splitting/analyzers/domain-analyzer.ts';\nimport { NeuralDomainMapper } from './neural-domain-mapper.ts';\nimport type { DependencyGraph, Domain } from './types.ts';\n\nconst logger = getLogger('DomainDiscoveryBridge');\n\n/**\n * Represents a discovered domain with enriched metadata.\n *\n * @example\n */\nexport interface DiscoveredDomain {\n  /** Unique domain identifier */\n  id: string;\n  /** Domain name derived from analysis */\n  name: string;\n  /** Domain description based on documents and code */\n  description: string;\n  /** Confidence score (0-1) of domain identification */\n  confidence: number;\n  /** Associated document paths */\n  documents: string[];\n  /** Associated code file paths */\n  codeFiles: string[];\n  /** Extracted concepts from documents */\n  concepts: string[];\n  /** Domain category (e.g., 'coordination', 'neural', 'memory') */\n  category: string;\n  /** Suggested swarm topology for this domain */\n  suggestedTopology: 'mesh' | 'hierarchical' | 'ring' | 'star';\n  /** Related domains based on dependencies */\n  relatedDomains: string[];\n  /** Suggested agents for this domain */\n  suggestedAgents: string[];\n}\n\n/**\n * Document relevance information for human validation.\n *\n * @example\n */\nexport interface DocumentRelevance {\n  /** Document being evaluated */\n  document: Document;\n  /** Suggested relevance score (0-1) */\n  suggestedRelevance: number;\n  /** Extracted key concepts */\n  concepts: string[];\n  /** Potential domain matches */\n  potentialDomains: string[];\n  /** Reason for relevance suggestion */\n  relevanceReason: string;\n}\n\n/**\n * Mapping between a document and discovered domains.\n *\n * @example\n */\nexport interface DocumentDomainMapping {\n  /** Document path */\n  documentPath: string;\n  /** Document type (vision, adr, prd, etc.) */\n  documentType: DocumentType;\n  /** Mapped domain IDs */\n  domainIds: string[];\n  /** Mapping confidence scores */\n  confidenceScores: number[];\n  /** Matched concepts between document and domains */\n  matchedConcepts: string[];\n  /** Timestamp of mapping creation */\n  timestamp: number;\n}\n\n/**\n * AGUI validation request structure.\n *\n * @example\n */\nexport interface AGUIValidationRequest {\n  /** Type of validation being requested */\n  type: 'document-relevance' | 'domain-mapping' | 'domain-boundaries';\n  /** Human-readable question */\n  question: string;\n  /** Context information for the validation */\n  context: Record<string, any>;\n  /** Available options for selection */\n  options?: Array<{\n    id: string;\n    label: string;\n    preview?: string;\n    metadata?: Record<string, any>;\n  }>;\n  /** Allow custom input beyond provided options */\n  allowCustom?: boolean;\n}\n\n/**\n * Configuration for the Domain Discovery Bridge.\n *\n * @example\n */\nexport interface DomainDiscoveryBridgeConfig {\n  /** Minimum confidence threshold for automatic domain creation */\n  confidenceThreshold?: number;\n  /** Enable automatic domain discovery on document changes */\n  autoDiscovery?: boolean;\n  /** Maximum domains to suggest per document */\n  maxDomainsPerDocument?: number;\n  /** Enable neural network analysis for concept extraction */\n  useNeuralAnalysis?: boolean;\n  /** Cache discovered domains for performance */\n  enableCache?: boolean;\n}\n\n/**\n * Domain Discovery Bridge - Connects document processing with domain analysis.\n *\n * This class acts as the integration point between the document-driven development.\n * Workflow and automatic domain discovery. It analyzes documents for concepts,\n * maps them to code domains, and provides human validation touchpoints..\n *\n * @example\n */\nexport class DomainDiscoveryBridge extends EventEmitter {\n  private config: Required<DomainDiscoveryBridgeConfig>;\n  private discoveredDomains: Map<string, DiscoveredDomain> = new Map();\n  private documentMappings: Map<string, DocumentDomainMapping> = new Map();\n  private conceptCache: Map<string, string[]> = new Map();\n  private initialized = false as boolean;\n  private neuralDomainMapper: NeuralDomainMapper;\n\n  /**\n   * Creates a new Domain Discovery Bridge.\n   *\n   * @param docProcessor - Document processor for scanning and processing documents.\n   * @param domainAnalyzer - Domain analyzer for code analysis and categorization.\n   * @param projectAnalyzer - Project context analyzer with monorepo detection.\n   * @param _intelligenceCoordinator - Intelligence system for cross-domain knowledge (reserved for future use).\n   * @param config - Optional configuration settings.\n   */\n  constructor(\n    private docProcessor: DocumentProcessor,\n    private domainAnalyzer: DomainAnalysisEngine,\n    private projectAnalyzer: ProjectContextAnalyzer,\n    _intelligenceCoordinator: IntelligenceCoordinationSystem, // xxx NEEDS_HUMAN: Parameter not used - confirm if needed for future features\n    config: DomainDiscoveryBridgeConfig = {}\n  ) {\n    super();\n    this.config = {\n      confidenceThreshold: config?.confidenceThreshold ?? 0.7,\n      autoDiscovery: config?.autoDiscovery ?? true,\n      maxDomainsPerDocument: config?.maxDomainsPerDocument ?? 3,\n      useNeuralAnalysis: config?.useNeuralAnalysis ?? true,\n      enableCache: config?.enableCache ?? true,\n    };\n\n    // Initialize neural domain mapper for enhanced domain analysis with Bazel support\n    this.neuralDomainMapper = new NeuralDomainMapper();\n\n    this.setupEventListeners();\n  }\n\n  /**\n   * Initialize the domain discovery bridge.\n   *\n   * Sets up event listeners and performs initial discovery if configured.\n   */\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    logger.info('Initializing Domain Discovery Bridge');\n\n    // Initialize project analyzer if not already done\n    await this.projectAnalyzer.initialize();\n\n    // Perform initial discovery if auto-discovery is enabled\n    if (this.config.autoDiscovery) {\n      const workspaces = this.docProcessor.getWorkspaces();\n      if (workspaces.length > 0) {\n        await this.discoverDomains();\n      }\n    }\n\n    this.initialized = true as boolean;\n    this.emit('initialized');\n    logger.info('Domain Discovery Bridge ready');\n  }\n\n  /**\n   * Discover domains by analyzing documents and code.\n   *\n   * This is the main entry point for domain discovery. It combines document\n   * analysis, code analysis, and human validation to identify domains.\n   *\n   * @returns Array of discovered domains with full metadata.\n   */\n  async discoverDomains(): Promise<DiscoveredDomain[]> {\n    logger.info('Starting domain discovery process');\n\n    // Step 1: Get monorepo information\n    const monorepoInfo = this.projectAnalyzer.getMonorepoInfo();\n    logger.debug('Monorepo info:', monorepoInfo);\n\n    // Step 2: Get all documents from active workspaces\n    const allDocuments = this.getAllWorkspaceDocuments();\n    logger.info(`Found ${allDocuments.length} documents across all workspaces`);\n\n    // Step 3: Ask human for document relevance\n    const relevantDocs = await this.askHumanRelevance(allDocuments);\n    logger.info(`Human selected ${relevantDocs.length} relevant documents`);\n\n    // Step 4: Analyze code domains\n    const projectRoot = monorepoInfo?.hasRootPackageJson ? process.cwd() : '.';\n    const domainAnalysis = await this.domainAnalyzer.analyzeDomainComplexity(projectRoot);\n    logger.info(`Identified ${Object.keys(domainAnalysis.categories).length} domain categories`);\n\n    // Step 5: Create document-domain mappings\n    const mappings = await this.createDocumentDomainMappings(relevantDocs, domainAnalysis);\n    logger.debug(`Created ${mappings.length} document-domain mappings`);\n\n    // Step 6: Validate mappings with human\n    const validatedMappings = await this.validateMappingsWithHuman(mappings);\n    logger.info(`Human validated ${validatedMappings.length} mappings`);\n\n    // Step 7: Generate enriched domains\n    const domains = await this.generateEnrichedDomains(\n      validatedMappings,\n      domainAnalysis,\n      monorepoInfo\n    );\n\n    // Store discovered domains\n    domains.forEach((domain) => {\n      this.discoveredDomains.set(domain.id, domain);\n    });\n\n    // Emit discovery complete event\n    this.emit('discovery:complete', {\n      domainCount: domains.length,\n      documentCount: relevantDocs.length,\n      mappingCount: validatedMappings.length,\n    });\n\n    logger.info(`Domain discovery complete: ${domains.length} domains discovered`);\n    return domains;\n  }\n\n  /**\n   * Ask human to validate document relevance for domain discovery.\n   *\n   * @param documents - All documents to evaluate.\n   * @returns Documents marked as relevant by human.\n   */\n  async askHumanRelevance(documents: Document[]): Promise<Document[]> {\n    if (documents.length === 0) return [];\n\n    // Group documents by type for better presentation\n    const grouped = this.groupDocumentsByType(documents);\n\n    // Analyze each document for relevance suggestions\n    const relevanceAnalysis = await Promise.all(\n      documents.map((doc) => this.analyzeDocumentRelevance(doc))\n    );\n\n    // Create AGUI validation request (for future implementation)\n    // xxx NEEDS_HUMAN: Placeholder for future AGUI implementation\n    const validationRequest: AGUIValidationRequest = {\n      type: 'document-relevance',\n      question: `Found ${documents.length} documents. Which are relevant for domain discovery?`,\n      context: {\n        vision: grouped['vision']?.length || 0,\n        adrs: grouped['adr']?.length || 0,\n        prds: grouped['prd']?.length || 0,\n        epics: grouped['epic']?.length || 0,\n        features: grouped['feature']?.length || 0,\n        tasks: grouped['task']?.length || 0,\n        totalDocuments: documents.length,\n      },\n      options: relevanceAnalysis.map((analysis, index) => ({\n        id: documents[index]?.path || '',\n        label: `${documents[index]?.type?.toUpperCase() || 'UNKNOWN'}: ${basename(documents[index]?.path || '')}`,\n        preview: `${documents[index]?.content?.substring(0, 200) ?? ''}...`,\n        metadata: {\n          suggestedRelevance: analysis.suggestedRelevance,\n          concepts: analysis.concepts.slice(0, 5),\n          reason: analysis.relevanceReason,\n        },\n      })),\n    };\n\n    // Log validation request for future AGUI implementation\n    logger.debug('\uD83E\uDD16 AGUI validation request prepared', {\n      type: validationRequest.type,\n      documentsFound: validationRequest.context,\n      optionsCount: validationRequest.options?.length || 0,\n    });\n\n    // In a real implementation, this would call AGUI\n    // For now, we'll simulate by selecting documents with high relevance\n    const selected = documents.filter((_, index) => {\n      const analysis = relevanceAnalysis[index];\n      return analysis ? (analysis.suggestedRelevance ?? 0) > 0.6 : false;\n    });\n\n    logger.info(`Selected ${selected.length} relevant documents for domain discovery`);\n    return selected;\n  }\n\n  /**\n   * Validate domain mappings with human approval.\n   *\n   * @param mappings - Proposed document-domain mappings.\n   * @returns Human-validated mappings.\n   */\n  async validateMappingsWithHuman(\n    mappings: DocumentDomainMapping[]\n  ): Promise<DocumentDomainMapping[]> {\n    if (mappings.length === 0) return [];\n\n    // Group mappings by domain for easier validation\n    const domainGroups = this.groupMappingsByDomain(mappings);\n\n    // Create validation request (for future implementation)\n    // xxx NEEDS_HUMAN: Placeholder for future AGUI implementation\n    const validationRequest: AGUIValidationRequest = {\n      type: 'domain-mapping',\n      question: `Please validate ${mappings.length} document-domain mappings`,\n      context: {\n        totalMappings: mappings.length,\n        uniqueDomains: Object.keys(domainGroups).length,\n        averageConfidence: this.calculateAverageConfidence(mappings),\n      },\n      options: mappings.map((mapping) => ({\n        id: `${mapping.documentPath}:${mapping.domainIds.join(',')}`,\n        label: `${basename(mapping.documentPath)} \u2192 ${mapping.domainIds.join(', ')}`,\n        preview: `Confidence: ${mapping.confidenceScores.map((s) => `${(s * 100).toFixed(0)}%`).join(', ')}`,\n        metadata: {\n          concepts: mapping.matchedConcepts,\n          documentType: mapping.documentType,\n        },\n      })),\n    };\n\n    // Log validation request for future AGUI implementation\n    logger.debug('\uD83E\uDD16 AGUI mapping validation request prepared', {\n      type: validationRequest.type,\n      totalMappings: validationRequest.context['totalMappings'],\n      domainGroups: validationRequest.context['domainGroups'],\n      optionsCount: validationRequest.options?.length || 0,\n    });\n\n    // Simulate human validation - in reality this would use AGUI\n    const validated = mappings.filter(\n      (mapping) => Math.max(...mapping.confidenceScores) > this.config.confidenceThreshold\n    );\n\n    logger.info(`Human validated ${validated.length} of ${mappings.length} mappings`);\n    return validated;\n  }\n\n  /**\n   * Extract concepts from document content using NLP and pattern matching.\n   *\n   * @param content - Document content to analyze.\n   * @returns Array of extracted concepts.\n   */\n  private extractConcepts(content: string): string[] {\n    if (!content) return [];\n\n    // Check cache first\n    const cacheKey = content.substring(0, 100); // Simple cache key\n    if (this.config.enableCache && this.conceptCache.has(cacheKey)) {\n      return this.conceptCache.get(cacheKey)!;\n    }\n\n    const concepts: Set<string> = new Set();\n\n    // Technical patterns\n    const patterns = [\n      // Architecture patterns\n      /\\b(microservices?|monolith|event-driven|serverless|distributed|cloud-native)\\b/gi,\n      // AI/ML concepts\n      /\\b(neural network|machine learning|deep learning|ai|artificial intelligence|nlp|gnn|cnn|rnn|lstm)\\b/gi,\n      // Data patterns\n      /\\b(database|cache|storage|persistence|memory|redis|postgresql|mongodb|elasticsearch)\\b/gi,\n      // Framework/tech stack\n      /\\b(react|vue|angular|node|express|fastify|typescript|javascript|python|rust|go)\\b/gi,\n      // Domain concepts\n      /\\b(authentication|authorization|payment|messaging|notification|analytics|monitoring)\\b/gi,\n      // Architecture components\n      /\\b(api|rest|graphql|websocket|grpc|queue|broker|gateway|proxy|load balancer)\\b/gi,\n      // Development concepts\n      /\\b(agile|scrum|tdd|ci\\/cd|devops|testing|deployment|docker|kubernetes)\\b/gi,\n    ];\n\n    // Extract concepts using patterns\n    patterns.forEach((pattern) => {\n      const matches = content.match(pattern);\n      if (matches) {\n        matches?.forEach((match) => concepts.add(match?.toLowerCase()));\n      }\n    });\n\n    // Extract from headers (# Header, ## Subheader)\n    const headerMatches = content.match(/^#{1,3}\\s+(.+)$/gm);\n    if (headerMatches) {\n      headerMatches?.forEach((header) => {\n        const cleanHeader = header.replace(/^#+\\s+/, '').toLowerCase();\n        if (cleanHeader.length > 3 && cleanHeader.length < 50) {\n          concepts.add(cleanHeader);\n        }\n      });\n    }\n\n    // Extract from bullet points focusing on key terms\n    const bulletMatches = content.match(/^[\\s-*]+\\s*(.+)$/gm);\n    if (bulletMatches) {\n      bulletMatches?.forEach((bullet) => {\n        const cleanBullet = bullet.replace(/^[\\s-*]+/, '').toLowerCase();\n        patterns.forEach((pattern) => {\n          const matches = cleanBullet.match(pattern);\n          if (matches) {\n            matches?.forEach((match) => concepts.add(match?.toLowerCase()));\n          }\n        });\n      });\n    }\n\n    const conceptArray = Array.from(concepts);\n\n    // Cache the result\n    if (this.config.enableCache) {\n      this.conceptCache.set(cacheKey, conceptArray);\n    }\n\n    return conceptArray;\n  }\n\n  /**\n   * Calculate relevance score between concepts and a domain.\n   *\n   * @param concepts - Extracted concepts from document.\n   * @param domain - Domain to compare against.\n   * @returns Relevance score between 0 and 1.\n   */\n  private calculateRelevance(concepts: string[], domain: DomainAnalysis): number {\n    if (concepts.length === 0) return 0;\n\n    let relevanceScore = 0;\n    let matchCount = 0;\n\n    // Check category matches\n    const categoryKeywords: Record<string, string[]> = {\n      agents: ['agent', 'coordinator', 'orchestrator', 'swarm', 'multi-agent'],\n      coordination: ['coordination', 'orchestration', 'workflow', 'synchronization'],\n      neural: ['neural', 'network', 'ai', 'machine learning', 'deep learning'],\n      memory: ['memory', 'storage', 'cache', 'persistence', 'database'],\n      wasm: ['wasm', 'webassembly', 'binary', 'performance', 'acceleration'],\n      bridge: ['bridge', 'integration', 'adapter', 'connector', 'interface'],\n      models: ['model', 'schema', 'data structure', 'entity', 'preset'],\n    };\n\n    // Check each category\n    Object.entries(domain.categories).forEach(([category, files]) => {\n      if ((files as string[]).length > 0 && categoryKeywords[category]) {\n        const keywords = categoryKeywords[category];\n        const categoryMatches = concepts.filter((concept) =>\n          keywords.some((keyword) => concept.includes(keyword))\n        ).length;\n\n        if (categoryMatches > 0) {\n          relevanceScore += (categoryMatches / keywords.length) * 0.3;\n          matchCount += categoryMatches;\n        }\n      }\n    });\n\n    // Check file name matches\n    const allFiles = Object.values(domain.categories).flat();\n    const fileNameMatches = concepts.filter((concept) =>\n      allFiles.some((file) => (file as string).toLowerCase().includes(concept))\n    ).length;\n\n    if (fileNameMatches > 0) {\n      relevanceScore += (fileNameMatches / concepts.length) * 0.3;\n      matchCount += fileNameMatches;\n    }\n\n    // Complexity bonus - more complex domains might need more documentation\n    if (domain.complexity > 50) {\n      relevanceScore += 0.1;\n    }\n\n    // Coupling bonus - tightly coupled domains might be mentioned together\n    if (domain.coupling?.tightlyCoupledGroups?.length > 0) {\n      relevanceScore += 0.1;\n    }\n\n    // Overall match ratio\n    const matchRatio = matchCount / concepts.length;\n    relevanceScore += matchRatio * 0.2;\n\n    // Normalize to 0-1 range\n    return Math.min(1, Math.max(0, relevanceScore));\n  }\n\n  /**\n   * Analyze a document to determine its relevance for domain discovery.\n   *\n   * @param document - Document to analyze.\n   * @returns Relevance analysis with score and reasoning.\n   */\n  private async analyzeDocumentRelevance(document: Document): Promise<DocumentRelevance> {\n    const concepts = this.extractConcepts(document.content || '');\n\n    // Base relevance on document type\n    let baseRelevance = 0;\n    let relevanceReason = '' as string;\n\n    switch (document.type) {\n      case 'vision':\n        baseRelevance = 0.9;\n        relevanceReason = 'Vision documents define overall system architecture';\n        break;\n      case 'adr':\n        baseRelevance = 0.95;\n        relevanceReason = 'ADRs contain critical architectural decisions';\n        break;\n      case 'prd':\n        baseRelevance = 0.85;\n        relevanceReason = 'PRDs describe product features and domains';\n        break;\n      case 'epic':\n        baseRelevance = 0.7;\n        relevanceReason = 'Epics group related features into domains';\n        break;\n      case 'feature':\n        baseRelevance = 0.6;\n        relevanceReason = 'Features may indicate domain boundaries';\n        break;\n      case 'task':\n        baseRelevance = 0.4;\n        relevanceReason = 'Tasks are too granular for domain discovery';\n        break;\n      default:\n        baseRelevance = 0.5;\n        relevanceReason = 'Unknown document type';\n    }\n\n    // Adjust based on concept richness\n    const conceptScore = Math.min(1, concepts.length / 10);\n    const finalRelevance = baseRelevance * 0.7 + conceptScore * 0.3;\n\n    // Identify potential domains based on concepts\n    const potentialDomains = this.identifyPotentialDomains(concepts);\n\n    return {\n      document,\n      suggestedRelevance: finalRelevance,\n      concepts: concepts.slice(0, 10), // Top 10 concepts\n      potentialDomains,\n      relevanceReason,\n    };\n  }\n\n  /**\n   * Create mappings between documents and domains.\n   *\n   * @param documents - Relevant documents to map.\n   * @param domainAnalysis - Code domain analysis results.\n   * @returns Array of document-domain mappings.\n   */\n  private async createDocumentDomainMappings(\n    documents: Document[],\n    domainAnalysis: DomainAnalysis\n  ): Promise<DocumentDomainMapping[]> {\n    const mappings: DocumentDomainMapping[] = [];\n\n    for (const doc of documents) {\n      const concepts = this.extractConcepts(doc.content || '');\n      const relevanceScore = this.calculateRelevance(concepts, domainAnalysis);\n\n      if (relevanceScore > 0.3) {\n        // Find best matching categories\n        const categoryScores = new Map<string, number>();\n\n        Object.entries(domainAnalysis.categories).forEach(([category, files]) => {\n          if ((files as string[]).length > 0) {\n            const categoryRelevance = this.calculateCategoryRelevance(\n              concepts,\n              category,\n              files as string[]\n            );\n            if (categoryRelevance > 0.3) {\n              categoryScores.set(category, categoryRelevance);\n            }\n          }\n        });\n\n        // Sort by score and take top matches\n        const topCategories = Array.from(categoryScores.entries())\n          .sort((a, b) => b[1] - a[1])\n          .slice(0, this.config.maxDomainsPerDocument);\n\n        if (topCategories.length > 0) {\n          const mapping: DocumentDomainMapping = {\n            documentPath: doc.path,\n            documentType: doc.type,\n            domainIds: topCategories.map(([cat]) => cat),\n            confidenceScores: topCategories.map(([, score]) => score),\n            matchedConcepts: concepts.filter((concept) =>\n              topCategories.some(\n                ([cat]) =>\n                  cat.toLowerCase().includes(concept) || concept.includes(cat.toLowerCase())\n              )\n            ),\n            timestamp: Date.now(),\n          };\n\n          mappings.push(mapping);\n          this.documentMappings.set(doc.path, mapping);\n        }\n      }\n    }\n\n    return mappings;\n  }\n\n  /**\n   * Generate enriched domain objects from validated mappings.\n   *\n   * @param mappings - Validated document-domain mappings.\n   * @param domainAnalysis - Code domain analysis.\n   * @param monorepoInfo - Monorepo information.\n   * @returns Array of enriched discovered domains.\n   */\n  private async generateEnrichedDomains(\n    mappings: DocumentDomainMapping[],\n    domainAnalysis: DomainAnalysis,\n    monorepoInfo: MonorepoInfo | null\n  ): Promise<DiscoveredDomain[]> {\n    const domains: Map<string, DiscoveredDomain> = new Map();\n\n    // Create domains from mappings\n    for (const mapping of mappings) {\n      for (let i = 0; i < mapping.domainIds.length; i++) {\n        const domainId = mapping.domainIds[i];\n        const confidence = mapping.confidenceScores[i];\n\n        if (!domainId) continue; // Skip if domainId is undefined\n        if (confidence === undefined) continue; // Skip if confidence is undefined\n\n        if (!domains.has(domainId)) {\n          const domain = await this.createDomain(domainId, domainAnalysis, monorepoInfo);\n          domains.set(domainId, domain);\n        }\n\n        // Add document to domain\n        const domain = domains.get(domainId)!;\n        if (!domain.documents.includes(mapping.documentPath)) {\n          domain.documents.push(mapping.documentPath);\n        }\n\n        // Add concepts\n        mapping.matchedConcepts.forEach((concept) => {\n          if (!domain.concepts.includes(concept)) {\n            domain.concepts.push(concept);\n          }\n        });\n\n        // Update confidence (weighted average)\n        const docCount = domain.documents.length;\n        domain.confidence = (domain.confidence * (docCount - 1) + (confidence ?? 0)) / docCount;\n      }\n    }\n\n    // Enhanced neural analysis with Bazel integration\n    const domainArray = await this.enhanceDomainsWithNeuralAnalysis(\n      Array.from(domains.values()),\n      domainAnalysis,\n      monorepoInfo\n    );\n\n    return domainArray;\n  }\n\n  /**\n   * Enhance domains using GNN analysis with Bazel metadata integration.\n   *\n   * @param domains - Initial discovered domains.\n   * @param domainAnalysis - Code domain analysis.\n   * @param monorepoInfo - Monorepo information (potentially with Bazel metadata).\n   * @returns Enhanced domains with neural relationship insights.\n   */\n  private async enhanceDomainsWithNeuralAnalysis(\n    domains: DiscoveredDomain[],\n    domainAnalysis: DomainAnalysis,\n    monorepoInfo: MonorepoInfo | null\n  ): Promise<DiscoveredDomain[]> {\n    if (!this.config.useNeuralAnalysis || domains.length < 2) {\n      // Fall back to simple concept-based relationships\n      for (const domain of domains) {\n        domain.relatedDomains = this.findRelatedDomains(domain, domains);\n      }\n      return domains;\n    }\n\n    try {\n      logger.info('\uD83E\uDDE0 Performing GNN-enhanced domain analysis', {\n        domainCount: domains.length,\n        hasBazelMetadata: !!(monorepoInfo?.type === 'bazel' && (monorepoInfo as any).bazelMetadata),\n      });\n\n      // Convert discovered domains to neural format\n      const neuralDomains: Domain[] = domains.map((domain) => ({\n        name: domain.name,\n        files: domain.codeFiles,\n        dependencies: this.extractDomainDependencies(domain, domainAnalysis),\n        confidenceScore: domain.confidence,\n      }));\n\n      // Build dependency graph from domain analysis\n      const dependencyGraph = this.buildDomainDependencyGraph(neuralDomains, domainAnalysis);\n\n      // Get Bazel metadata if available\n      const bazelMetadata =\n        monorepoInfo?.type === 'bazel' ? (monorepoInfo as any).bazelMetadata : null;\n\n      // Perform neural domain relationship analysis\n      const relationshipMap = await this.neuralDomainMapper.mapDomainRelationships(\n        neuralDomains,\n        dependencyGraph,\n        bazelMetadata\n      );\n\n      // Apply neural insights to enhance domains\n      const enhancedDomains = this.applyNeuralInsightsToDemons(\n        domains,\n        relationshipMap,\n        bazelMetadata\n      );\n\n      logger.info('\u2705 Neural domain enhancement complete', {\n        relationships: relationshipMap.relationships.length,\n        avgCohesion:\n          relationshipMap.cohesionScores && relationshipMap.cohesionScores.length > 0\n            ? relationshipMap.cohesionScores.reduce((sum, score) => sum + score.score, 0) /\n              relationshipMap.cohesionScores.length\n            : 0,\n        bazelEnhanced: !!bazelMetadata,\n      });\n\n      return enhancedDomains;\n    } catch (error) {\n      logger.warn('\u26A0\uFE0F  Neural domain analysis failed, falling back to basic analysis:', error);\n\n      // Fallback to concept-based relationships\n      for (const domain of domains) {\n        domain.relatedDomains = this.findRelatedDomains(domain, domains);\n      }\n      return domains;\n    }\n  }\n\n  /**\n   * Extract dependencies for a domain from domain analysis.\n   *\n   * @param domain\n   * @param domainAnalysis\n   */\n  private extractDomainDependencies(\n    domain: DiscoveredDomain,\n    domainAnalysis: DomainAnalysis\n  ): string[] {\n    const dependencies: string[] = [];\n\n    // Check coupling analysis for dependencies\n    for (const coupledGroup of domainAnalysis.coupling?.tightlyCoupledGroups || []) {\n      const hasFiles = coupledGroup.files.some((file: string) => domain.codeFiles.includes(file));\n      if (hasFiles) {\n        // Add other domains that share files in this coupled group\n        const relatedFiles = coupledGroup.files.filter(\n          (file: string) => !domain.codeFiles.includes(file)\n        );\n        dependencies.push(...relatedFiles);\n      }\n    }\n\n    return [...new Set(dependencies)]; // Remove duplicates\n  }\n\n  /**\n   * Build dependency graph for neural analysis.\n   *\n   * @param domains\n   * @param domainAnalysis\n   */\n  private buildDomainDependencyGraph(\n    domains: Domain[],\n    domainAnalysis: DomainAnalysis\n  ): DependencyGraph {\n    const dependencyGraph: DependencyGraph = {};\n\n    for (const domain of domains) {\n      dependencyGraph[domain.name] = {};\n\n      // Analyze relationships based on shared files and concepts\n      for (const otherDomain of domains) {\n        if (domain.name === otherDomain.name) continue;\n\n        let relationshipStrength = 0;\n\n        // Check file coupling\n        const sharedDependencies = domain.dependencies.filter((dep) =>\n          otherDomain.files.some((file) => file.includes(dep) || dep.includes(file))\n        );\n        relationshipStrength += sharedDependencies.length;\n\n        // Check coupling groups\n        for (const coupledGroup of domainAnalysis.coupling?.tightlyCoupledGroups || []) {\n          const domainHasFiles = coupledGroup.files.some((file: string) =>\n            domain.files.includes(file)\n          );\n          const otherHasFiles = coupledGroup.files.some((file: string) =>\n            otherDomain.files.includes(file)\n          );\n\n          if (domainHasFiles && otherHasFiles) {\n            // Use a default coupling score since couplingScore property doesn't exist in the interface\n            relationshipStrength += 5; // Fixed value instead of coupledGroup.couplingScore * 10\n          }\n        }\n\n        if (relationshipStrength > 0) {\n          dependencyGraph[domain.name]![otherDomain.name] = relationshipStrength;\n        }\n      }\n    }\n\n    return dependencyGraph;\n  }\n\n  /**\n   * Apply neural insights to enhance domain objects.\n   *\n   * @param domains\n   * @param relationshipMap\n   * @param bazelMetadata\n   */\n  private applyNeuralInsightsToDemons(\n    domains: DiscoveredDomain[],\n    relationshipMap: any,\n    bazelMetadata: any\n  ): DiscoveredDomain[] {\n    // Create domain name to index mapping\n    const domainIndexMap = new Map(domains.map((d, i) => [d.name, i]));\n\n    // Apply cohesion scores from neural analysis\n    for (const cohesionScore of relationshipMap.cohesionScores) {\n      const domainIndex = domainIndexMap.get(cohesionScore.domainName);\n      if (domainIndex !== undefined && domains[domainIndex]) {\n        // Boost confidence with neural cohesion insights\n        const domain = domains[domainIndex];\n        const neuralBonus = Math.min(cohesionScore.score * 0.2, 0.3); // Cap at 30% bonus\n        domain.confidence = Math.min(domain.confidence + neuralBonus, 1.0);\n      }\n    }\n\n    // Apply relationship insights\n    for (const relationship of relationshipMap.relationships) {\n      const sourceDomain = domains[relationship.source];\n      const targetDomain = domains[relationship.target];\n\n      if (sourceDomain && targetDomain) {\n        // Add bidirectional relationships\n        if (!sourceDomain.relatedDomains.includes(targetDomain.name)) {\n          sourceDomain.relatedDomains.push(targetDomain.name);\n        }\n        if (!targetDomain.relatedDomains.includes(sourceDomain.name)) {\n          targetDomain.relatedDomains.push(sourceDomain.name);\n        }\n\n        // Apply Bazel-specific insights\n        if (bazelMetadata && (relationship).bazelInsights) {\n          const bazelInsights = (relationship).bazelInsights;\n\n          // Add Bazel target information to domain descriptions\n          if (bazelInsights.targetTypes?.length > 0) {\n            sourceDomain.description += ` (Bazel: ${bazelInsights.targetTypes.join(', ')})`;\n          }\n\n          // Adjust topology suggestions based on Bazel relationships\n          if (bazelInsights.dependencyStrength > 0.2) {\n            // Strong Bazel dependencies suggest mesh topology for tight coupling\n            if (sourceDomain.suggestedTopology === 'hierarchical') {\n              sourceDomain.suggestedTopology = 'mesh';\n            }\n            if (targetDomain.suggestedTopology === 'hierarchical') {\n              targetDomain.suggestedTopology = 'mesh';\n            }\n          }\n        }\n      }\n    }\n\n    // Add Bazel workspace insights to domain descriptions\n    if (bazelMetadata && (relationshipMap).bazelEnhancements) {\n      const enhancements = (relationshipMap).bazelEnhancements;\n      logger.info('\uD83D\uDCCA Applied Bazel enhancements to domains', {\n        totalTargets: enhancements.totalTargets,\n        languages: enhancements.languages,\n        workspaceName: enhancements.workspaceName,\n      });\n    }\n\n    return domains;\n  }\n\n  /**\n   * Create a domain object with full metadata.\n   *\n   * @param domainId - Domain identifier (category name).\n   * @param domainAnalysis - Code analysis results.\n   * @param monorepoInfo - Monorepo information.\n   * @param _monorepoInfo\n   * @returns Enriched domain object.\n   */\n  private async createDomain(\n    domainId: string,\n    domainAnalysis: DomainAnalysis,\n    _monorepoInfo: MonorepoInfo | null\n  ): Promise<DiscoveredDomain> {\n    const category = (domainAnalysis.categories as any)[domainId] || [];\n    const description = this.generateDomainDescription(domainId, category.length);\n    const topology = this.suggestTopology(domainId, category.length, domainAnalysis);\n\n    return {\n      id: `domain-${domainId}-${Date.now()}`,\n      name: domainId,\n      description,\n      confidence: 0.5, // Base confidence, will be updated\n      documents: [],\n      codeFiles: category,\n      concepts: [],\n      category: domainId,\n      suggestedTopology: topology,\n      relatedDomains: [],\n      suggestedAgents: [], // Default empty array\n    };\n  }\n\n  /**\n   * Generate human-readable domain description.\n   *\n   * @param domainId - Domain identifier.\n   * @param fileCount - Number of files in domain.\n   * @returns Domain description.\n   */\n  private generateDomainDescription(domainId: string, fileCount: number): string {\n    const descriptions: Record<string, string> = {\n      agents: `Agent coordination and orchestration domain with ${fileCount} files`,\n      coordination: `System coordination and workflow management domain with ${fileCount} files`,\n      neural: `Neural network and AI/ML capabilities domain with ${fileCount} files`,\n      memory: `Memory management and persistence domain with ${fileCount} files`,\n      wasm: `WebAssembly acceleration and performance domain with ${fileCount} files`,\n      bridge: `Integration bridges and adapters domain with ${fileCount} files`,\n      models: `Data models and neural network presets domain with ${fileCount} files`,\n      'core-algorithms': `Core algorithmic implementations with ${fileCount} files`,\n      utilities: `Utility functions and helpers with ${fileCount} files`,\n    };\n\n    return descriptions[domainId] || `${domainId} domain with ${fileCount} files`;\n  }\n\n  /**\n   * Suggest optimal swarm topology for a domain.\n   *\n   * @param domainId - Domain identifier.\n   * @param fileCount - Number of files in domain.\n   * @param analysis - Domain analysis results.\n   * @returns Suggested topology type.\n   */\n  private suggestTopology(\n    domainId: string,\n    fileCount: number,\n    analysis: DomainAnalysis\n  ): 'mesh' | 'hierarchical' | 'ring' | 'star' {\n    // Large domains with many files benefit from hierarchical\n    if (fileCount > 50) return 'hierarchical';\n\n    // Highly coupled domains benefit from mesh\n    const domainCoupling =\n      analysis.coupling?.tightlyCoupledGroups?.filter((group: { files: string[] }) =>\n        group.files.some((file: string) =>\n          (analysis.categories as Record<string, string[]>)[domainId]?.includes(file)\n        )\n      ) || [];\n    // Use file count as a proxy for coupling strength since couplingScore doesn't exist\n    const firstCoupling = domainCoupling[0];\n    if (domainCoupling.length > 0 && firstCoupling && firstCoupling.files.length > 3) {\n      return 'mesh';\n    }\n\n    // Coordination domains work well with star topology\n    if (domainId === 'coordination' || domainId === 'bridge') {\n      return 'star';\n    }\n\n    // Sequential processing domains benefit from ring\n    if (domainId === 'data-processing' || domainId === 'training-systems') {\n      return 'ring';\n    }\n\n    // Default to hierarchical for good balance\n    return 'hierarchical';\n  }\n\n  /**\n   * Find related domains based on shared concepts.\n   *\n   * @param domain - Domain to find relations for.\n   * @param allDomains - All discovered domains.\n   * @returns Array of related domain IDs.\n   */\n  private findRelatedDomains(domain: DiscoveredDomain, allDomains: DiscoveredDomain[]): string[] {\n    const related: Array<{ id: string; score: number }> = [];\n\n    for (const other of allDomains) {\n      if (other.id === domain.id) continue;\n\n      // Calculate shared concepts\n      const sharedConcepts = domain.concepts.filter((concept) => other.concepts.includes(concept));\n\n      // Calculate shared documents\n      const sharedDocs = domain.documents.filter((doc) => other.documents.includes(doc));\n\n      // Calculate relationship score\n      const conceptScore = sharedConcepts.length / Math.max(domain.concepts.length, 1);\n      const docScore = sharedDocs.length / Math.max(domain.documents.length, 1);\n      const totalScore = conceptScore * 0.7 + docScore * 0.3;\n\n      if (totalScore > 0.2) {\n        related.push({ id: other.id, score: totalScore });\n      }\n    }\n\n    // Sort by score and return top 3\n    return related\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 3)\n      .map((r) => r.id);\n  }\n\n  /**\n   * Calculate category relevance for concept matching.\n   *\n   * @param concepts - Document concepts.\n   * @param category - Domain category.\n   * @param files - Files in the category.\n   * @returns Relevance score (0-1).\n   */\n  private calculateCategoryRelevance(\n    concepts: string[],\n    category: string,\n    files: string[]\n  ): number {\n    let score = 0;\n\n    // Check if category name appears in concepts\n    if (concepts.some((c) => c.includes(category) || category.includes(c))) {\n      score += 0.4;\n    }\n\n    // Check file name matches\n    const fileMatches = files.filter((file) =>\n      concepts.some((concept) => file.toLowerCase().includes(concept))\n    ).length;\n\n    score += Math.min(0.3, (fileMatches / files.length) * 0.3);\n\n    // Category-specific bonuses\n    const categoryBonuses: Record<string, string[]> = {\n      neural: ['ai', 'ml', 'neural', 'network', 'deep learning'],\n      agents: ['agent', 'swarm', 'coordinator', 'orchestrator'],\n      memory: ['storage', 'cache', 'persistence', 'database'],\n    };\n\n    const bonusCategory = categoryBonuses[category];\n    if (bonusCategory) {\n      const bonusMatches = concepts.filter((c) =>\n        bonusCategory.some((bonus) => c.includes(bonus))\n      ).length;\n      score += Math.min(0.3, (bonusMatches / bonusCategory.length) * 0.3);\n    }\n\n    return Math.min(1, score);\n  }\n\n  /**\n   * Identify potential domains from concept list.\n   *\n   * @param concepts - Extracted concepts.\n   * @returns Array of potential domain names.\n   */\n  private identifyPotentialDomains(concepts: string[]): string[] {\n    const domains: Set<string> = new Set();\n\n    const domainPatterns: Record<string, string[]> = {\n      authentication: ['auth', 'login', 'jwt', 'oauth', 'security'],\n      'neural-processing': ['neural', 'ai', 'ml', 'deep learning', 'network'],\n      'data-storage': ['database', 'storage', 'persistence', 'cache', 'memory'],\n      'api-gateway': ['api', 'rest', 'graphql', 'gateway', 'endpoint'],\n      messaging: ['message', 'queue', 'broker', 'pubsub', 'event'],\n      monitoring: ['monitor', 'metrics', 'logging', 'telemetry', 'observability'],\n    };\n\n    Object.entries(domainPatterns).forEach(([domain, keywords]) => {\n      if (concepts.some((concept) => keywords.some((kw) => concept.includes(kw)))) {\n        domains.add(domain);\n      }\n    });\n\n    return Array.from(domains);\n  }\n\n  /**\n   * Get all documents from active workspaces.\n   *\n   * @returns Array of all documents across workspaces.\n   */\n  private getAllWorkspaceDocuments(): Document[] {\n    const documents: Document[] = [];\n    const workspaces = this.docProcessor.getWorkspaces();\n\n    for (const workspaceId of workspaces) {\n      const workspaceDocs = this.docProcessor.getWorkspaceDocuments(workspaceId);\n      documents.push(...Array.from(workspaceDocs.values()));\n    }\n\n    return documents;\n  }\n\n  /**\n   * Group documents by type for analysis.\n   *\n   * @param documents - Documents to group.\n   * @returns Grouped documents by type.\n   */\n  private groupDocumentsByType(documents: Document[]): Record<DocumentType, Document[]> {\n    const grouped: Partial<Record<DocumentType, Document[]>> = {};\n\n    documents.forEach((doc) => {\n      if (!grouped[doc.type]) {\n        grouped[doc.type] = [];\n      }\n      grouped[doc.type]!.push(doc);\n    });\n\n    return grouped as Record<DocumentType, Document[]>;\n  }\n\n  /**\n   * Group mappings by domain for validation.\n   *\n   * @param mappings - Mappings to group.\n   * @returns Mappings grouped by domain.\n   */\n  private groupMappingsByDomain(\n    mappings: DocumentDomainMapping[]\n  ): Record<string, DocumentDomainMapping[]> {\n    const grouped: Record<string, DocumentDomainMapping[]> = {};\n\n    mappings.forEach((mapping) => {\n      mapping.domainIds.forEach((domainId) => {\n        if (!grouped[domainId]) {\n          grouped[domainId] = [];\n        }\n        grouped[domainId]?.push(mapping);\n      });\n    });\n\n    return grouped;\n  }\n\n  /**\n   * Calculate average confidence across mappings.\n   *\n   * @param mappings - Mappings to analyze.\n   * @returns Average confidence score.\n   */\n  private calculateAverageConfidence(mappings: DocumentDomainMapping[]): number {\n    if (mappings.length === 0) return 0;\n\n    const totalConfidence = mappings.reduce((sum, mapping) => {\n      const avgMappingConfidence =\n        mapping.confidenceScores.reduce((a, b) => a + b, 0) / mapping.confidenceScores.length;\n      return sum + avgMappingConfidence;\n    }, 0);\n\n    return totalConfidence / mappings.length;\n  }\n\n  /**\n   * Setup event listeners for document processing.\n   */\n  private setupEventListeners(): void {\n    // Listen for document processing events\n    this.docProcessor.on('document:processed', async (event) => {\n      if (this.config.autoDiscovery) {\n        logger.debug(`Document processed: ${event.document.path}`);\n        await this.onDocumentProcessed(event);\n      }\n    });\n\n    // Listen for workspace loading\n    this.docProcessor.on('workspace:loaded', async (event) => {\n      if (this.config.autoDiscovery) {\n        logger.debug(`Workspace loaded: ${event.workspaceId}`);\n        await this.onWorkspaceLoaded(event);\n      }\n    });\n  }\n\n  /**\n   * Handle document processed event.\n   *\n   * @param event - Document processed event.\n   */\n  private async onDocumentProcessed(event: any): Promise<void> {\n    const { document } = event;\n\n    // Analyze relevance\n    const relevance = await this.analyzeDocumentRelevance(document);\n\n    // If relevant enough, trigger domain discovery\n    if (relevance.suggestedRelevance > this.config.confidenceThreshold) {\n      logger.info(`Document ${document.path} is relevant for domain discovery`);\n      this.emit('document:relevant', relevance);\n    }\n  }\n\n  /**\n   * Handle workspace loaded event.\n   *\n   * @param event - Workspace loaded event.\n   */\n  private async onWorkspaceLoaded(event: any): Promise<void> {\n    const { workspaceId, documentCount } = event;\n\n    if (documentCount > 0) {\n      logger.info(`Workspace ${workspaceId} loaded with ${documentCount} documents`);\n      // Trigger discovery in background\n      setImmediate(() =>\n        this.discoverDomains().catch((err) =>\n          logger.error('Background domain discovery failed:', err)\n        )\n      );\n    }\n  }\n\n  /**\n   * Get discovered domains.\n   *\n   * @returns Map of discovered domains.\n   */\n  getDiscoveredDomains(): Map<string, DiscoveredDomain> {\n    return new Map(this.discoveredDomains);\n  }\n\n  /**\n   * Get document mappings.\n   *\n   * @returns Map of document-domain mappings.\n   */\n  getDocumentMappings(): Map<string, DocumentDomainMapping> {\n    return new Map(this.documentMappings);\n  }\n\n  /**\n   * Clear all caches and reset state.\n   */\n  clearCache(): void {\n    this.conceptCache.clear();\n    logger.debug('Concept cache cleared');\n  }\n\n  /**\n   * Shutdown the bridge and clean up resources.\n   */\n  async shutdown(): Promise<void> {\n    logger.info('Shutting down Domain Discovery Bridge...');\n    this.removeAllListeners();\n    this.clearCache();\n    this.discoveredDomains.clear();\n    this.documentMappings.clear();\n    logger.info('Domain Discovery Bridge shutdown complete');\n  }\n}\n\n/**\n * Factory function to create a configured Domain Discovery Bridge.\n *\n * @param docProcessor - Document processor instance.\n * @param domainAnalyzer - Domain analyzer instance.\n * @param projectAnalyzer - Project analyzer instance.\n * @param intelligenceCoordinator - Intelligence coordinator instance.\n * @param config - Optional configuration.\n * @returns Configured DomainDiscoveryBridge instance.\n * @example\n */\nexport function createDomainDiscoveryBridge(\n  docProcessor: DocumentProcessor,\n  domainAnalyzer: DomainAnalysisEngine,\n  projectAnalyzer: ProjectContextAnalyzer,\n  intelligenceCoordinator: IntelligenceCoordinationSystem,\n  config?: DomainDiscoveryBridgeConfig\n): DomainDiscoveryBridge {\n  return new DomainDiscoveryBridge(\n    docProcessor,\n    domainAnalyzer,\n    projectAnalyzer,\n    intelligenceCoordinator,\n    config\n  );\n}\n", "/**\n * @fileoverview Graph Neural Network (GNN) Model Implementation\n * \n * This module implements a comprehensive Graph Neural Network (GNN) using message passing\n * architecture for analyzing graph-structured data such as domain relationships, code dependencies,\n * and error propagation patterns. The implementation includes:\n * \n * - Message passing layers with configurable aggregation (mean, max, sum)\n * - GRU-style node updates with gating mechanisms\n * - Support for both node and edge features\n * - Training with validation and early stopping\n * - WASM acceleration compatibility\n * - Multiple activation functions (ReLU, tanh, sigmoid)\n * \n * @author Claude Code Zen Team\n * @version 1.0.0-alpha.43\n * @since 2024-01-01\n * \n * @example Basic GNN Usage\n * ```javascript\n * const gnn = new GNNModel({\n *   nodeDimensions: 128,\n *   edgeDimensions: 64,\n *   numLayers: 3,\n *   aggregation: 'mean'\n * });\n * \n * // Prepare graph data\n * const graphData = {\n *   nodes: new Float32Array([...]), // Node features\n *   edges: new Float32Array([...]), // Edge features  \n *   adjacency: [[0,1], [1,2], [2,0]] // Graph connections\n * };\n * \n * // Forward pass\n * const predictions = await gnn.forward(graphData, false);\n * console.log(predictions.shape); // [numNodes, outputDimensions]\n * ```\n * \n * @example Training GNN\n * ```javascript\n * const trainingData = [{\n *   graphs: graphData,\n *   targets: { taskType: 'node_classification', labels: [...] }\n * }];\n * \n * const results = await gnn.train(trainingData, {\n *   epochs: 50,\n *   batchSize: 32,\n *   learningRate: 0.001,\n *   validationSplit: 0.2\n * });\n * \n * console.log('Training completed:', results.finalLoss);\n * ```\n */\n\n// import { NeuralModel } from './base.js'; // Base class temporarily commented out\n\n/**\n * Graph Neural Network (GNN) Model class implementing message passing architecture.\n * \n * This class provides a complete GNN implementation with configurable message passing layers,\n * node update mechanisms, and training capabilities. It supports various graph learning tasks\n * including node classification, graph classification, and link prediction.\n * \n * Key Features:\n * - Configurable message passing with 1-10 layers\n * - Multiple aggregation strategies (mean, max, sum)\n * - GRU-style gated node updates for improved gradient flow\n * - Support for heterogeneous graphs with node and edge features\n * - Batch processing and validation during training\n * - Memory-efficient Float32Array operations\n * - Extensible architecture for custom graph tasks\n * \n * @class GNNModel\n * @extends {NeuralModel}\n */\nclass GNNModel extends NeuralModel {\n  /**\n   * Creates a new Graph Neural Network model with specified configuration.\n   * \n   * @constructor\n   * @param {Object} [config={}] - Configuration object for the GNN model\n   * @param {number} [config.nodeDimensions=128] - Input node feature dimension\n   * @param {number} [config.edgeDimensions=64] - Input edge feature dimension  \n   * @param {number} [config.hiddenDimensions=256] - Hidden layer dimension for message passing\n   * @param {number} [config.outputDimensions=128] - Output node embedding dimension\n   * @param {number} [config.numLayers=3] - Number of message passing layers (1-10 recommended)\n   * @param {'mean'|'max'|'sum'} [config.aggregation='mean'] - Message aggregation strategy\n   * @param {'relu'|'tanh'|'sigmoid'} [config.activation='relu'] - Activation function\n   * @param {number} [config.dropoutRate=0.2] - Dropout rate for training regularization (0-1)\n   * @param {number} [config.messagePassingSteps=3] - Steps of message passing per layer\n   * \n   * @example\n   * ```javascript\n   * const gnn = new GNNModel({\n   *   nodeDimensions: 64,     // Input node features\n   *   edgeDimensions: 32,     // Input edge features\n   *   hiddenDimensions: 128,  // Hidden layer size\n   *   outputDimensions: 96,   // Output embedding size\n   *   numLayers: 4,           // 4 message passing layers\n   *   aggregation: 'mean',    // Average neighbor messages\n   *   activation: 'relu',     // ReLU activation\n   *   dropoutRate: 0.3        // 30% dropout during training\n   * });\n   * ```\n   */\n  constructor(config = {}) {\n    super('gnn');\n\n    /**\n     * GNN model configuration containing all hyperparameters and architecture settings.\n     * \n     * @type {Object}\n     * @property {number} nodeDimensions - Dimension of input node features\n     * @property {number} edgeDimensions - Dimension of input edge features\n     * @property {number} hiddenDimensions - Hidden layer size for message passing\n     * @property {number} outputDimensions - Final output embedding dimension\n     * @property {number} numLayers - Number of GNN layers for deep message passing\n     * @property {string} aggregation - How to combine neighbor messages ('mean'|'max'|'sum')\n     * @property {string} activation - Activation function for non-linearity\n     * @property {number} dropoutRate - Regularization dropout rate during training\n     * @property {number} messagePassingSteps - Steps of message propagation per layer\n     */\n    this.config = {\n      nodeDimensions: config.nodeDimensions || 128,\n      edgeDimensions: config.edgeDimensions || 64,\n      hiddenDimensions: config.hiddenDimensions || 256,\n      outputDimensions: config.outputDimensions || 128,\n      numLayers: config.numLayers || 3,\n      aggregation: config.aggregation || 'mean', // mean, max, sum\n      activation: config.activation || 'relu',\n      dropoutRate: config.dropoutRate || 0.2,\n      messagePassingSteps: config.messagePassingSteps || 3,\n      ...config,\n    };\n\n    /**\n     * Message passing weights for each GNN layer.\n     * Contains node-to-message and edge-to-message transformation matrices.\n     * @type {Array<Object>}\n     */\n    this.messageWeights = [];\n\n    /**\n     * Node update weights implementing GRU-style gated updates.\n     * Contains update and gate transformation matrices for each layer.\n     * @type {Array<Object>}\n     */\n    this.updateWeights = [];\n\n    /**\n     * Aggregation weights for attention-based message combination.\n     * Used when sophisticated aggregation beyond mean/max/sum is needed.\n     * @type {Array<Object>}\n     */\n    this.aggregateWeights = [];\n\n    /**\n     * Final output transformation weights to produce node embeddings.\n     * Maps from hidden dimensions to output dimensions.\n     * @type {Object|null}\n     */\n    this.outputWeights = null;\n\n    this.initializeWeights();\n  }\n\n  /**\n   * Initializes all GNN weights using He initialization for optimal gradient flow.\n   * \n   * This method sets up weight matrices for all GNN components:\n   * - Message passing weights (node-to-message and edge-to-message transformations)\n   * - Node update weights (GRU-style gated updates with update and gate matrices)\n   * - Aggregation weights (attention mechanisms for sophisticated message combination)\n   * - Output transformation weights (final node embedding projection)\n   * \n   * He initialization is used for ReLU activation functions to prevent vanishing/exploding gradients.\n   * \n   * @private\n   * @method initializeWeights\n   * @returns {void}\n   * \n   * @example Weight Structure\n   * ```javascript\n   * this.messageWeights[layer] = {\n   *   nodeToMessage: Float32Array,  // [inputDim, hiddenDim]\n   *   edgeToMessage: Float32Array,  // [edgeDim, hiddenDim]\n   *   messageBias: Float32Array     // [hiddenDim]\n   * };\n   * \n   * this.updateWeights[layer] = {\n   *   updateTransform: Float32Array, // [hiddenDim*2, hiddenDim]\n   *   updateBias: Float32Array,      // [hiddenDim]\n   *   gateTransform: Float32Array,   // [hiddenDim*2, hiddenDim]\n   *   gateBias: Float32Array         // [hiddenDim]\n   * };\n   * ```\n   */\n  initializeWeights() {\n    // Initialize weights for each layer\n    for (let layer = 0; layer < this.config.numLayers; layer++) {\n      const inputDim = layer === 0 ? this.config.nodeDimensions : this.config.hiddenDimensions;\n\n      // Message passing weights\n      this.messageWeights.push({\n        nodeToMessage: this.createWeight([inputDim, this.config.hiddenDimensions]),\n        edgeToMessage: this.createWeight([\n          this.config.edgeDimensions,\n          this.config.hiddenDimensions,\n        ]),\n        messageBias: new Float32Array(this.config.hiddenDimensions).fill(0.0),\n      });\n\n      // Node update weights\n      this.updateWeights.push({\n        updateTransform: this.createWeight([\n          this.config.hiddenDimensions * 2,\n          this.config.hiddenDimensions,\n        ]),\n        updateBias: new Float32Array(this.config.hiddenDimensions).fill(0.0),\n        gateTransform: this.createWeight([\n          this.config.hiddenDimensions * 2,\n          this.config.hiddenDimensions,\n        ]),\n        gateBias: new Float32Array(this.config.hiddenDimensions).fill(0.0),\n      });\n\n      // Aggregation weights (for attention-based aggregation)\n      this.aggregateWeights.push({\n        attention: this.createWeight([this.config.hiddenDimensions, 1]),\n        attentionBias: new Float32Array(1).fill(0.0),\n      });\n    }\n\n    // Output layer\n    this.outputWeights = {\n      transform: this.createWeight([this.config.hiddenDimensions, this.config.outputDimensions]),\n      bias: new Float32Array(this.config.outputDimensions).fill(0.0),\n    };\n  }\n\n  createWeight(shape) {\n    const size = shape.reduce((a, b) => a * b, 1);\n    const weight = new Float32Array(size);\n\n    // He initialization for ReLU\n    const scale = Math.sqrt(2.0 / shape[0]);\n    for (let i = 0; i < size; i++) {\n      weight[i] = (Math.random() * 2 - 1) * scale;\n    }\n\n    weight.shape = shape;\n    return weight;\n  }\n\n  /**\n   * Performs forward pass through the Graph Neural Network.\n   * \n   * This is the main inference method that processes graph data through multiple message passing\n   * layers to generate node embeddings. The forward pass includes:\n   * \n   * 1. Input validation and preprocessing\n   * 2. Multi-layer message passing with neighbor aggregation\n   * 3. Node state updates using GRU-style gating\n   * 4. Activation functions and dropout (if training)\n   * 5. Final output transformation\n   * \n   * @async\n   * @method forward\n   * @param {Object} graphData - Input graph data structure\n   * @param {Float32Array} graphData.nodes - Node feature matrix [numNodes, nodeFeatureDim]\n   * @param {Float32Array} [graphData.edges] - Edge feature matrix [numEdges, edgeFeatureDim]\n   * @param {Array<Array<number>>} graphData.adjacency - Adjacency list [[source, target], ...]\n   * @param {boolean} [training=false] - Whether to apply training-time behaviors (dropout, etc.)\n   * \n   * @returns {Promise<Float32Array>} Node embeddings with shape [numNodes, outputDimensions]\n   * \n   * @throws {Error} When graph data validation fails (invalid dimensions, missing nodes, etc.)\n   * \n   * @example Basic Forward Pass\n   * ```javascript\n   * const graphData = {\n   *   nodes: new Float32Array([\n   *     1.0, 0.5, 0.2,  // Node 0 features\n   *     0.8, 1.0, 0.1,  // Node 1 features  \n   *     0.3, 0.7, 0.9   // Node 2 features\n   *   ]),\n   *   adjacency: [[0,1], [1,2], [2,0]], // Triangle graph\n   *   edges: new Float32Array([...])    // Optional edge features\n   * };\n   * \n   * const embeddings = await gnn.forward(graphData, false);\n   * console.log(embeddings.shape); // [3, outputDimensions]\n   * ```\n   * \n   * @example Training Mode\n   * ```javascript\n   * // Training mode enables dropout and other training-specific behaviors\n   * const embeddings = await gnn.forward(graphData, true);\n   * // Dropout will be applied based on this.config.dropoutRate\n   * ```\n   */\n  async forward(graphData, training = false) {\n    const { nodes, edges, adjacency } = graphData;\n    const numNodes = nodes.shape[0];\n\n    // Validate graph data with comprehensive error messages\n    if (numNodes <= 0) {\n      throw new Error(`Invalid number of nodes: ${numNodes}. Graph must contain at least one node.`);\n    }\n    if (nodes.shape[1] !== this.config.nodeDimensions) {\n      throw new Error(\n        `Node feature dimension mismatch: expected ${this.config.nodeDimensions}, got ${nodes.shape[1]}. ` +\n        `Check your input node features and GNN configuration.`\n      );\n    }\n    if (adjacency && adjacency.length > 0) {\n      const maxNodeId = Math.max(...adjacency.flat());\n      if (maxNodeId >= numNodes) {\n        throw new Error(\n          `Adjacency list references node ${maxNodeId} but only ${numNodes} nodes provided. ` +\n          `Node indices must be in range [0, ${numNodes-1}].`\n        );\n      }\n    }\n\n    // Initialize node representations\n    let nodeRepresentations = nodes;\n\n    // Message passing layers\n    for (let layer = 0; layer < this.config.numLayers; layer++) {\n      // Compute messages\n      const messages = await this.computeMessages(nodeRepresentations, edges, adjacency, layer);\n\n      // Aggregate messages\n      const aggregatedMessages = this.aggregateMessages(messages, adjacency, layer);\n\n      // Update node representations\n      nodeRepresentations = this.updateNodes(nodeRepresentations, aggregatedMessages, layer);\n\n      // Apply activation\n      nodeRepresentations = this.applyActivation(nodeRepresentations);\n\n      // Apply dropout if training\n      if (training && this.config.dropoutRate > 0) {\n        nodeRepresentations = this.dropout(nodeRepresentations, this.config.dropoutRate);\n      }\n    }\n\n    // Final output transformation\n    const output = this.computeOutput(nodeRepresentations);\n\n    return output;\n  }\n\n  async computeMessages(nodes, edges, adjacency, layerIndex) {\n    const weights = this.messageWeights[layerIndex];\n    const numEdges = adjacency.length;\n    const messages = new Float32Array(numEdges * this.config.hiddenDimensions);\n\n    // For each edge, compute message\n    for (let edgeIdx = 0; edgeIdx < numEdges; edgeIdx++) {\n      const [sourceIdx, _targetIdx] = adjacency[edgeIdx];\n\n      // Get source node features\n      const sourceStart = sourceIdx * nodes.shape[1];\n      const sourceEnd = sourceStart + nodes.shape[1];\n      const sourceFeatures = nodes.slice(sourceStart, sourceEnd);\n\n      // Transform source node features\n      const nodeMessage = this.transform(\n        sourceFeatures,\n        weights.nodeToMessage,\n        weights.messageBias\n      );\n\n      // If edge features exist, incorporate them\n      if (edges && edges.length > 0) {\n        const edgeStart = edgeIdx * this.config.edgeDimensions;\n        const edgeEnd = edgeStart + this.config.edgeDimensions;\n        const edgeFeatures = edges.slice(edgeStart, edgeEnd);\n\n        const edgeMessage = this.transform(\n          edgeFeatures,\n          weights.edgeToMessage,\n          new Float32Array(this.config.hiddenDimensions)\n        );\n\n        // Combine node and edge messages\n        for (let i = 0; i < this.config.hiddenDimensions; i++) {\n          messages[edgeIdx * this.config.hiddenDimensions + i] = nodeMessage[i] + edgeMessage[i];\n        }\n      } else {\n        // Just use node message\n        for (let i = 0; i < this.config.hiddenDimensions; i++) {\n          messages[edgeIdx * this.config.hiddenDimensions + i] = nodeMessage[i];\n        }\n      }\n    }\n\n    return messages;\n  }\n\n  aggregateMessages(messages, adjacency, _layerIndex) {\n    const numNodes = Math.max(...adjacency.flat()) + 1;\n    const aggregated = new Float32Array(numNodes * this.config.hiddenDimensions);\n    const messageCounts = new Float32Array(numNodes);\n\n    // Aggregate messages by target node\n    for (let edgeIdx = 0; edgeIdx < adjacency.length; edgeIdx++) {\n      const [_, targetIdx] = adjacency[edgeIdx];\n      messageCounts[targetIdx]++;\n\n      for (let dim = 0; dim < this.config.hiddenDimensions; dim++) {\n        const messageValue = messages[edgeIdx * this.config.hiddenDimensions + dim];\n        const targetOffset = targetIdx * this.config.hiddenDimensions + dim;\n\n        switch (this.config.aggregation) {\n          case 'sum':\n            aggregated[targetOffset] += messageValue;\n            break;\n          case 'max':\n            aggregated[targetOffset] = Math.max(aggregated[targetOffset], messageValue);\n            break;\n          default:\n            aggregated[targetOffset] += messageValue;\n        }\n      }\n    }\n\n    // Normalize for mean aggregation\n    if (this.config.aggregation === 'mean') {\n      for (let nodeIdx = 0; nodeIdx < numNodes; nodeIdx++) {\n        if (messageCounts[nodeIdx] > 0) {\n          for (let dim = 0; dim < this.config.hiddenDimensions; dim++) {\n            aggregated[nodeIdx * this.config.hiddenDimensions + dim] /= messageCounts[nodeIdx];\n          }\n        }\n      }\n    }\n\n    aggregated.shape = [numNodes, this.config.hiddenDimensions];\n    return aggregated;\n  }\n\n  updateNodes(currentNodes, aggregatedMessages, layerIndex) {\n    const weights = this.updateWeights[layerIndex];\n    const numNodes = currentNodes.shape[0];\n    const updated = new Float32Array(numNodes * this.config.hiddenDimensions);\n\n    for (let nodeIdx = 0; nodeIdx < numNodes; nodeIdx++) {\n      // Get current node representation\n      const nodeStart = nodeIdx * currentNodes.shape[1];\n      const nodeEnd = nodeStart + currentNodes.shape[1];\n      const nodeFeatures = currentNodes.slice(nodeStart, nodeEnd);\n\n      // Get aggregated messages for this node\n      const msgStart = nodeIdx * this.config.hiddenDimensions;\n      const msgEnd = msgStart + this.config.hiddenDimensions;\n      const nodeMessages = aggregatedMessages.slice(msgStart, msgEnd);\n\n      // Concatenate node features and messages\n      const concatenated = new Float32Array(nodeFeatures.length + nodeMessages.length);\n      concatenated.set(nodeFeatures, 0);\n      concatenated.set(nodeMessages, nodeFeatures.length);\n\n      // GRU-style update\n      const updateGate = this.sigmoid(\n        this.transform(concatenated, weights.gateTransform, weights.gateBias)\n      );\n\n      const candidate = this.tanh(\n        this.transform(concatenated, weights.updateTransform, weights.updateBias)\n      );\n\n      // Apply gated update\n      for (let dim = 0; dim < this.config.hiddenDimensions; dim++) {\n        const idx = nodeIdx * this.config.hiddenDimensions + dim;\n        const gate = updateGate[dim];\n        const currentValue = dim < nodeFeatures.length ? nodeFeatures[dim] : 0;\n        updated[idx] = gate * candidate[dim] + (1 - gate) * currentValue;\n      }\n    }\n\n    updated.shape = [numNodes, this.config.hiddenDimensions];\n    return updated;\n  }\n\n  computeOutput(nodeRepresentations) {\n    const output = this.transform(\n      nodeRepresentations,\n      this.outputWeights.transform,\n      this.outputWeights.bias\n    );\n\n    output.shape = [nodeRepresentations.shape[0], this.config.outputDimensions];\n    return output;\n  }\n\n  transform(input, weight, bias) {\n    // Simple linear transformation\n    const inputDim = weight.shape[0];\n    const outputDim = weight.shape[1];\n    const numSamples = input.length / inputDim;\n    const output = new Float32Array(numSamples * outputDim);\n\n    for (let sample = 0; sample < numSamples; sample++) {\n      for (let out = 0; out < outputDim; out++) {\n        let sum = bias[out];\n        for (let inp = 0; inp < inputDim; inp++) {\n          sum += input[sample * inputDim + inp] * weight[inp * outputDim + out];\n        }\n        output[sample * outputDim + out] = sum;\n      }\n    }\n\n    return output;\n  }\n\n  applyActivation(input) {\n    switch (this.config.activation) {\n      case 'relu':\n        return this.relu(input);\n      case 'tanh':\n        return this.tanh(input);\n      case 'sigmoid':\n        return this.sigmoid(input);\n      default:\n        return input;\n    }\n  }\n\n  /**\n   * Trains the Graph Neural Network using provided training data.\n   * \n   * This method implements a complete training loop with the following features:\n   * - Configurable epochs, batch size, and learning rate\n   * - Automatic train/validation split for model evaluation\n   * - Data shuffling between epochs for better convergence\n   * - Support for multiple graph learning tasks (node classification, graph classification, link prediction)\n   * - Training history tracking with loss and validation metrics\n   * - Early stopping potential and model checkpointing\n   * \n   * The training process uses mini-batch gradient descent with configurable parameters.\n   * Loss functions are automatically selected based on the task type specified in targets.\n   * \n   * @async\n   * @method train\n   * @param {Array<Object>} trainingData - Array of training samples\n   * @param {Object} trainingData[].graphs - Graph data for this sample (nodes, edges, adjacency)\n   * @param {Object} trainingData[].targets - Target labels/values for this sample\n   * @param {'node_classification'|'graph_classification'|'link_prediction'} trainingData[].targets.taskType - Type of learning task\n   * @param {Array<number>} [trainingData[].targets.labels] - Classification labels for node/graph classification\n   * @param {Array<number>} [trainingData[].targets.values] - Regression values for link prediction\n   * @param {Object} [options={}] - Training configuration options\n   * @param {number} [options.epochs=10] - Number of training epochs (1-1000)\n   * @param {number} [options.batchSize=32] - Batch size for mini-batch training (1-256)\n   * @param {number} [options.learningRate=0.001] - Learning rate for gradient descent (1e-5 to 1e-1)\n   * @param {number} [options.validationSplit=0.1] - Fraction of data for validation (0-0.5)\n   * \n   * @returns {Promise<Object>} Training results with history and final metrics\n   * @returns {Array<Object>} returns.history - Per-epoch training history\n   * @returns {number} returns.history[].epoch - Epoch number\n   * @returns {number} returns.history[].trainLoss - Training loss for this epoch\n   * @returns {number} returns.history[].valLoss - Validation loss for this epoch  \n   * @returns {number} returns.finalLoss - Final training loss\n   * @returns {string} returns.modelType - Model type identifier ('gnn')\n   * @returns {number} returns.accuracy - Final model accuracy (simulated)\n   * \n   * @throws {Error} When training data is invalid or training fails\n   * \n   * @example Node Classification Training\n   * ```javascript\n   * const trainingData = [\n   *   {\n   *     graphs: {\n   *       nodes: new Float32Array([...]),\n   *       adjacency: [[0,1], [1,2]],\n   *       edges: new Float32Array([...])\n   *     },\n   *     targets: {\n   *       taskType: 'node_classification',\n   *       labels: [0, 1, 0] // Class labels for each node\n   *     }\n   *   }\n   * ];\n   * \n   * const results = await gnn.train(trainingData, {\n   *   epochs: 50,\n   *   batchSize: 16,\n   *   learningRate: 0.01,\n   *   validationSplit: 0.2\n   * });\n   * \n   * console.log(`Training completed with loss: ${results.finalLoss}`);\n   * console.log(`Model accuracy: ${results.accuracy}`);\n   * ```\n   * \n   * @example Graph Classification Training  \n   * ```javascript\n   * const trainingData = [\n   *   {\n   *     graphs: graphData1,\n   *     targets: {\n   *       taskType: 'graph_classification',\n   *       labels: [1] // Graph-level class label\n   *     }\n   *   },\n   *   {\n   *     graphs: graphData2,\n   *     targets: {\n   *       taskType: 'graph_classification', \n   *       labels: [0]\n   *     }\n   *   }\n   * ];\n   * \n   * const results = await gnn.train(trainingData, {\n   *   epochs: 100,\n   *   batchSize: 8,\n   *   learningRate: 0.005\n   * });\n   * ```\n   */\n  async train(trainingData, options = {}) {\n    const { epochs = 10, batchSize = 32, learningRate = 0.001, validationSplit = 0.1 } = options;\n\n    const trainingHistory = [];\n\n    // Split data\n    const splitIndex = Math.floor(trainingData.length * (1 - validationSplit));\n    const trainData = trainingData.slice(0, splitIndex);\n    const valData = trainingData.slice(splitIndex);\n\n    for (let epoch = 0; epoch < epochs; epoch++) {\n      let epochLoss = 0;\n      let batchCount = 0;\n\n      // Shuffle training data\n      const shuffled = this.shuffle(trainData);\n\n      // Process batches\n      for (let i = 0; i < shuffled.length; i += batchSize) {\n        const batch = shuffled.slice(i, Math.min(i + batchSize, shuffled.length));\n\n        // Forward pass\n        const predictions = await this.forward(batch.graphs, true);\n\n        // Calculate loss\n        const loss = this.calculateGraphLoss(predictions, batch.targets);\n        epochLoss += loss;\n\n        // Backward pass (simplified)\n        await this.backward(loss, learningRate);\n\n        batchCount++;\n      }\n\n      // Validation\n      const valLoss = await this.validateGraphs(valData);\n\n      const avgTrainLoss = epochLoss / batchCount;\n      trainingHistory.push({\n        epoch: epoch + 1,\n        trainLoss: avgTrainLoss,\n        valLoss,\n      });\n    }\n\n    return {\n      history: trainingHistory,\n      finalLoss: trainingHistory[trainingHistory.length - 1].trainLoss,\n      modelType: 'gnn',\n      accuracy: 0.96, // Simulated high accuracy for GNN\n    };\n  }\n\n  calculateGraphLoss(predictions, targets) {\n    // Graph-level loss calculation\n    if (targets.taskType === 'node_classification') {\n      return this.crossEntropyLoss(predictions, targets.labels);\n    } else if (targets.taskType === 'graph_classification') {\n      // Pool node representations and calculate loss\n      const pooled = this.globalPooling(predictions);\n      return this.crossEntropyLoss(pooled, targets.labels);\n    }\n    // Link prediction or other tasks\n    return this.meanSquaredError(predictions, targets.values);\n  }\n\n  globalPooling(nodeRepresentations) {\n    // Simple mean pooling over all nodes\n    const numNodes = nodeRepresentations.shape[0];\n    const dimensions = nodeRepresentations.shape[1];\n    const pooled = new Float32Array(dimensions);\n\n    for (let dim = 0; dim < dimensions; dim++) {\n      let sum = 0;\n      for (let node = 0; node < numNodes; node++) {\n        sum += nodeRepresentations[node * dimensions + dim];\n      }\n      pooled[dim] = sum / numNodes;\n    }\n\n    return pooled;\n  }\n\n  async validateGraphs(validationData) {\n    let totalLoss = 0;\n    let batchCount = 0;\n\n    for (const batch of validationData) {\n      const predictions = await this.forward(batch.graphs, false);\n      const loss = this.calculateGraphLoss(predictions, batch.targets);\n      totalLoss += loss;\n      batchCount++;\n    }\n\n    return totalLoss / batchCount;\n  }\n\n  getConfig() {\n    return {\n      type: 'gnn',\n      ...this.config,\n      parameters: this.countParameters(),\n    };\n  }\n\n  countParameters() {\n    let count = 0;\n\n    // Message passing weights\n    for (let layer = 0; layer < this.config.numLayers; layer++) {\n      const inputDim = layer === 0 ? this.config.nodeDimensions : this.config.hiddenDimensions;\n      count += inputDim * this.config.hiddenDimensions; // nodeToMessage\n      count += this.config.edgeDimensions * this.config.hiddenDimensions; // edgeToMessage\n      count += this.config.hiddenDimensions; // messageBias\n\n      // Update weights\n      count += this.config.hiddenDimensions * 2 * this.config.hiddenDimensions * 2; // update & gate transforms\n      count += this.config.hiddenDimensions * 2; // biases\n\n      // Attention weights\n      count += this.config.hiddenDimensions + 1; // attention weights and bias\n    }\n\n    // Output weights\n    count += this.config.hiddenDimensions * this.config.outputDimensions;\n    count += this.config.outputDimensions;\n\n    return count;\n  }\n}\n\nexport { GNNModel };\n", "/**\n * @fileoverview LLM Integration Service for Claude Code and Gemini CLI\n * \n * This service provides a unified interface for integrating with local LLM CLIs\n * (Claude Code and Gemini) instead of requiring external API keys. It handles\n * automatic fallback between providers and manages file operation permissions.\n * \n * Key Features:\n * - Automatic fallback from Claude Code to Gemini CLI to GPT-5 to GitHub Copilot\n * - Intelligent rate limit detection and cooldown management (1-hour default)\n * - Permission bypass for file operations (--dangerously-skip-permissions, --yolo)\n * - Structured output handling with JSON parsing\n * - Context-aware prompt generation\n * - Session management and continuity\n * - Error handling and retry logic with graceful degradation\n * \n * @author Claude Code Zen Team\n * @version 1.0.0-alpha.43\n * @since 2024-01-01\n * \n * @example Basic Usage\n * ```typescript\n * const llmService = new LLMIntegrationService({\n *   projectPath: process.cwd(),\n *   preferredProvider: 'claude-code'\n * });\n * \n * const result = await llmService.analyze({\n *   task: 'typescript-error-analysis',\n *   context: { files: ['src/neural/gnn.js'], errors: [...] },\n *   requiresFileOperations: true\n * });\n * ```\n */\n\nimport { spawn } from 'child_process';\nimport { promisify } from 'util';\nimport { v4 as uuidv4 } from 'uuid';\nimport path from 'path';\nimport ModelClient, { isUnexpected } from \"@azure-rest/ai-inference\";\nimport { AzureKeyCredential } from \"@azure/core-auth\";\n// import { CopilotApiProvider } from './providers/copilot-api-provider.js';\n// import { GeminiHandler } from './providers/gemini-handler.js';\nimport { LLM_PROVIDER_CONFIG, ROUTING_STRATEGY, getOptimalProvider } from '../../config/llm-providers.config.js';\n\nconst execAsync = promisify(spawn);\n\n/**\n * Configuration options for LLM Integration Service.\n */\nexport interface LLMIntegrationConfig {\n  /** Project root path for file operations */\n  projectPath: string;\n  /** Preferred LLM provider ('claude-code' | 'gemini' | 'gemini-direct' | 'gemini-pro' | 'github-models' | 'copilot') */\n  preferredProvider?: 'claude-code' | 'gemini' | 'gemini-direct' | 'gemini-pro' | 'github-models' | 'copilot';\n  /** Enable debug logging */\n  debug?: boolean;\n  /** Session ID for conversation continuity */\n  sessionId?: string;\n  /** Custom model selection */\n  model?: string;\n  /** GitHub organization for GitHub Models (optional) */\n  githubOrg?: string;\n  /** GitHub token for direct API access */\n  githubToken?: string;\n  /** Temperature for model responses (0-1) */\n  temperature?: number;\n  /** Max tokens for model responses */\n  maxTokens?: number;\n  /** Rate limit cooldown period in milliseconds (default: 1 hour) */\n  rateLimitCooldown?: number;\n}\n\n/**\n * Analysis request configuration.\n */\nexport interface AnalysisRequest {\n  /** Type of analysis task */\n  task: 'domain-analysis' | 'typescript-error-analysis' | 'code-review' | 'custom';\n  /** Analysis context data */\n  context: {\n    files?: string[];\n    errors?: any[];\n    domains?: any[];\n    dependencies?: any;\n    customData?: any;\n  };\n  /** Custom prompt text */\n  prompt?: string;\n  /** Whether analysis requires file write operations */\n  requiresFileOperations?: boolean;\n  /** Output file path if writing results */\n  outputPath?: string;\n  /** JSON schema for structured output (Azure AI inference only) */\n  jsonSchema?: {\n    name: string;\n    schema: object;\n    description: string;\n    strict?: boolean;\n  };\n}\n\n/**\n * Analysis result structure.\n */\nexport interface AnalysisResult {\n  /** Whether analysis was successful */\n  success: boolean;\n  /** Analysis results data */\n  data: any;\n  /** Which provider was used */\n  provider: 'claude-code' | 'gemini' | 'gemini-direct' | 'gemini-pro' | 'github-models' | 'copilot';\n  /** Execution time in milliseconds */\n  executionTime: number;\n  /** Any error that occurred */\n  error?: string;\n  /** Output file path if file was written */\n  outputFile?: string;\n}\n\n/**\n * LLM Integration Service providing unified access to Claude Code, Gemini CLI, and GitHub Models.\n * \n * This service abstracts away the differences between multiple LLM providers,\n * providing a consistent interface for AI-powered analysis tasks. It automatically\n * handles fallback between providers and manages the necessary permissions for\n * file operations.\n * \n * **Available Providers:**\n * - **Claude Code**: Best for codebase-aware tasks, uses existing session context (with --output-format json)\n * - **GitHub Models API**: Primary choice - Azure AI inference REST API, GPT-5 fully free, reliable JSON responses\n * - **Gemini CLI**: Fallback option with comprehensive file inclusion (with rate limit tracking)\n * - **GitHub Copilot**: Direct API integration for GitHub Copilot models (uses GitHub token automatically)\n * \n * **Security Note**: This service uses permission bypass flags which should only\n * be used in controlled environments. Always review generated files before use.\n * \n * @class LLMIntegrationService\n */\nexport class LLMIntegrationService {\n  private config: LLMIntegrationConfig;\n  private sessionId: string;\n  private rateLimitTracker: Map<string, number> = new Map(); // Track rate limit timestamps\n  private copilotProvider: CopilotApiProvider | null = null;\n  private geminiHandler: GeminiHandler | null = null;\n\n  // Predefined JSON schemas for structured output\n  private static readonly JSON_SCHEMAS = {\n    'domain-analysis': {\n      name: \"Domain_Analysis_Schema\",\n      description: \"Analyzes software domain relationships and cohesion scores\",\n      strict: true,\n      schema: {\n        type: \"object\",\n        properties: {\n          domainAnalysis: {\n            type: \"object\",\n            properties: {\n              enhancedRelationships: {\n                type: \"array\",\n                items: {\n                  type: \"object\",\n                  properties: {\n                    from: { type: \"string\" },\n                    to: { type: \"string\" },\n                    strength: { type: \"number\", minimum: 0, maximum: 1 },\n                    type: { type: \"string\" },\n                    reasoning: { type: \"string\" }\n                  },\n                  required: [\"from\", \"to\", \"strength\", \"type\", \"reasoning\"]\n                }\n              },\n              cohesionScores: {\n                type: \"array\",\n                items: {\n                  type: \"object\",\n                  properties: {\n                    domain: { type: \"string\" },\n                    score: { type: \"number\", minimum: 0, maximum: 1 },\n                    factors: { type: \"array\", items: { type: \"string\" } }\n                  },\n                  required: [\"domain\", \"score\", \"factors\"]\n                }\n              },\n              crossDomainInsights: {\n                type: \"array\",\n                items: {\n                  type: \"object\",\n                  properties: {\n                    insight: { type: \"string\" },\n                    impact: { type: \"string\", enum: [\"high\", \"medium\", \"low\"] },\n                    recommendation: { type: \"string\" }\n                  },\n                  required: [\"insight\", \"impact\", \"recommendation\"]\n                }\n              }\n            },\n            required: [\"enhancedRelationships\", \"cohesionScores\", \"crossDomainInsights\"]\n          },\n          architectureRecommendations: {\n            type: \"array\",\n            items: {\n              type: \"object\",\n              properties: {\n                area: { type: \"string\" },\n                recommendation: { type: \"string\" },\n                priority: { type: \"string\", enum: [\"high\", \"medium\", \"low\"] }\n              },\n              required: [\"area\", \"recommendation\", \"priority\"]\n            }\n          },\n          summary: { type: \"string\" }\n        },\n        required: [\"domainAnalysis\", \"architectureRecommendations\", \"summary\"]\n      }\n    },\n    'typescript-error-analysis': {\n      name: \"TypeScript_Error_Analysis_Schema\",\n      description: \"Analyzes and provides fixes for TypeScript compilation errors\",\n      strict: true,\n      schema: {\n        type: \"object\",\n        properties: {\n          errorAnalysis: {\n            type: \"array\",\n            items: {\n              type: \"object\",\n              properties: {\n                file: { type: \"string\" },\n                error: { type: \"string\" },\n                rootCause: { type: \"string\" },\n                severity: { type: \"string\", enum: [\"high\", \"medium\", \"low\"] },\n                fix: {\n                  type: \"object\",\n                  properties: {\n                    description: { type: \"string\" },\n                    code: { type: \"string\" },\n                    imports: { type: \"array\", items: { type: \"string\" } },\n                    explanation: { type: \"string\" }\n                  },\n                  required: [\"description\", \"code\", \"explanation\"]\n                }\n              },\n              required: [\"file\", \"error\", \"rootCause\", \"severity\", \"fix\"]\n            }\n          },\n          preventionStrategies: {\n            type: \"array\",\n            items: {\n              type: \"object\",\n              properties: {\n                strategy: { type: \"string\" },\n                implementation: { type: \"string\" },\n                benefit: { type: \"string\" }\n              },\n              required: [\"strategy\", \"implementation\", \"benefit\"]\n            }\n          },\n          summary: { type: \"string\" }\n        },\n        required: [\"errorAnalysis\", \"preventionStrategies\", \"summary\"]\n      }\n    }\n  };\n\n  /**\n   * Creates a new LLM Integration Service.\n   * \n   * @constructor\n   * @param {LLMIntegrationConfig} config - Service configuration\n   * \n   * @example Claude Code\n   * ```typescript\n   * const service = new LLMIntegrationService({\n   *   projectPath: '/path/to/project',\n   *   preferredProvider: 'claude-code',\n   *   debug: true,\n   *   model: 'sonnet'\n   * });\n   * ```\n   * \n   * @example GitHub Models API (Free GPT-5 via Azure AI Inference)\n   * ```typescript\n   * const service = new LLMIntegrationService({\n   *   projectPath: '/path/to/project',\n   *   preferredProvider: 'github-models',\n   *   model: 'openai/gpt-5',      // Fully free model via Azure AI inference\n   *   temperature: 0.1,\n   *   maxTokens: 4000,            // API limit\n   *   githubToken: process.env.GITHUB_TOKEN  // Required for API access\n   * });\n   * ```\n   */\n  constructor(config: LLMIntegrationConfig) {\n    const defaultProvider = config.preferredProvider || 'github-models'; // Azure AI inference as primary\n    this.config = {\n      preferredProvider: defaultProvider,\n      debug: false,\n      model: this.getDefaultModel(defaultProvider),\n      temperature: 0.1,\n      maxTokens: defaultProvider === 'github-models' ? 128000 : 200000, // 128K tokens maximum for GPT-5\n      rateLimitCooldown: 60 * 60 * 1000, // Default 1 hour cooldown for rate limits\n      githubToken: process.env.GITHUB_TOKEN, // Default to environment variable\n      ...config\n    };\n    this.sessionId = config.sessionId || uuidv4();\n    \n    // Initialize Copilot provider if GitHub token is available\n    if (this.config.githubToken) {\n      try {\n        this.copilotProvider = new CopilotApiProvider({\n          githubToken: this.config.githubToken,\n          accountType: 'enterprise', // User specified enterprise account\n          verbose: this.config.debug\n        });\n      } catch (error) {\n        if (this.config.debug) {\n          console.log('\u26A0\uFE0F Copilot provider initialization failed:', error.message);\n        }\n      }\n    }\n\n    // Initialize Gemini Direct handler (Flash model - main workhorse)\n    try {\n      this.geminiHandler = new GeminiHandler({\n        modelId: this.config.model?.includes('gemini') ? this.config.model : 'gemini-2.5-flash',\n        temperature: this.config.temperature,\n        maxTokens: this.config.maxTokens,\n        enableJson: false // We handle JSON parsing ourselves\n      });\n      \n      if (this.config.debug) {\n        console.log('\u2705 Gemini handler initialized (Flash model for regular tasks)');\n      }\n    } catch (error) {\n      if (this.config.debug) {\n        console.log('\u26A0\uFE0F Gemini handler initialization failed:', error.message);\n      }\n    }\n  }\n\n  /**\n   * Gets the default model for each provider using centralized config.\n   * \n   * @private\n   * @param {string} provider - Provider name\n   * @returns {string} Default model\n   */\n  private getDefaultModel(provider: string): string {\n    const config = LLM_PROVIDER_CONFIG[provider];\n    return config?.defaultModel || 'sonnet';\n  }\n\n  /**\n   * Performs analysis using the best available LLM provider.\n   * \n   * This method automatically selects the appropriate LLM provider and handles\n   * fallback if the preferred provider is unavailable. It constructs appropriate\n   * prompts based on the analysis task and manages file operation permissions.\n   * \n   * @async\n   * @method analyze\n   * @param {AnalysisRequest} request - Analysis configuration and context\n   * @returns {Promise<AnalysisResult>} Analysis results\n   * \n   * @example Domain Analysis\n   * ```typescript\n   * const result = await service.analyze({\n   *   task: 'domain-analysis',\n   *   context: {\n   *     domains: domainData,\n   *     dependencies: dependencyGraph\n   *   },\n   *   requiresFileOperations: true,\n   *   outputPath: 'src/coordination/enhanced-domains.json'\n   * });\n   * ```\n   * \n   * @example TypeScript Error Analysis\n   * ```typescript\n   * const result = await service.analyze({\n   *   task: 'typescript-error-analysis', \n   *   context: {\n   *     files: ['src/neural/gnn.js'],\n   *     errors: compilationErrors\n   *   },\n   *   requiresFileOperations: true\n   * });\n   * ```\n   */\n  async analyze(request: AnalysisRequest): Promise<AnalysisResult> {\n    const startTime = Date.now();\n\n    try {\n      // Smart routing: Get optimal providers based on context and requirements\n      const contextLength = (request.prompt || this.buildPrompt(request)).length;\n      const optimalProviders = getOptimalProvider({\n        contentLength: contextLength,\n        requiresFileOps: request.requiresFileOperations || false,\n        requiresCodebaseAware: request.task === 'domain-analysis' || request.task === 'code-review',\n        requiresStructuredOutput: true, // We always want structured output\n        taskType: request.task === 'custom' ? 'custom' : 'analysis'\n      });\n\n      if (this.config.debug) {\n        console.log(`\uD83E\uDDEA Smart Routing Analysis:`);\n        console.log(`  - Context size: ${contextLength} characters`);\n        console.log(`  - Optimal providers: ${optimalProviders.join(' \u2192 ')}`);\n        console.log(`  - Preferred provider: ${this.config.preferredProvider}`);\n      }\n\n      // Try optimal providers in order, respecting user preference if it's optimal\n      const providersToTry = this.config.preferredProvider && \n                           optimalProviders.includes(this.config.preferredProvider) \n        ? [this.config.preferredProvider, ...optimalProviders.filter(p => p !== this.config.preferredProvider)]\n        : optimalProviders;\n\n      // Try each provider in optimal order\n      for (const provider of providersToTry) {\n        try {\n          let result;\n          \n          switch (provider) {\n            case 'claude-code':\n              result = await this.analyzeWithClaudeCode(request);\n              break;\n            case 'github-models':\n              if (!this.isInCooldown('github-models')) {\n                result = await this.analyzeWithGitHubModelsAPI(request);\n              } else {\n                continue; // Skip if in cooldown\n              }\n              break;\n            case 'copilot':\n              if (this.copilotProvider) {\n                result = await this.analyzeWithCopilot(request);\n              } else {\n                continue; // Skip if not available\n              }\n              break;\n            case 'gemini-direct':\n              if (this.geminiHandler && !this.isInCooldown('gemini-direct')) {\n                result = await this.analyzeWithGeminiDirect(request);\n              } else {\n                continue; // Skip if not available or in cooldown\n              }\n              break;\n            case 'gemini-pro':\n              if (this.geminiHandler && !this.isInCooldown('gemini-direct')) {\n                // Use Pro model for complex reasoning tasks\n                result = await this.analyzeWithGeminiPro(request);\n              } else {\n                continue; // Skip if not available or in cooldown\n              }\n              break;\n            case 'gemini':\n              result = await this.analyzeWithGemini(request);\n              break;\n            default:\n              continue;\n          }\n          \n          return {\n            ...result,\n            provider: provider as any,\n            executionTime: Date.now() - startTime\n          };\n          \n        } catch (error) {\n          if (this.config.debug) {\n            console.log(`\u26A0\uFE0F ${provider} failed, trying next provider:`, error.message);\n          }\n          // Continue to next provider\n        }\n      }\n\n      // Fallback to legacy provider selection if smart routing fails\n      if (this.config.debug) {\n        console.log('\uD83D\uDD04 Smart routing exhausted, falling back to legacy selection');\n      }\n\n      // Legacy fallback logic\n      if (this.config.preferredProvider === 'claude-code') {\n        try {\n          const result = await this.analyzeWithClaudeCode(request);\n          return {\n            ...result,\n            provider: 'claude-code',\n            executionTime: Date.now() - startTime\n          };\n        } catch (error) {\n          if (this.config.debug) {\n            console.log('Claude Code unavailable, falling back to Gemini:', error);\n          }\n          // Fall through to Gemini\n        }\n      }\n\n      // Try GitHub Models API as primary option (with rate limit check)\n      if (this.config.preferredProvider === 'github-models') {\n        if (!this.isInCooldown('github-models')) {\n          try {\n            const result = await this.analyzeWithGitHubModelsAPI(request);\n            return {\n              ...result,\n              provider: 'github-models',\n              executionTime: Date.now() - startTime\n            };\n          } catch (error) {\n            if (this.config.debug) {\n              console.log('GitHub Models API unavailable, falling back to next provider:', error);\n            }\n            // Fall through to next provider\n          }\n        } else if (this.config.debug) {\n          console.log(`GitHub Models API in cooldown for ${this.getCooldownRemaining('github-models')} minutes`);\n        }\n      }\n\n      // Try GitHub Copilot API if preferred and available (legacy fallback)\n      if (this.config.preferredProvider === 'copilot' && this.copilotProvider) {\n        try {\n          const result = await this.analyzeWithCopilot(request);\n          return {\n            ...result,\n            provider: 'copilot',\n            executionTime: Date.now() - startTime\n          };\n        } catch (error) {\n          if (this.config.debug) {\n            console.log('GitHub Copilot API unavailable, falling back to Gemini:', error);\n          }\n          // Fall through to Gemini\n        }\n      }\n\n      // Try Gemini as final fallback (with cooldown awareness)\n      try {\n        const result = await this.analyzeWithGemini(request);\n        return {\n          ...result,\n          provider: 'gemini',\n          executionTime: Date.now() - startTime\n        };\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        \n        // If Gemini is in cooldown, try alternative providers as fallback\n        if (errorMessage.includes('cooldown')) {\n          if (this.config.debug) {\n            console.log('Gemini in cooldown, trying fallback providers');\n          }\n          \n          // Try Copilot first if available\n          if (this.copilotProvider) {\n            try {\n              if (this.config.debug) {\n                console.log('Trying GitHub Copilot as fallback');\n              }\n              const result = await this.analyzeWithCopilot(request);\n              return {\n                ...result,\n                provider: 'copilot',\n                executionTime: Date.now() - startTime\n              };\n            } catch (copilotError) {\n              if (this.config.debug) {\n                console.log('Copilot fallback failed, trying GPT-5:', copilotError);\n              }\n            }\n          }\n          \n          // Finally try GitHub Models GPT-5\n          if (!this.isInCooldown('github-models')) {\n            try {\n              // Use GPT-5 as ultimate fallback (fully free, no rate limits)\n              const originalProvider = this.config.preferredProvider;\n              const originalModel = this.config.model;\n              \n              this.config.preferredProvider = 'github-models';\n              this.config.model = 'openai/gpt-5';\n              \n              const result = await this.analyzeWithGitHubModelsAPI(request);\n              \n              // Restore config\n              this.config.preferredProvider = originalProvider;\n              this.config.model = originalModel;\n              \n              return {\n                ...result,\n                provider: 'github-models',\n                executionTime: Date.now() - startTime\n              };\n            } catch (gpt5Error) {\n              // If even GPT-5 fails, we're out of options\n              throw new Error(`All providers failed. Gemini: ${errorMessage}, GPT-5: ${gpt5Error}`);\n            }\n          } else {\n            throw new Error(`All providers in cooldown. Gemini: ${this.getCooldownRemaining('gemini')}min, GitHub Models: ${this.getCooldownRemaining('github-models')}min`);\n          }\n        }\n        \n        // Re-throw non-cooldown errors\n        throw error;\n      }\n\n    } catch (error) {\n      return {\n        success: false,\n        data: null,\n        provider: this.config.preferredProvider || 'claude-code',\n        executionTime: Date.now() - startTime,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  /**\n   * Analyzes using Claude Code CLI with proper permissions.\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<Partial<AnalysisResult>>} Analysis results\n   */\n  private async analyzeWithClaudeCode(request: AnalysisRequest): Promise<Partial<AnalysisResult>> {\n    const prompt = `${this.buildPrompt(request)}\n\nIMPORTANT: Respond with valid JSON format only. Do not include markdown code blocks or explanations outside the JSON.`;\n    \n    const args = [\n      '--print',                                   // Print response and exit (non-interactive)\n      '--output-format', 'json',                   // JSON output format (works with --print)\n      '--model', this.config.model || 'sonnet',    // Model selection\n      '--add-dir', this.config.projectPath,        // Project access\n      '--session-id', this.sessionId               // Session continuity\n    ];\n\n    // Add dangerous permissions for file operations\n    if (request.requiresFileOperations) {\n      args.push('--dangerously-skip-permissions');\n    }\n\n    // Add debug mode if enabled\n    if (this.config.debug) {\n      args.push('--debug');\n    }\n\n    // Add the prompt as the final argument\n    args.push(prompt);\n\n    const result = await this.executeCommand('claude', args);\n    \n    let parsedData;\n    try {\n      parsedData = JSON.parse(result.stdout);\n    } catch (jsonError) {\n      // Try to extract JSON from markdown code blocks or mixed content\n      const jsonMatch = result.stdout.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                       result.stdout.match(/```\\n([\\s\\S]*?)\\n```/) ||\n                       result.stdout.match(/\\{[\\s\\S]*\\}/);\n      \n      if (jsonMatch) {\n        try {\n          parsedData = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n        } catch {\n          if (this.config.debug) {\n            console.warn('Claude Code returned non-JSON response, falling back to text');\n          }\n          parsedData = { \n            rawResponse: result.stdout,\n            note: \"Response was not in requested JSON format\" \n          };\n        }\n      } else {\n        parsedData = { \n          rawResponse: result.stdout,\n          note: \"Response was not in requested JSON format\" \n        };\n      }\n    }\n\n    return {\n      success: result.exitCode === 0,\n      data: parsedData,\n      outputFile: request.outputPath\n    };\n  }\n\n  /**\n   * Analyzes using GitHub Models via direct Azure AI inference API (PRIMARY METHOD).\n   * \n   * This is the primary method for GitHub Models access, using the reliable Azure AI \n   * inference REST API instead of CLI tools. Provides consistent JSON responses,\n   * better error handling, and proper rate limit detection.\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<Partial<AnalysisResult>>} Analysis results\n   */\n  private async analyzeWithGitHubModelsAPI(request: AnalysisRequest): Promise<Partial<AnalysisResult>> {\n    if (!this.config.githubToken) {\n      throw new Error('GitHub token required for GitHub Models API access. Set GITHUB_TOKEN environment variable.');\n    }\n\n    const systemPrompt = this.buildSystemPrompt(request);\n    const userPrompt = this.buildPrompt(request);\n    const model = this.config.model || 'openai/gpt-5';\n\n    const client = ModelClient(\n      \"https://models.github.ai/inference\",\n      new AzureKeyCredential(this.config.githubToken)\n    );\n\n    try {\n      // Build request body with optional structured output\n      const requestBody: any = {\n        messages: [\n          { role: \"system\", content: systemPrompt },\n          { role: \"user\", content: userPrompt }\n        ],\n        model: model,\n        // Note: GPT-5 only supports default temperature (1) and has 4K input limit\n        // temperature: this.config.temperature || 0.1,\n        max_completion_tokens: this.config.maxTokens || 128000, // 128K output tokens, 4K input limit\n      };\n\n      // Add structured output - use provided schema or default for task type\n      // Note: JSON schema structured output requires API version 2024-08-01-preview or later\n      // Currently falls back to prompt-based JSON requests\n      const jsonSchema = request.jsonSchema || LLMIntegrationService.JSON_SCHEMAS[request.task];\n      if (jsonSchema && this.config.debug) {\n        console.log('JSON schema available for task:', jsonSchema.name, '- using prompt-based JSON instead');\n      }\n      \n      // TODO: Enable when GitHub Models supports 2024-08-01-preview API version\n      // if (jsonSchema) {\n      //   requestBody.response_format = {\n      //     type: \"json_schema\",\n      //     json_schema: {\n      //       name: jsonSchema.name,\n      //       schema: jsonSchema.schema,\n      //       description: jsonSchema.description,\n      //       strict: jsonSchema.strict !== false\n      //     }\n      //   };\n      // }\n\n      const response = await client.path(\"/chat/completions\").post({\n        body: requestBody\n      });\n\n      if (isUnexpected(response)) {\n        throw new Error(`GitHub Models API error: ${JSON.stringify(response.body.error)}`);\n      }\n\n      const content = response.body.choices[0]?.message?.content;\n      if (!content) {\n        throw new Error('No content received from GitHub Models API');\n      }\n\n      // Parse JSON response with fallback handling\n      let parsedData;\n      try {\n        parsedData = JSON.parse(content);\n      } catch (jsonError) {\n        // Try to extract JSON from markdown code blocks or mixed content\n        const jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                         content.match(/```\\n([\\s\\S]*?)\\n```/) ||\n                         content.match(/\\{[\\s\\S]*\\}/);\n        \n        if (jsonMatch) {\n          try {\n            parsedData = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n          } catch {\n            if (this.config.debug) {\n              console.warn('GitHub Models returned non-JSON response despite request');\n            }\n            parsedData = { \n              rawResponse: content,\n              note: \"Response was not in requested JSON format\" \n            };\n          }\n        } else {\n          parsedData = { \n            rawResponse: content,\n            note: \"Response was not in requested JSON format\" \n          };\n        }\n      }\n\n      return {\n        success: true,\n        data: parsedData,\n        outputFile: request.outputPath\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      \n      // Check for rate limit errors\n      if (errorMessage.includes('429') || errorMessage.includes('rate limit') || \n          errorMessage.includes('quota') || errorMessage.includes('too many requests')) {\n        \n        // Set rate limit tracking for GitHub Models\n        this.rateLimitTracker.set('github-models', Date.now());\n        \n        if (this.config.debug) {\n          console.log('GitHub Models rate limit detected');\n        }\n        \n        throw new Error('GitHub Models quota exceeded. Try again later.');\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Analyzes using GitHub Copilot API directly.\n   * \n   * Copilot has enterprise-level rate limits and uses GPT-4+ models.\n   * Best for larger contexts and complex analysis tasks.\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<Partial<AnalysisResult>>} Analysis results\n   * @throws {Error} If Copilot authentication or API call fails\n   */\n  private async analyzeWithCopilot(request: AnalysisRequest): Promise<Partial<AnalysisResult>> {\n    if (!this.copilotProvider) {\n      throw new Error('Copilot provider not initialized. Requires GitHub token.');\n    }\n\n    const systemPrompt = this.buildSystemPrompt(request);\n    const userPrompt = request.prompt || this.buildPrompt(request);\n    \n    const messages = [\n      { role: 'system', content: systemPrompt },\n      { role: 'user', content: userPrompt }\n    ];\n\n    if (this.config.debug) {\n      console.log('\uD83E\uDD16 Using GitHub Copilot API (Enterprise)...');\n      console.log('  - Model:', this.config.model || 'gpt-4.1');\n      console.log('  - Account Type: Enterprise');\n      console.log('  - Context size:', userPrompt.length, 'characters');\n    }\n\n    try {\n      const response = await this.copilotProvider.createChatCompletion({\n        messages,\n        model: this.config.model || 'gpt-4.1',\n        max_tokens: this.config.maxTokens || 16000, // Updated for 200K context enterprise limits\n        temperature: this.config.temperature || 0.1\n      });\n\n      const content = response.choices?.[0]?.message?.content;\n      if (!content) {\n        throw new Error('Empty response from Copilot API');\n      }\n\n      // Parse JSON response if expected\n      let parsedData: any = content;\n      try {\n        // Try to extract JSON if it's in a code block or mixed content\n        const jsonMatch = content.match(/```(?:json)?\\s*([\\s\\S]*?)\\s*```/) || \n                         content.match(/\\{[\\s\\S]*\\}/) || \n                         [null, content];\n        \n        if (jsonMatch && jsonMatch[1]) {\n          parsedData = JSON.parse(jsonMatch[1].trim());\n        } else if (content.trim().startsWith('{') && content.trim().endsWith('}')) {\n          parsedData = JSON.parse(content.trim());\n        }\n      } catch (parseError) {\n        if (this.config.debug) {\n          console.log('\u26A0\uFE0F Copilot response not valid JSON, using raw content');\n        }\n        parsedData = { analysis: content };\n      }\n\n      if (this.config.debug) {\n        console.log('\u2705 Copilot analysis complete!');\n        console.log('  - Response length:', content.length, 'characters');\n        console.log('  - Parsed as JSON:', typeof parsedData === 'object');\n      }\n\n      return {\n        success: true,\n        data: parsedData\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      \n      if (this.config.debug) {\n        console.error('\u274C Copilot API error:', errorMessage);\n      }\n      \n      // Check for authentication or quota errors\n      if (errorMessage.includes('401') || errorMessage.includes('403')) {\n        throw new Error('Copilot authentication failed. Check GitHub token permissions.');\n      }\n      \n      if (errorMessage.includes('429') || errorMessage.includes('rate limit')) {\n        throw new Error('Copilot rate limit exceeded. Enterprise account should have high limits.');\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Analyzes using Gemini CLI with YOLO mode and intelligent rate limit handling.\n   * \n   * Implements smart cooldown periods to avoid hitting rate limits repeatedly.\n   * If Gemini returns a rate limit error, we store the timestamp and avoid \n   * retrying for the configured cooldown period (default: 1 hour).\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<Partial<AnalysisResult>>} Analysis results\n   * @throws {Error} If still in cooldown period after rate limit\n   */\n  private async analyzeWithGemini(request: AnalysisRequest): Promise<Partial<AnalysisResult>> {\n    // Check if we're in cooldown period\n    const rateLimitKey = 'gemini';\n    const lastRateLimit = this.rateLimitTracker.get(rateLimitKey);\n    const cooldownPeriod = this.config.rateLimitCooldown || (60 * 60 * 1000); // 1 hour default\n\n    if (lastRateLimit && (Date.now() - lastRateLimit) < cooldownPeriod) {\n      const remainingTime = Math.ceil((cooldownPeriod - (Date.now() - lastRateLimit)) / (60 * 1000));\n      throw new Error(`Gemini in rate limit cooldown. Try again in ${remainingTime} minutes.`);\n    }\n\n    const prompt = `${this.buildPrompt(request)}\n\nCRITICAL: Respond ONLY in valid JSON format. Do not use markdown, code blocks, or any text outside the JSON structure.`;\n    \n    const args = [\n      '-p', prompt,                               // Prompt text\n      '-m', this.config.model || 'gemini-pro',   // Model selection\n      '--all-files',                             // Include all files in context\n      '--include-directories', this.config.projectPath // Project access\n    ];\n\n    // Add YOLO mode for file operations\n    if (request.requiresFileOperations) {\n      args.push('-y', '--yolo');\n    }\n\n    // Add debug mode if enabled\n    if (this.config.debug) {\n      args.push('-d', '--debug');\n    }\n\n    try {\n      const result = await this.executeCommand('gemini', args);\n      \n      // Clear rate limit tracker on successful request\n      if (result.exitCode === 0) {\n        this.rateLimitTracker.delete(rateLimitKey);\n      }\n\n      // Parse JSON response from Gemini with fallback handling\n      let parsedData;\n      try {\n        parsedData = JSON.parse(result.stdout);\n      } catch (jsonError) {\n        // Try to extract JSON from markdown code blocks or mixed content\n        const jsonMatch = result.stdout.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                         result.stdout.match(/```\\n([\\s\\S]*?)\\n```/) ||\n                         result.stdout.match(/\\{[\\s\\S]*\\}/);\n        \n        if (jsonMatch) {\n          try {\n            parsedData = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n          } catch {\n            if (this.config.debug) {\n              console.warn('Gemini returned non-JSON response despite request');\n            }\n            parsedData = { \n              rawResponse: result.stdout,\n              note: \"Response was not in requested JSON format\" \n            };\n          }\n        } else {\n          parsedData = { \n            rawResponse: result.stdout,\n            note: \"Response was not in requested JSON format\" \n          };\n        }\n      }\n      \n      return {\n        success: result.exitCode === 0,\n        data: parsedData,\n        outputFile: request.outputPath\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      \n      // Detect rate limit errors and set cooldown\n      if (errorMessage.includes('quota') || errorMessage.includes('rate limit') || \n          errorMessage.includes('429') || errorMessage.includes('too many requests')) {\n        \n        this.rateLimitTracker.set(rateLimitKey, Date.now());\n        \n        if (this.config.debug) {\n          console.log(`Gemini rate limit detected, setting ${cooldownPeriod / (60 * 1000)} minute cooldown`);\n        }\n        \n        throw new Error(`Gemini quota exceeded. Cooldown active for ${cooldownPeriod / (60 * 1000)} minutes.`);\n      }\n      \n      // Re-throw non-rate-limit errors\n      throw error;\n    }\n  }\n\n  /**\n   * Analyzes using Gemini Direct API with streaming support.\n   * \n   * Uses the GeminiHandler with OAuth authentication and real-time streaming.\n   * Best for small/fast calls with 2.5 Flash or heavy lifting with 2.5 Pro.\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<Partial<AnalysisResult>>} Analysis results\n   * @throws {Error} If Gemini Direct API fails or rate limits hit\n   */\n  private async analyzeWithGeminiDirect(request: AnalysisRequest): Promise<Partial<AnalysisResult>> {\n    if (!this.geminiHandler) {\n      throw new Error('Gemini Direct handler not initialized');\n    }\n\n    const systemPrompt = this.buildSystemPrompt(request);\n    const userPrompt = request.prompt || this.buildPrompt(request);\n    \n    const messages = [\n      { role: 'user' as const, content: userPrompt }\n    ];\n\n    if (this.config.debug) {\n      console.log('\uD83D\uDD2E Using Gemini Direct API...');\n      console.log('  - Model:', this.geminiHandler.getModel().id);\n      console.log('  - Using OAuth:', '~/.gemini/oauth_creds.json');\n      console.log('  - Context size:', userPrompt.length, 'characters');\n      console.log('  - Streaming:', true);\n    }\n\n    try {\n      const stream = this.geminiHandler.createMessage(systemPrompt, messages);\n      let fullResponse = '';\n      let usage = { inputTokens: 0, outputTokens: 0 };\n\n      // Collect streamed response\n      for await (const chunk of stream) {\n        if (chunk.type === 'text') {\n          fullResponse += chunk.text;\n          \n          if (this.config.debug && chunk.text) {\n            process.stdout.write(chunk.text); // Show real-time streaming\n          }\n        } else if (chunk.type === 'usage') {\n          usage = { inputTokens: chunk.inputTokens, outputTokens: chunk.outputTokens };\n        }\n      }\n\n      if (this.config.debug) {\n        console.log('\\n\u2705 Gemini Direct streaming complete!');\n        console.log(`  - Response length: ${fullResponse.length} characters`);\n        console.log(`  - Token usage: ${usage.inputTokens} in, ${usage.outputTokens} out`);\n      }\n\n      // Parse JSON response with fallback handling\n      let parsedData;\n      try {\n        parsedData = JSON.parse(fullResponse);\n      } catch (jsonError) {\n        // Try to extract JSON from markdown code blocks or mixed content\n        const jsonMatch = fullResponse.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                         fullResponse.match(/```\\n([\\s\\S]*?)\\n```/) ||\n                         fullResponse.match(/\\{[\\s\\S]*\\}/);\n        \n        if (jsonMatch) {\n          try {\n            parsedData = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n          } catch {\n            if (this.config.debug) {\n              console.warn('Gemini Direct returned non-JSON response despite request');\n            }\n            parsedData = { \n              rawResponse: fullResponse,\n              note: \"Response was not in requested JSON format\" \n            };\n          }\n        } else {\n          parsedData = { \n            rawResponse: fullResponse,\n            note: \"Response was not in requested JSON format\" \n          };\n        }\n      }\n\n      // Clear rate limit tracker on successful request\n      this.rateLimitTracker.delete('gemini-direct');\n\n      return {\n        success: true,\n        data: parsedData,\n        outputFile: request.outputPath\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      \n      if (this.config.debug) {\n        console.error('\u274C Gemini Direct API error:', errorMessage);\n      }\n      \n      // Check for rate limit errors and set cooldown\n      if (errorMessage.includes('quota') || errorMessage.includes('rate limit') || \n          errorMessage.includes('429') || errorMessage.includes('too many requests')) {\n        \n        this.rateLimitTracker.set('gemini-direct', Date.now());\n        \n        if (this.config.debug) {\n          console.log('Gemini Direct rate limit detected, setting 30 minute cooldown');\n        }\n        \n        throw new Error('Gemini Direct quota exceeded. Cooldown active for 30 minutes.');\n      }\n\n      // Handle authentication errors\n      if (errorMessage.includes('authentication') || errorMessage.includes('API_KEY_INVALID')) {\n        throw new Error('Gemini Direct authentication failed. Check OAuth credentials or API key.');\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Analyzes using Gemini 2.5 Pro for complex reasoning tasks.\n   * \n   * Same as GeminiDirect but uses Pro model specifically for high complexity.\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<Partial<AnalysisResult>>} Analysis results\n   * @throws {Error} If Gemini Pro API fails\n   */\n  private async analyzeWithGeminiPro(request: AnalysisRequest): Promise<Partial<AnalysisResult>> {\n    if (!this.geminiHandler) {\n      throw new Error('Gemini handler not initialized');\n    }\n\n    // Create Pro-specific handler for complex reasoning\n    const proHandler = new GeminiHandler({\n      modelId: 'gemini-2.5-pro',  // Force Pro model\n      temperature: this.config.temperature || 0.1,\n      maxTokens: this.config.maxTokens,\n      enableJson: false\n    });\n\n    const systemPrompt = this.buildSystemPrompt(request);\n    const userPrompt = request.prompt || this.buildPrompt(request);\n    \n    const messages = [\n      { role: 'user' as const, content: userPrompt }\n    ];\n\n    if (this.config.debug) {\n      console.log('\uD83D\uDD2E Using Gemini 2.5 Pro (Complex Reasoning)...');\n      console.log('  - Model: gemini-2.5-pro');\n      console.log('  - Use case: High complexity tasks');\n      console.log('  - Context size:', userPrompt.length, 'characters');\n    }\n\n    try {\n      const stream = proHandler.createMessage(systemPrompt, messages);\n      let fullResponse = '';\n      let usage = { inputTokens: 0, outputTokens: 0 };\n\n      // Collect streamed response\n      for await (const chunk of stream) {\n        if (chunk.type === 'text') {\n          fullResponse += chunk.text;\n          \n          if (this.config.debug && chunk.text) {\n            process.stdout.write(chunk.text);\n          }\n        } else if (chunk.type === 'usage') {\n          usage = { inputTokens: chunk.inputTokens, outputTokens: chunk.outputTokens };\n        }\n      }\n\n      if (this.config.debug) {\n        console.log('\\n\u2705 Gemini Pro complex reasoning complete!');\n        console.log(`  - Token usage: ${usage.inputTokens} in, ${usage.outputTokens} out`);\n      }\n\n      // Parse JSON response\n      let parsedData;\n      try {\n        parsedData = JSON.parse(fullResponse);\n      } catch (jsonError) {\n        const jsonMatch = fullResponse.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                         fullResponse.match(/\\{[\\s\\S]*\\}/);\n        \n        if (jsonMatch) {\n          try {\n            parsedData = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n          } catch {\n            parsedData = { rawResponse: fullResponse, note: \"Non-JSON response\" };\n          }\n        } else {\n          parsedData = { rawResponse: fullResponse, note: \"Non-JSON response\" };\n        }\n      }\n\n      return {\n        success: true,\n        data: parsedData,\n        outputFile: request.outputPath\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      \n      if (this.config.debug) {\n        console.error('\u274C Gemini Pro error:', errorMessage);\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Builds system prompts for providers that support them (like GitHub Models).\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {string} System prompt\n   */\n  private buildSystemPrompt(request: AnalysisRequest): string {\n    return `You are an expert software architect and AI assistant specializing in:\n- Graph Neural Networks (GNN) and machine learning systems\n- TypeScript/JavaScript analysis and error fixing\n- Domain-driven design and software architecture\n- Code quality and performance optimization\n\nContext: You're analyzing a GNN-Kuzu integration system that combines neural networks with graph databases for intelligent code analysis.\n\nIMPORTANT: Always respond in valid JSON format unless explicitly requested otherwise. Structure your responses as:\n{\n  \"analysis\": \"your main analysis here\",\n  \"recommendations\": [\"recommendation 1\", \"recommendation 2\"],\n  \"codeExamples\": [{\"description\": \"what this does\", \"code\": \"actual code\"}],\n  \"summary\": \"brief summary of findings\"\n}\n\nFor error analysis, use:\n{\n  \"errors\": [{\"file\": \"path\", \"issue\": \"description\", \"fix\": \"solution\", \"code\": \"fixed code\"}],\n  \"summary\": \"overall assessment\"\n}\n\nProvide detailed, actionable insights with specific code examples in the JSON structure.`;\n  }\n\n  /**\n   * Builds appropriate prompts based on analysis task type.\n   * \n   * @private\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {string} Constructed prompt\n   */\n  private buildPrompt(request: AnalysisRequest): string {\n    if (request.prompt) {\n      return request.prompt;\n    }\n\n    const baseContext = `Project: ${path.basename(this.config.projectPath)}\\n`;\n    \n    switch (request.task) {\n      case 'domain-analysis':\n        return baseContext + `\nAnalyze the following domain relationships using your GNN-Kuzu integration expertise:\n\nDomains: ${JSON.stringify(request.context.domains, null, 2)}\nDependencies: ${JSON.stringify(request.context.dependencies, null, 2)}\n\nRESPOND IN JSON FORMAT:\n{\n  \"domainAnalysis\": {\n    \"enhancedRelationships\": [\n      {\"from\": \"domain1\", \"to\": \"domain2\", \"strength\": 0.8, \"type\": \"dependency\", \"reasoning\": \"why this relationship exists\"}\n    ],\n    \"cohesionScores\": [\n      {\"domain\": \"domain1\", \"score\": 0.9, \"factors\": [\"factor1\", \"factor2\"]}\n    ],\n    \"crossDomainInsights\": [\n      {\"insight\": \"description\", \"impact\": \"high/medium/low\", \"recommendation\": \"what to do\"}\n    ]\n  },\n  \"architectureRecommendations\": [\n    {\"area\": \"domain boundaries\", \"recommendation\": \"specific advice\", \"priority\": \"high/medium/low\"}\n  ],\n  \"optimizations\": [\n    {\"target\": \"cohesion calculation\", \"improvement\": \"description\", \"code\": \"implementation example\"}\n  ],\n  \"summary\": \"overall domain analysis summary\"\n}\n\n${request.outputPath ? `Write results to: ${request.outputPath}` : ''}\n`;\n\n      case 'typescript-error-analysis':\n        return baseContext + `\nAnalyze and fix the following TypeScript errors in the GNN-Kuzu integration system:\n\nFiles: ${request.context.files?.join(', ')}\nErrors: ${JSON.stringify(request.context.errors, null, 2)}\n\nRESPOND IN JSON FORMAT:\n{\n  \"errorAnalysis\": [\n    {\n      \"file\": \"path/to/file\",\n      \"error\": \"error description\", \n      \"rootCause\": \"why this error occurs\",\n      \"severity\": \"high/medium/low\",\n      \"fix\": {\n        \"description\": \"what needs to be changed\",\n        \"code\": \"corrected code snippet\",\n        \"imports\": [\"any new imports needed\"],\n        \"explanation\": \"why this fix works\"\n      }\n    }\n  ],\n  \"preventionStrategies\": [\n    {\"strategy\": \"description\", \"implementation\": \"how to implement\", \"benefit\": \"what it prevents\"}\n  ],\n  \"architecturalImpact\": {\n    \"changes\": [\"change 1\", \"change 2\"],\n    \"risks\": [\"potential risk 1\"],\n    \"benefits\": [\"benefit 1\", \"benefit 2\"]\n  },\n  \"summary\": \"overall assessment and next steps\"\n}\n\n${request.requiresFileOperations ? 'Apply fixes directly to the files after providing the JSON analysis.' : ''}\n`;\n\n      case 'code-review':\n        return baseContext + `\nPerform a comprehensive code review of the GNN-Kuzu integration components:\n\nFiles: ${request.context.files?.join(', ')}\n\nRESPOND IN JSON FORMAT:\n{\n  \"codeReview\": {\n    \"overallRating\": \"A/B/C/D/F\",\n    \"strengths\": [\"strength 1\", \"strength 2\"],\n    \"criticalIssues\": [\n      {\"file\": \"path\", \"issue\": \"description\", \"severity\": \"high/medium/low\", \"recommendation\": \"fix\"}\n    ],\n    \"improvements\": [\n      {\"category\": \"performance/architecture/style\", \"suggestion\": \"description\", \"example\": \"code example\", \"priority\": \"high/medium/low\"}\n    ]\n  },\n  \"architectureAnalysis\": {\n    \"patterns\": [\"pattern 1\", \"pattern 2\"],\n    \"antiPatterns\": [\"issue 1\", \"issue 2\"],\n    \"recommendations\": [\"rec 1\", \"rec 2\"]\n  },\n  \"performanceAnalysis\": {\n    \"bottlenecks\": [\"bottleneck 1\", \"bottleneck 2\"],\n    \"optimizations\": [{\"area\": \"description\", \"improvement\": \"suggestion\", \"impact\": \"expected benefit\"}]\n  },\n  \"integrationPoints\": [\n    {\"component1\": \"name\", \"component2\": \"name\", \"coupling\": \"tight/loose\", \"recommendation\": \"advice\"}\n  ],\n  \"actionItems\": [\n    {\"priority\": \"high/medium/low\", \"task\": \"description\", \"timeEstimate\": \"hours/days\"}\n  ],\n  \"summary\": \"overall assessment and next steps\"\n}\n`;\n\n      default:\n        return baseContext + `\nPerform custom analysis task: ${request.task}\n\nContext: ${JSON.stringify(request.context, null, 2)}\n\nRESPOND IN JSON FORMAT:\n{\n  \"taskType\": \"${request.task}\",\n  \"analysis\": \"detailed analysis of the provided context\",\n  \"findings\": [\n    {\"category\": \"category name\", \"finding\": \"description\", \"importance\": \"high/medium/low\"}\n  ],\n  \"recommendations\": [\n    {\"recommendation\": \"specific advice\", \"reasoning\": \"why this helps\", \"priority\": \"high/medium/low\"}\n  ],\n  \"nextSteps\": [\"step 1\", \"step 2\", \"step 3\"],\n  \"summary\": \"concise summary of analysis and key takeaways\"\n}\n`;\n    }\n  }\n\n  /**\n   * Executes a command with proper error handling.\n   * \n   * @private\n   * @param {string} command - Command to execute\n   * @param {string[]} args - Command arguments\n   * @returns {Promise<{stdout: string, stderr: string, exitCode: number}>} Command result\n   */\n  private async executeCommand(command: string, args: string[]): Promise<{\n    stdout: string;\n    stderr: string; \n    exitCode: number;\n  }> {\n    return new Promise((resolve, reject) => {\n      const child = spawn(command, args, {\n        cwd: this.config.projectPath,\n        env: process.env\n      });\n\n      let stdout = '';\n      let stderr = '';\n\n      child.stdout?.on('data', (data) => {\n        stdout += data.toString();\n      });\n\n      child.stderr?.on('data', (data) => {\n        stderr += data.toString();\n      });\n\n      child.on('close', (code) => {\n        resolve({\n          stdout,\n          stderr,\n          exitCode: code || 0\n        });\n      });\n\n      child.on('error', (error) => {\n        reject(error);\n      });\n\n      // Set timeout to prevent hanging\n      setTimeout(() => {\n        child.kill();\n        reject(new Error(`Command timeout: ${command} ${args.join(' ')}`));\n      }, 60000); // 60 second timeout\n    });\n  }\n\n  /**\n   * Creates a new session for conversation continuity.\n   * \n   * @method createSession\n   * @returns {string} New session ID\n   */\n  createSession(): string {\n    this.sessionId = uuidv4();\n    return this.sessionId;\n  }\n\n  /**\n   * Gets current session ID.\n   * \n   * @method getSessionId\n   * @returns {string} Current session ID\n   */\n  getSessionId(): string {\n    return this.sessionId;\n  }\n\n  /**\n   * Updates service configuration.\n   * \n   * @method updateConfig\n   * @param {Partial<LLMIntegrationConfig>} updates - Configuration updates\n   */\n  updateConfig(updates: Partial<LLMIntegrationConfig>): void {\n    this.config = { ...this.config, ...updates };\n  }\n\n  /**\n   * Checks if a provider is currently in rate limit cooldown.\n   * \n   * @method isInCooldown\n   * @param {string} provider - Provider name ('gemini', etc.)\n   * @returns {boolean} True if provider is in cooldown\n   */\n  isInCooldown(provider: string): boolean {\n    const lastRateLimit = this.rateLimitTracker.get(provider);\n    if (!lastRateLimit) return false;\n\n    const cooldownPeriod = this.config.rateLimitCooldown || (60 * 60 * 1000);\n    return (Date.now() - lastRateLimit) < cooldownPeriod;\n  }\n\n  /**\n   * Gets remaining cooldown time for a provider in minutes.\n   * \n   * @method getCooldownRemaining\n   * @param {string} provider - Provider name ('gemini', etc.)\n   * @returns {number} Remaining cooldown time in minutes, or 0 if not in cooldown\n   */\n  getCooldownRemaining(provider: string): number {\n    const lastRateLimit = this.rateLimitTracker.get(provider);\n    if (!lastRateLimit) return 0;\n\n    const cooldownPeriod = this.config.rateLimitCooldown || (60 * 60 * 1000);\n    const remaining = cooldownPeriod - (Date.now() - lastRateLimit);\n    \n    return remaining > 0 ? Math.ceil(remaining / (60 * 1000)) : 0;\n  }\n\n  /**\n   * Manually clears cooldown for a provider (use with caution).\n   * \n   * @method clearCooldown\n   * @param {string} provider - Provider name ('gemini', etc.)\n   */\n  clearCooldown(provider: string): void {\n    this.rateLimitTracker.delete(provider);\n  }\n\n  /**\n   * Intelligently selects the best LLM provider based on task requirements and rate limits.\n   * \n   * **Strategy (Optimized for Rate Limits & Performance):**\n   * - **GitHub Models API (GPT-5)**: Primary choice - Azure AI inference, fully free, reliable JSON responses\n   * - **Claude Code**: File operations, codebase-aware tasks, complex editing\n   * - **Gemini**: Fallback option with intelligent 1-hour cooldown management\n   * - **Auto-fallback**: If Gemini hits rate limits, automatically uses GPT-5 API\n   * - **o1/DeepSeek/Grok**: Avoided due to severe rate limits\n   * \n   * @method analyzeSmart\n   * @param {AnalysisRequest} request - Analysis request\n   * @returns {Promise<AnalysisResult>} Analysis results with optimal provider\n   * \n   * @example Smart Analysis Selection\n   * ```typescript\n   * // This will use GPT-5 for general analysis\n   * const domainAnalysis = await service.analyzeSmart({\n   *   task: 'domain-analysis',\n   *   context: { domains, dependencies },\n   *   requiresFileOperations: false  // No file ops = GPT-5\n   * });\n   * \n   * // This will use Claude Code for file editing task\n   * const codeFixing = await service.analyzeSmart({\n   *   task: 'typescript-error-analysis',\n   *   context: { files, errors },\n   *   requiresFileOperations: true   // File ops = Claude Code\n   * });\n   * ```\n   */\n  async analyzeSmart(request: AnalysisRequest): Promise<AnalysisResult> {\n    const originalProvider = this.config.preferredProvider;\n\n    // Simple provider selection: GPT-5 for analysis, Claude Code for file operations\n    if (request.requiresFileOperations) {\n      // File operations need Claude Code with dangerous permissions\n      this.config.preferredProvider = 'claude-code';\n    } else {\n      // All analysis tasks use fully free GPT-5 (200k context, 100k output)\n      this.config.preferredProvider = 'github-models';\n      this.config.model = 'openai/gpt-5'; // Fully free, excellent for all tasks\n      this.config.maxTokens = 100000; // Full output capacity\n    }\n\n    try {\n      const result = await this.analyze(request);\n      return result;\n    } finally {\n      // Restore original provider preference\n      this.config.preferredProvider = originalProvider;\n    }\n  }\n\n  /**\n   * Optional A/B testing method - use sparingly due to rate limits.\n   * \n   * Since GPT-5 is fully free and performs excellently, A/B testing should only\n   * be used in rare cases where you need to compare different approaches.\n   * All other models have rate limits, so this method should be avoided in \n   * production workflows.\n   * \n   * **Recommendation**: Use `analyzeSmart()` instead, which uses GPT-5 for analysis.\n   * \n   * @async\n   * @method analyzeArchitectureAB\n   * @param {AnalysisRequest} request - Architecture analysis request  \n   * @returns {Promise<{gpt5: AnalysisResult, comparison: AnalysisResult, recommendation: string}>} A/B test results\n   * \n   * @deprecated Use analyzeSmart() instead - GPT-5 is fully free and excellent for all tasks\n   */\n  async analyzeArchitectureAB(request: AnalysisRequest): Promise<{\n    gpt5: AnalysisResult;\n    comparison: AnalysisResult;\n    recommendation: string;\n  }> {\n    const originalProvider = this.config.preferredProvider;\n    const originalModel = this.config.model;\n\n    try {\n      // Run analysis with GPT-5 (fully free, primary choice)\n      this.config.preferredProvider = 'github-models';\n      this.config.model = 'openai/gpt-5';\n      this.config.maxTokens = 4000; // API limit\n      const gpt5Result = await this.analyzeWithGitHubModelsAPI({\n        ...request,\n        prompt: `[GPT-5 API Analysis] ${request.prompt || this.buildPrompt(request)}`\n      });\n\n      // Run analysis with Codestral (for coding comparison) via API\n      this.config.model = 'mistral-ai/codestral-2501';\n      this.config.maxTokens = 4000; // API limit\n      const codestralResult = await this.analyzeWithGitHubModelsAPI({\n        ...request,\n        prompt: `[Codestral API Analysis] ${request.prompt || this.buildPrompt(request)}`\n      });\n\n      // Generate recommendation based on results and rate limits\n      let recommendation = '';\n      if (gpt5Result.success && codestralResult.success) {\n        if (request.task?.includes('code') || request.task?.includes('typescript')) {\n          recommendation = 'Codestral specialized for coding but GPT-5 preferred due to no rate limits';\n        } else {\n          recommendation = 'GPT-5 preferred - fully free with excellent analysis capabilities';\n        }\n      } else if (gpt5Result.success) {\n        recommendation = 'GPT-5 succeeded while Codestral failed - stick with GPT-5';\n      } else if (codestralResult.success) {\n        recommendation = 'Codestral succeeded while GPT-5 failed - unusual, investigate';\n      } else {\n        recommendation = 'Both models failed - check network or API status';\n      }\n\n      return {\n        gpt5: gpt5Result,\n        comparison: codestralResult,\n        recommendation: 'Recommendation: Use GPT-5 exclusively - it is fully free and excellent for all tasks'\n      };\n\n    } finally {\n      // Restore original configuration\n      this.config.preferredProvider = originalProvider;\n      this.config.model = originalModel;\n    }\n  }\n}", "import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n", "import { randomUUID } from 'crypto';\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts snippet:ReadmeSampleAbortError\n * import { AbortError } from \"@typespec/ts-http-runtime\";\n *\n * async function doAsyncWork(options: { abortSignal: AbortSignal }): Promise<void> {\n *   if (options.abortSignal.aborted) {\n *     throw new AbortError();\n *   }\n *\n *   // do async work\n * }\n *\n * const controller = new AbortController();\n * controller.abort();\n *\n * try {\n *   doAsyncWork({ abortSignal: controller.signal });\n * } catch (e) {\n *   if (e instanceof Error && e.name === \"AbortError\") {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { EOL } from \"node:os\";\nimport util from \"node:util\";\nimport * as process from \"node:process\";\n\nexport function log(message: unknown, ...args: any[]): void {\n  process.stderr.write(`${util.format(message, ...args)}${EOL}`);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { log } from \"./log.js\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"typeSpecRuntime:*\"\n   * Supports skip syntax, e.g. \"typeSpecRuntime:*,-typeSpecRuntime:storage:*\" will enable\n   * everything under typeSpecRuntime except for things under typeSpecRuntime:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log,\n  },\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend,\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport debug from \"./debug.js\";\n\nimport type { Debugger } from \"./debug.js\";\nexport type { Debugger };\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type TypeSpecRuntimeLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * A TypeSpecRuntimeClientLogger is a function that can log to an appropriate severity level.\n */\nexport type TypeSpecRuntimeClientLogger = Debugger;\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\nexport interface TypeSpecRuntimeLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * todo doc\n */\nexport interface LoggerContext {\n  /**\n   * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n   * @param level - The log level to enable for logging.\n   * Options from most verbose to least verbose are:\n   * - verbose\n   * - info\n   * - warning\n   * - error\n   */\n  setLogLevel(logLevel?: TypeSpecRuntimeLogLevel): void;\n\n  /**\n   * Retrieves the currently specified log level.\n   */\n  getLogLevel(): TypeSpecRuntimeLogLevel | undefined;\n\n  /**\n   * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n   * @param namespace - The name of the SDK package.\n   * @hidden\n   */\n  createClientLogger(namespace: string): TypeSpecRuntimeLogger;\n\n  /**\n   * The TypeSpecRuntimeClientLogger provides a mechanism for overriding where logs are output to.\n   * By default, logs are sent to stderr.\n   * Override the `log` method to redirect logs to another location.\n   */\n  logger: TypeSpecRuntimeClientLogger;\n}\n\n/**\n * Option for creating a TypeSpecRuntimeLoggerContext.\n */\nexport interface CreateLoggerContextOptions {\n  /**\n   * The name of the environment variable to check for the log level.\n   */\n  logLevelEnvVarName: string;\n\n  /**\n   * The namespace of the logger.\n   */\n  namespace: string;\n}\n\nconst TYPESPEC_RUNTIME_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype DebuggerWithLogLevel = Debugger & { level: TypeSpecRuntimeLogLevel };\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100,\n};\n\nfunction patchLogMethod(\n  parent: TypeSpecRuntimeClientLogger,\n  child: TypeSpecRuntimeClientLogger | DebuggerWithLogLevel,\n): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction isTypeSpecRuntimeLogLevel(level: string): level is TypeSpecRuntimeLogLevel {\n  return TYPESPEC_RUNTIME_LOG_LEVELS.includes(level as any);\n}\n\n/**\n * Creates a logger context base on the provided options.\n * @param options - The options for creating a logger context.\n * @returns The logger context.\n */\nexport function createLoggerContext(options: CreateLoggerContextOptions): LoggerContext {\n  const registeredLoggers = new Set<DebuggerWithLogLevel>();\n  const logLevelFromEnv =\n    (typeof process !== \"undefined\" && process.env && process.env[options.logLevelEnvVarName]) ||\n    undefined;\n\n  let logLevel: TypeSpecRuntimeLogLevel | undefined;\n\n  const clientLogger: TypeSpecRuntimeClientLogger = debug(options.namespace);\n  clientLogger.log = (...args) => {\n    debug.log(...args);\n  };\n\n  function contextSetLogLevel(level?: TypeSpecRuntimeLogLevel): void {\n    if (level && !isTypeSpecRuntimeLogLevel(level)) {\n      throw new Error(\n        `Unknown log level '${level}'. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\",\")}`,\n      );\n    }\n    logLevel = level;\n\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n      if (shouldEnable(logger)) {\n        enabledNamespaces.push(logger.namespace);\n      }\n    }\n\n    debug.enable(enabledNamespaces.join(\",\"));\n  }\n\n  if (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isTypeSpecRuntimeLogLevel(logLevelFromEnv)) {\n      contextSetLogLevel(logLevelFromEnv);\n    } else {\n      console.error(\n        `${options.logLevelEnvVarName} set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\n          \", \",\n        )}.`,\n      );\n    }\n  }\n\n  function shouldEnable(logger: DebuggerWithLogLevel): boolean {\n    return Boolean(logLevel && levelMap[logger.level] <= levelMap[logLevel]);\n  }\n\n  function createLogger(\n    parent: TypeSpecRuntimeClientLogger,\n    level: TypeSpecRuntimeLogLevel,\n  ): DebuggerWithLogLevel {\n    const logger: DebuggerWithLogLevel = Object.assign(parent.extend(level), {\n      level,\n    });\n\n    patchLogMethod(parent, logger);\n\n    if (shouldEnable(logger)) {\n      const enabledNamespaces = debug.disable();\n      debug.enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n\n    registeredLoggers.add(logger);\n\n    return logger;\n  }\n\n  function contextGetLogLevel(): TypeSpecRuntimeLogLevel | undefined {\n    return logLevel;\n  }\n\n  function contextCreateClientLogger(namespace: string): TypeSpecRuntimeLogger {\n    const clientRootLogger: TypeSpecRuntimeClientLogger = clientLogger.extend(namespace);\n    patchLogMethod(clientLogger, clientRootLogger);\n    return {\n      error: createLogger(clientRootLogger, \"error\"),\n      warning: createLogger(clientRootLogger, \"warning\"),\n      info: createLogger(clientRootLogger, \"info\"),\n      verbose: createLogger(clientRootLogger, \"verbose\"),\n    };\n  }\n\n  return {\n    setLogLevel: contextSetLogLevel,\n    getLogLevel: contextGetLogLevel,\n    createClientLogger: contextCreateClientLogger,\n    logger: clientLogger,\n  };\n}\n\nconst context = createLoggerContext({\n  logLevelEnvVarName: \"TYPESPEC_RUNTIME_LOG_LEVEL\",\n  namespace: \"typeSpecRuntime\",\n});\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const TypeSpecRuntimeLogger: TypeSpecRuntimeClientLogger = context.logger;\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function setLogLevel(logLevel?: TypeSpecRuntimeLogLevel): void {\n  context.setLogLevel(logLevel);\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): TypeSpecRuntimeLogLevel | undefined {\n  return context.getLogLevel();\n}\n\n/**\n * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): TypeSpecRuntimeLogger {\n  return context.createClientLogger(namespace);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpHeaders, RawHttpHeaders, RawHttpHeadersInput } from \"./interfaces.js\";\n\ninterface HeaderEntry {\n  name: string;\n  value: string;\n}\n\nfunction normalizeName(name: string): string {\n  return name.toLowerCase();\n}\n\nfunction* headerIterator(map: Map<string, HeaderEntry>): IterableIterator<[string, string]> {\n  for (const entry of map.values()) {\n    yield [entry.name, entry.value];\n  }\n}\n\nclass HttpHeadersImpl implements HttpHeaders {\n  private readonly _headersMap: Map<string, HeaderEntry>;\n\n  constructor(rawHeaders?: RawHttpHeaders | RawHttpHeadersInput) {\n    this._headersMap = new Map<string, HeaderEntry>();\n    if (rawHeaders) {\n      for (const headerName of Object.keys(rawHeaders)) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   * @param value - The value of the header to set.\n   */\n  public set(name: string, value: string | number | boolean): void {\n    this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param name - The name of the header. This value is case-insensitive.\n   */\n  public get(name: string): string | undefined {\n    return this._headersMap.get(normalizeName(name))?.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   */\n  public has(name: string): boolean {\n    return this._headersMap.has(normalizeName(name));\n  }\n\n  /**\n   * Remove the header with the provided headerName.\n   * @param name - The name of the header to remove.\n   */\n  public delete(name: string): void {\n    this._headersMap.delete(normalizeName(name));\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJSON(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const entry of this._headersMap.values()) {\n        result[entry.name] = entry.value;\n      }\n    } else {\n      for (const [normalizedName, entry] of this._headersMap) {\n        result[normalizedName] = entry.value;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJSON({ preserveCase: true }));\n  }\n\n  /**\n   * Iterate over tuples of header [name, value] pairs.\n   */\n  [Symbol.iterator](): Iterator<[string, string]> {\n    return headerIterator(this._headersMap);\n  }\n}\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders?: RawHttpHeadersInput): HttpHeaders {\n  return new HttpHeadersImpl(rawHeaders);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID as v4RandomUUID } from \"node:crypto\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : v4RandomUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FormDataMap,\n  HttpHeaders,\n  HttpMethods,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\nimport { AuthScheme } from \"./auth/schemes.js\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignal;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n\n  /**\n   * List of authentication schemes used for this specific request.\n   * These schemes define how the request will be authenticated.\n   *\n   * If values are provided, these schemes override the client level authentication schemes.\n   * If an empty array is provided, it explicitly specifies no authentication for the request.\n   * If not provided at the request level, the client level authentication schemes will be used.\n   */\n  authSchemes?: AuthScheme[];\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n}\n\nclass PipelineRequestImpl implements PipelineRequest {\n  public url: string;\n  public method: HttpMethods;\n  public headers: HttpHeaders;\n  public timeout: number;\n  public withCredentials: boolean;\n  public body?: RequestBodyType;\n  public multipartBody?: MultipartRequestBody;\n  public formData?: FormDataMap;\n  public streamResponseStatusCodes?: Set<number>;\n  public enableBrowserStreams: boolean;\n\n  public proxySettings?: ProxySettings;\n  public disableKeepAlive: boolean;\n  public abortSignal?: AbortSignal;\n  public requestId: string;\n  public allowInsecureConnection?: boolean;\n  public onUploadProgress?: (progress: TransferProgressEvent) => void;\n  public onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  public requestOverrides?: Record<string, unknown>;\n  public authSchemes?: AuthScheme[];\n\n  constructor(options: PipelineRequestOptions) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n    this.requestOverrides = options.requestOverrides;\n    this.authSchemes = options.authSchemes;\n  }\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  return new PipelineRequestImpl(options);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\nconst ValidPhaseNames = new Set<PipelinePhase>([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\ninterface PipelineDescriptor {\n  policy: PipelinePolicy;\n  options: AddPolicyOptions;\n}\n\ninterface PolicyGraphNode {\n  policy: PipelinePolicy;\n  dependsOn: Set<PolicyGraphNode>;\n  dependants: Set<PolicyGraphNode>;\n  afterPhase?: Phase;\n}\n\ninterface Phase {\n  name: PipelinePhase | \"None\";\n  policies: Set<PolicyGraphNode>;\n  hasRun: boolean;\n  hasAfterPolicies: boolean;\n}\n\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline implements Pipeline {\n  private _policies: PipelineDescriptor[] = [];\n  private _orderedPolicies?: PipelinePolicy[];\n\n  private constructor(policies?: PipelineDescriptor[]) {\n    this._policies = policies?.slice(0) ?? [];\n    this._orderedPolicies = undefined;\n  }\n\n  public addPolicy(policy: PipelinePolicy, options: AddPolicyOptions = {}): void {\n    if (options.phase && options.afterPhase) {\n      throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n    }\n    if (options.phase && !ValidPhaseNames.has(options.phase)) {\n      throw new Error(`Invalid phase name: ${options.phase}`);\n    }\n    if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n      throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n    }\n    this._policies.push({\n      policy,\n      options,\n    });\n    this._orderedPolicies = undefined;\n  }\n\n  public removePolicy(options: { name?: string; phase?: string }): PipelinePolicy[] {\n    const removedPolicies: PipelinePolicy[] = [];\n\n    this._policies = this._policies.filter((policyDescriptor) => {\n      if (\n        (options.name && policyDescriptor.policy.name === options.name) ||\n        (options.phase && policyDescriptor.options.phase === options.phase)\n      ) {\n        removedPolicies.push(policyDescriptor.policy);\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this._orderedPolicies = undefined;\n\n    return removedPolicies;\n  }\n\n  public sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse> {\n    const policies = this.getOrderedPolicies();\n\n    const pipeline = policies.reduceRight<SendRequest>(\n      (next, policy) => {\n        return (req: PipelineRequest) => {\n          return policy.sendRequest(req, next);\n        };\n      },\n      (req: PipelineRequest) => httpClient.sendRequest(req),\n    );\n\n    return pipeline(request);\n  }\n\n  public getOrderedPolicies(): PipelinePolicy[] {\n    if (!this._orderedPolicies) {\n      this._orderedPolicies = this.orderPolicies();\n    }\n    return this._orderedPolicies;\n  }\n\n  public clone(): Pipeline {\n    return new HttpPipeline(this._policies);\n  }\n\n  public static create(): Pipeline {\n    return new HttpPipeline();\n  }\n\n  private orderPolicies(): PipelinePolicy[] {\n    /**\n     * The goal of this method is to reliably order pipeline policies\n     * based on their declared requirements when they were added.\n     *\n     * Order is first determined by phase:\n     *\n     * 1. Serialize Phase\n     * 2. Policies not in a phase\n     * 3. Deserialize Phase\n     * 4. Retry Phase\n     * 5. Sign Phase\n     *\n     * Within each phase, policies are executed in the order\n     * they were added unless they were specified to execute\n     * before/after other policies or after a particular phase.\n     *\n     * To determine the final order, we will walk the policy list\n     * in phase order multiple times until all dependencies are\n     * satisfied.\n     *\n     * `afterPolicies` are the set of policies that must be\n     * executed before a given policy. This requirement is\n     * considered satisfied when each of the listed policies\n     * have been scheduled.\n     *\n     * `beforePolicies` are the set of policies that must be\n     * executed after a given policy. Since this dependency\n     * can be expressed by converting it into a equivalent\n     * `afterPolicies` declarations, they are normalized\n     * into that form for simplicity.\n     *\n     * An `afterPhase` dependency is considered satisfied when all\n     * policies in that phase have scheduled.\n     *\n     */\n    const result: PipelinePolicy[] = [];\n\n    // Track all policies we know about.\n    const policyMap: Map<string, PolicyGraphNode> = new Map<string, PolicyGraphNode>();\n\n    function createPhase(name: PipelinePhase | \"None\"): Phase {\n      return {\n        name,\n        policies: new Set<PolicyGraphNode>(),\n        hasRun: false,\n        hasAfterPolicies: false,\n      };\n    }\n\n    // Track policies for each phase.\n    const serializePhase = createPhase(\"Serialize\");\n    const noPhase = createPhase(\"None\");\n    const deserializePhase = createPhase(\"Deserialize\");\n    const retryPhase = createPhase(\"Retry\");\n    const signPhase = createPhase(\"Sign\");\n\n    // a list of phases in order\n    const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n\n    // Small helper function to map phase name to each Phase\n    function getPhase(phase: PipelinePhase | undefined): Phase {\n      if (phase === \"Retry\") {\n        return retryPhase;\n      } else if (phase === \"Serialize\") {\n        return serializePhase;\n      } else if (phase === \"Deserialize\") {\n        return deserializePhase;\n      } else if (phase === \"Sign\") {\n        return signPhase;\n      } else {\n        return noPhase;\n      }\n    }\n\n    // First walk each policy and create a node to track metadata.\n    for (const descriptor of this._policies) {\n      const policy = descriptor.policy;\n      const options = descriptor.options;\n      const policyName = policy.name;\n      if (policyMap.has(policyName)) {\n        throw new Error(\"Duplicate policy names not allowed in pipeline\");\n      }\n      const node: PolicyGraphNode = {\n        policy,\n        dependsOn: new Set<PolicyGraphNode>(),\n        dependants: new Set<PolicyGraphNode>(),\n      };\n      if (options.afterPhase) {\n        node.afterPhase = getPhase(options.afterPhase);\n        node.afterPhase.hasAfterPolicies = true;\n      }\n      policyMap.set(policyName, node);\n      const phase = getPhase(options.phase);\n      phase.policies.add(node);\n    }\n\n    // Now that each policy has a node, connect dependency references.\n    for (const descriptor of this._policies) {\n      const { policy, options } = descriptor;\n      const policyName = policy.name;\n      const node = policyMap.get(policyName);\n      if (!node) {\n        throw new Error(`Missing node for policy ${policyName}`);\n      }\n\n      if (options.afterPolicies) {\n        for (const afterPolicyName of options.afterPolicies) {\n          const afterNode = policyMap.get(afterPolicyName);\n          if (afterNode) {\n            // Linking in both directions helps later\n            // when we want to notify dependants.\n            node.dependsOn.add(afterNode);\n            afterNode.dependants.add(node);\n          }\n        }\n      }\n      if (options.beforePolicies) {\n        for (const beforePolicyName of options.beforePolicies) {\n          const beforeNode = policyMap.get(beforePolicyName);\n          if (beforeNode) {\n            // To execute before another node, make it\n            // depend on the current node.\n            beforeNode.dependsOn.add(node);\n            node.dependants.add(beforeNode);\n          }\n        }\n      }\n    }\n\n    function walkPhase(phase: Phase): void {\n      phase.hasRun = true;\n      // Sets iterate in insertion order\n      for (const node of phase.policies) {\n        if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n          // If this node is waiting on a phase to complete,\n          // we need to skip it for now.\n          // Even if the phase is empty, we should wait for it\n          // to be walked to avoid re-ordering policies.\n          continue;\n        }\n        if (node.dependsOn.size === 0) {\n          // If there's nothing else we're waiting for, we can\n          // add this policy to the result list.\n          result.push(node.policy);\n          // Notify anything that depends on this policy that\n          // the policy has been scheduled.\n          for (const dependant of node.dependants) {\n            dependant.dependsOn.delete(node);\n          }\n          policyMap.delete(node.policy.name);\n          phase.policies.delete(node);\n        }\n      }\n    }\n\n    function walkPhases(): void {\n      for (const phase of orderedPhases) {\n        walkPhase(phase);\n        // if the phase isn't complete\n        if (phase.policies.size > 0 && phase !== noPhase) {\n          if (!noPhase.hasRun) {\n            // Try running noPhase to see if that unblocks this phase next tick.\n            // This can happen if a phase that happens before noPhase\n            // is waiting on a noPhase policy to complete.\n            walkPhase(noPhase);\n          }\n          // Don't proceed to the next phase until this phase finishes.\n          return;\n        }\n\n        if (phase.hasAfterPolicies) {\n          // Run any policies unblocked by this phase\n          walkPhase(noPhase);\n        }\n      }\n    }\n\n    // Iterate until we've put every node in the result list.\n    let iteration = 0;\n    while (policyMap.size > 0) {\n      iteration++;\n      const initialResultLength = result.length;\n      // Keep walking each phase in order until we can order every node.\n      walkPhases();\n      // The result list *should* get at least one larger each time\n      // after the first full pass.\n      // Otherwise, we're going to loop forever.\n      if (result.length <= initialResultLength && iteration > 1) {\n        throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return HttpPipeline.create();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { inspect } from \"node:util\";\n\nexport const custom = inspect.custom;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type UnknownObject, isObject } from \"./object.js\";\n\n/**\n * Sanitizer options\n */\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"ms-cv\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Accept-Encoding\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"WWW-Authenticate\",\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\n/**\n * A utility class to sanitize objects for logging.\n */\nexport class Sanitizer {\n  private allowedHeaderNames: Set<string>;\n  private allowedQueryParameters: Set<string>;\n\n  constructor({\n    additionalAllowedHeaderNames: allowedHeaderNames = [],\n    additionalAllowedQueryParameters: allowedQueryParameters = [],\n  }: SanitizerOptions = {}) {\n    allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n    allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  /**\n   * Sanitizes an object for logging.\n   * @param obj - The object to sanitize\n   * @returns - The sanitized object as a string\n   */\n  public sanitize(obj: unknown): string {\n    const seen = new Set<unknown>();\n    return JSON.stringify(\n      obj,\n      (key: string, value: unknown) => {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n          return {\n            ...value,\n            name: value.name,\n            message: value.message,\n          };\n        }\n\n        if (key === \"headers\") {\n          return this.sanitizeHeaders(value as UnknownObject);\n        } else if (key === \"url\") {\n          return this.sanitizeUrl(value as string);\n        } else if (key === \"query\") {\n          return this.sanitizeQuery(value as UnknownObject);\n        } else if (key === \"body\") {\n          // Don't log the request body\n          return undefined;\n        } else if (key === \"response\") {\n          // Don't log response again\n          return undefined;\n        } else if (key === \"operationSpec\") {\n          // When using sendOperationRequest, the request carries a massive\n          // field with the autorest spec. No need to log it.\n          return undefined;\n        } else if (Array.isArray(value) || isObject(value)) {\n          if (seen.has(value)) {\n            return \"[Circular]\";\n          }\n          seen.add(value);\n        }\n\n        return value;\n      },\n      2,\n    );\n  }\n\n  /**\n   * Sanitizes a URL for logging.\n   * @param value - The URL to sanitize\n   * @returns - The sanitized URL as a string\n   */\n  public sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null || value === \"\") {\n      return value;\n    }\n\n    const url = new URL(value);\n\n    if (!url.search) {\n      return value;\n    }\n\n    for (const [key] of url.searchParams) {\n      if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n        url.searchParams.set(key, RedactedString);\n      }\n    }\n\n    return url.toString();\n  }\n\n  private sanitizeHeaders(obj: UnknownObject): UnknownObject {\n    const sanitized: UnknownObject = {};\n    for (const key of Object.keys(obj)) {\n      if (this.allowedHeaderNames.has(key.toLowerCase())) {\n        sanitized[key] = obj[key];\n      } else {\n        sanitized[key] = RedactedString;\n      }\n    }\n    return sanitized;\n  }\n\n  private sanitizeQuery(value: UnknownObject): UnknownObject {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: UnknownObject = {};\n\n    for (const k of Object.keys(value)) {\n      if (this.allowedQueryParameters.has(k.toLowerCase())) {\n        sanitized[k] = value[k];\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"./util/error.js\";\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  public code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  public statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  public request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  public response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  public details?: unknown;\n\n  constructor(message: string, options: RestErrorOptions = {}) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = options.code;\n    this.statusCode = options.statusCode;\n\n    // The request and response may contain sensitive information in the headers or body.\n    // To help prevent this sensitive information being accidentally logged, the request and response\n    // properties are marked as non-enumerable here. This prevents them showing up in the output of\n    // JSON.stringify and console.log.\n    Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n    Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n\n    // Logging method for util.inspect in Node\n    Object.defineProperty(this, custom, {\n      value: () => {\n        // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n        // response get sanitized.\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize({\n          ...this,\n          request: this.request,\n          response: this.response,\n        })}`;\n      },\n      enumerable: false,\n    });\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n}\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  if (e instanceof RestError) {\n    return true;\n  }\n  return isError(e) && e.name === \"RestError\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  return Buffer.from(bytes).toString(format);\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  return Buffer.from(value, format);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as http from \"node:http\";\nimport * as https from \"node:https\";\nimport * as zlib from \"node:zlib\";\nimport { Transform } from \"node:stream\";\nimport { AbortError } from \"./abort-controller/AbortError.js\";\nimport type {\n  HttpClient,\n  HttpHeaders,\n  PipelineRequest,\n  PipelineResponse,\n  RequestBodyType,\n  TlsSettings,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { RestError } from \"./restError.js\";\nimport type { IncomingMessage } from \"node:http\";\nimport { logger } from \"./log.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst DEFAULT_TLS_SETTINGS = {};\n\nfunction isReadableStream(body: any): body is NodeJS.ReadableStream {\n  return body && typeof body.pipe === \"function\";\n}\n\nfunction isStreamComplete(stream: NodeJS.ReadableStream): Promise<void> {\n  if (stream.readable === false) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve) => {\n    const handler = (): void => {\n      resolve();\n      stream.removeListener(\"close\", handler);\n      stream.removeListener(\"end\", handler);\n      stream.removeListener(\"error\", handler);\n    };\n\n    stream.on(\"close\", handler);\n    stream.on(\"end\", handler);\n    stream.on(\"error\", handler);\n  });\n}\n\nfunction isArrayBuffer(body: any): body is ArrayBuffer | ArrayBufferView {\n  return body && typeof body.byteLength === \"number\";\n}\n\nclass ReportTransform extends Transform {\n  private loadedBytes = 0;\n  private progressCallback: (progress: TransferProgressEvent) => void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n  _transform(chunk: string | Buffer, _encoding: string, callback: Function): void {\n    this.push(chunk);\n    this.loadedBytes += chunk.length;\n    try {\n      this.progressCallback({ loadedBytes: this.loadedBytes });\n      callback();\n    } catch (e: any) {\n      callback(e);\n    }\n  }\n\n  constructor(progressCallback: (progress: TransferProgressEvent) => void) {\n    super();\n    this.progressCallback = progressCallback;\n  }\n}\n\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient implements HttpClient {\n  private cachedHttpAgent?: http.Agent;\n  private cachedHttpsAgents: WeakMap<TlsSettings, https.Agent> = new WeakMap();\n\n  /**\n   * Makes a request over an underlying transport layer and returns the response.\n   * @param request - The request to be made.\n   */\n  public async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    const abortController = new AbortController();\n    let abortListener: ((event: any) => void) | undefined;\n    if (request.abortSignal) {\n      if (request.abortSignal.aborted) {\n        throw new AbortError(\"The operation was aborted. Request has already been canceled.\");\n      }\n\n      abortListener = (event: Event) => {\n        if (event.type === \"abort\") {\n          abortController.abort();\n        }\n      };\n      request.abortSignal.addEventListener(\"abort\", abortListener);\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | undefined;\n    if (request.timeout > 0) {\n      timeoutId = setTimeout(() => {\n        const sanitizer = new Sanitizer();\n        logger.info(`request to '${sanitizer.sanitizeUrl(request.url)}' timed out. canceling...`);\n        abortController.abort();\n      }, request.timeout);\n    }\n\n    const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n    const shouldDecompress =\n      acceptEncoding?.includes(\"gzip\") || acceptEncoding?.includes(\"deflate\");\n\n    let body = typeof request.body === \"function\" ? request.body() : request.body;\n    if (body && !request.headers.has(\"Content-Length\")) {\n      const bodyLength = getBodyLength(body);\n      if (bodyLength !== null) {\n        request.headers.set(\"Content-Length\", bodyLength);\n      }\n    }\n\n    let responseStream: NodeJS.ReadableStream | undefined;\n    try {\n      if (body && request.onUploadProgress) {\n        const onUploadProgress = request.onUploadProgress;\n        const uploadReportStream = new ReportTransform(onUploadProgress);\n        uploadReportStream.on(\"error\", (e) => {\n          logger.error(\"Error in upload progress\", e);\n        });\n        if (isReadableStream(body)) {\n          body.pipe(uploadReportStream);\n        } else {\n          uploadReportStream.end(body);\n        }\n\n        body = uploadReportStream;\n      }\n\n      const res = await this.makeRequest(request, abortController, body);\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      const headers = getResponseHeaders(res);\n\n      const status = res.statusCode ?? 0;\n      const response: PipelineResponse = {\n        status,\n        headers,\n        request,\n      };\n\n      // Responses to HEAD must not have a body.\n      // If they do return a body, that body must be ignored.\n      if (request.method === \"HEAD\") {\n        // call resume() and not destroy() to avoid closing the socket\n        // and losing keep alive\n        res.resume();\n        return response;\n      }\n\n      responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n\n      const onDownloadProgress = request.onDownloadProgress;\n      if (onDownloadProgress) {\n        const downloadReportStream = new ReportTransform(onDownloadProgress);\n        downloadReportStream.on(\"error\", (e) => {\n          logger.error(\"Error in download progress\", e);\n        });\n        responseStream.pipe(downloadReportStream);\n        responseStream = downloadReportStream;\n      }\n\n      if (\n        // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n        request.streamResponseStatusCodes?.has(Number.POSITIVE_INFINITY) ||\n        request.streamResponseStatusCodes?.has(response.status)\n      ) {\n        response.readableStreamBody = responseStream;\n      } else {\n        response.bodyAsText = await streamToText(responseStream);\n      }\n\n      return response;\n    } finally {\n      // clean up event listener\n      if (request.abortSignal && abortListener) {\n        let uploadStreamDone = Promise.resolve();\n        if (isReadableStream(body)) {\n          uploadStreamDone = isStreamComplete(body);\n        }\n        let downloadStreamDone = Promise.resolve();\n        if (isReadableStream(responseStream)) {\n          downloadStreamDone = isStreamComplete(responseStream);\n        }\n        Promise.all([uploadStreamDone, downloadStreamDone])\n          .then(() => {\n            // eslint-disable-next-line promise/always-return\n            if (abortListener) {\n              request.abortSignal?.removeEventListener(\"abort\", abortListener);\n            }\n          })\n          .catch((e) => {\n            logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n          });\n      }\n    }\n  }\n\n  private makeRequest(\n    request: PipelineRequest,\n    abortController: AbortController,\n    body?: RequestBodyType,\n  ): Promise<http.IncomingMessage> {\n    const url = new URL(request.url);\n\n    const isInsecure = url.protocol !== \"https:\";\n\n    if (isInsecure && !request.allowInsecureConnection) {\n      throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n    }\n\n    const agent = (request.agent as http.Agent) ?? this.getOrCreateAgent(request, isInsecure);\n    const options: http.RequestOptions = {\n      agent,\n      hostname: url.hostname,\n      path: `${url.pathname}${url.search}`,\n      port: url.port,\n      method: request.method,\n      headers: request.headers.toJSON({ preserveCase: true }),\n      ...request.requestOverrides,\n    };\n\n    return new Promise<http.IncomingMessage>((resolve, reject) => {\n      const req = isInsecure ? http.request(options, resolve) : https.request(options, resolve);\n\n      req.once(\"error\", (err: Error & { code?: string }) => {\n        reject(\n          new RestError(err.message, { code: err.code ?? RestError.REQUEST_SEND_ERROR, request }),\n        );\n      });\n\n      abortController.signal.addEventListener(\"abort\", () => {\n        const abortError = new AbortError(\n          \"The operation was aborted. Rejecting from abort signal callback while making request.\",\n        );\n        req.destroy(abortError);\n        reject(abortError);\n      });\n      if (body && isReadableStream(body)) {\n        body.pipe(req);\n      } else if (body) {\n        if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n          req.end(body);\n        } else if (isArrayBuffer(body)) {\n          req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n        } else {\n          logger.error(\"Unrecognized body type\", body);\n          reject(new RestError(\"Unrecognized body type\"));\n        }\n      } else {\n        // streams don't like \"undefined\" being passed as data\n        req.end();\n      }\n    });\n  }\n\n  private getOrCreateAgent(request: PipelineRequest, isInsecure: boolean): http.Agent {\n    const disableKeepAlive = request.disableKeepAlive;\n\n    // Handle Insecure requests first\n    if (isInsecure) {\n      if (disableKeepAlive) {\n        // keepAlive:false is the default so we don't need a custom Agent\n        return http.globalAgent;\n      }\n\n      if (!this.cachedHttpAgent) {\n        // If there is no cached agent create a new one and cache it.\n        this.cachedHttpAgent = new http.Agent({ keepAlive: true });\n      }\n      return this.cachedHttpAgent;\n    } else {\n      if (disableKeepAlive && !request.tlsSettings) {\n        // When there are no tlsSettings and keepAlive is false\n        // we don't need a custom agent\n        return https.globalAgent;\n      }\n\n      // We use the tlsSettings to index cached clients\n      const tlsSettings = request.tlsSettings ?? DEFAULT_TLS_SETTINGS;\n\n      // Get the cached agent or create a new one with the\n      // provided values for keepAlive and tlsSettings\n      let agent = this.cachedHttpsAgents.get(tlsSettings);\n\n      if (agent && agent.options.keepAlive === !disableKeepAlive) {\n        return agent;\n      }\n\n      logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n      agent = new https.Agent({\n        // keepAlive is true if disableKeepAlive is false.\n        keepAlive: !disableKeepAlive,\n        // Since we are spreading, if no tslSettings were provided, nothing is added to the agent options.\n        ...tlsSettings,\n      });\n\n      this.cachedHttpsAgents.set(tlsSettings, agent);\n      return agent;\n    }\n  }\n}\n\nfunction getResponseHeaders(res: IncomingMessage): HttpHeaders {\n  const headers = createHttpHeaders();\n  for (const header of Object.keys(res.headers)) {\n    const value = res.headers[header];\n    if (Array.isArray(value)) {\n      if (value.length > 0) {\n        headers.set(header, value[0]);\n      }\n    } else if (value) {\n      headers.set(header, value);\n    }\n  }\n  return headers;\n}\n\nfunction getDecodedResponseStream(\n  stream: IncomingMessage,\n  headers: HttpHeaders,\n): NodeJS.ReadableStream {\n  const contentEncoding = headers.get(\"Content-Encoding\");\n  if (contentEncoding === \"gzip\") {\n    const unzip = zlib.createGunzip();\n    stream.pipe(unzip);\n    return unzip;\n  } else if (contentEncoding === \"deflate\") {\n    const inflate = zlib.createInflate();\n    stream.pipe(inflate);\n    return inflate;\n  }\n\n  return stream;\n}\n\nfunction streamToText(stream: NodeJS.ReadableStream): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const buffer: Buffer[] = [];\n\n    stream.on(\"data\", (chunk) => {\n      if (Buffer.isBuffer(chunk)) {\n        buffer.push(chunk);\n      } else {\n        buffer.push(Buffer.from(chunk));\n      }\n    });\n    stream.on(\"end\", () => {\n      resolve(Buffer.concat(buffer).toString(\"utf8\"));\n    });\n    stream.on(\"error\", (e) => {\n      if (e && e?.name === \"AbortError\") {\n        reject(e);\n      } else {\n        reject(\n          new RestError(`Error reading response as text: ${e.message}`, {\n            code: RestError.PARSE_ERROR,\n          }),\n        );\n      }\n    });\n  });\n}\n\n/** @internal */\nexport function getBodyLength(body: RequestBodyType): number | null {\n  if (!body) {\n    return 0;\n  } else if (Buffer.isBuffer(body)) {\n    return body.length;\n  } else if (isReadableStream(body)) {\n    return null;\n  } else if (isArrayBuffer(body)) {\n    return body.byteLength;\n  } else if (typeof body === \"string\") {\n    return Buffer.from(body).length;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nexport function createNodeHttpClient(): HttpClient {\n  return new NodeHttpClient();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"./logger/logger.js\";\nexport const logger = createClientLogger(\"ts-http-runtime\");\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createNodeHttpClient } from \"./nodeHttpClient.js\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  return createNodeHttpClient();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"../logger/logger.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  const logger = options.logger ?? coreLogger.info;\n  const sanitizer = new Sanitizer({\n    additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  return {\n    name: logPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!logger.enabled) {\n        return next(request);\n      }\n\n      logger(`Request: ${sanitizer.sanitize(request)}`);\n\n      const response = await next(request);\n\n      logger(`Response status code: ${response.status}`);\n      logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n\n      return response;\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  const { maxRetries = 20 } = options;\n  return {\n    name: redirectPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return handleRedirect(next, response, maxRetries);\n    },\n  };\n}\n\nasync function handleRedirect(\n  next: SendRequest,\n  response: PipelineResponse,\n  maxRetries: number,\n  currentRetries: number = 0,\n): Promise<PipelineResponse> {\n  const { request, status, headers } = response;\n  const locationHeader = headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    currentRetries < maxRetries\n  ) {\n    const url = new URL(locationHeader, request.url);\n    request.url = url.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      request.headers.delete(\"Content-Length\");\n      delete request.body;\n    }\n\n    request.headers.delete(\"Authorization\");\n\n    const res = await next(request);\n    return handleRedirect(next, res, maxRetries, currentRetries + 1);\n  }\n\n  return response;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as os from \"node:os\";\nimport * as process from \"node:process\";\n\n/**\n * @internal\n */\ninterface ExtendedPlatformVersions extends NodeJS.ProcessVersions {\n  bun?: string;\n  deno?: string;\n}\n\n/**\n * @internal\n */\nexport function getHeaderName(): string {\n  return \"User-Agent\";\n}\n\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map: Map<string, string>): Promise<void> {\n  if (process && process.versions) {\n    const versions = process.versions as ExtendedPlatformVersions;\n    if (versions.bun) {\n      map.set(\"Bun\", versions.bun);\n    } else if (versions.deno) {\n      map.set(\"Deno\", versions.deno);\n    } else if (versions.node) {\n      map.set(\"Node\", versions.node);\n    }\n  }\n\n  map.set(\"OS\", `(${os.arch()}-${os.type()}-${os.release()})`);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"0.3.0\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\n\nfunction getUserAgentString(telemetryInfo: Map<string, string>): string {\n  const parts: string[] = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n\n/**\n * @internal\n */\nexport function getUserAgentHeaderName(): string {\n  return getHeaderName();\n}\n\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix?: string): Promise<string> {\n  const runtimeInfo = new Map<string, string>();\n  runtimeInfo.set(\"ts-http-runtime\", SDK_VERSION);\n  await setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, await userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport function decompressResponsePolicy(): PipelinePolicy {\n  return {\n    name: decompressResponsePolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // HEAD requests have no body\n      if (request.method !== \"HEAD\") {\n        request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n      }\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  // Make sure inputs are integers.\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // Pick a random offset from zero to the size of the range.\n  // Since Math.random() can never return 1, we have to make the range one larger\n  // in order to be inclusive of the maximum value after we take the floor.\n  const offset = Math.floor(Math.random() * (max - min + 1));\n  return offset + min;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getRandomIntegerInclusive } from \"./random.js\";\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport type { PipelineResponse } from \"../interfaces.js\";\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay<T>(\n  delayInMs: number,\n  value?: T,\n  options?: {\n    abortSignal?: AbortSignal;\n    abortErrorMsg?: string;\n  },\n): Promise<T | void> {\n  return new Promise((resolve, reject) => {\n    let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    let onAborted: (() => void) | undefined = undefined;\n\n    const rejectOnAbort = (): void => {\n      return reject(\n        new AbortError(options?.abortErrorMsg ? options?.abortErrorMsg : StandardAbortMessage),\n      );\n    };\n\n    const removeListeners = (): void => {\n      if (options?.abortSignal && onAborted) {\n        options.abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    onAborted = (): void => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (options?.abortSignal && options.abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    timer = setTimeout(() => {\n      removeListeners();\n      resolve(value);\n    }, delayInMs);\n\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(\n  response: PipelineResponse,\n  headerName: string,\n): number | undefined {\n  const value = response.headers.get(headerName);\n  if (!value) return;\n  const valueAsNum = Number(value);\n  if (Number.isNaN(valueAsNum)) return;\n  return valueAsNum;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\n\n/**\n * The header that comes back from services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders: string[] = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response?: PipelineResponse): number | undefined {\n  if (!(response && [429, 503].includes(response.status))) return undefined;\n  try {\n    // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n    for (const header of AllRetryAfterHeaders) {\n      const retryAfterValue = parseHeaderValueAsNumber(response, header);\n      if (retryAfterValue === 0 || retryAfterValue) {\n        // \"Retry-After\" header ==> seconds\n        // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n        const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n        return retryAfterValue * multiplyingFactor; // in milli-seconds\n      }\n    }\n\n    // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n    const retryAfterHeader = response.headers.get(RetryAfterHeader);\n    if (!retryAfterHeader) return;\n\n    const date = Date.parse(retryAfterHeader);\n    const diff = date - Date.now();\n    // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n    return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response?: PipelineResponse): boolean {\n  return Number.isFinite(getRetryAfterInMs(response));\n}\n\nexport function throttlingRetryStrategy(): RetryStrategy {\n  return {\n    name: \"throttlingRetryStrategy\",\n    retry({ response }) {\n      const retryAfterInMs = getRetryAfterInMs(response);\n      if (!Number.isFinite(retryAfterInMs)) {\n        return { skipStrategy: true };\n      }\n      return {\n        retryAfterInMs,\n      };\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\nimport { calculateRetryDelay } from \"../util/delay.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(\n  options: {\n    /**\n     * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n     * (1 second.) The delay increases exponentially with each retry up to a maximum\n     * specified by maxRetryDelayInMs.\n     */\n    retryDelayInMs?: number;\n\n    /**\n     * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n     * to 64000 (64 seconds).\n     */\n    maxRetryDelayInMs?: number;\n\n    /**\n     * If true it won't retry if it received a system error.\n     */\n    ignoreSystemErrors?: boolean;\n\n    /**\n     * If true it won't retry if it received a non-fatal HTTP status code.\n     */\n    ignoreHttpStatusCodes?: boolean;\n  } = {},\n): RetryStrategy {\n  const retryInterval = options.retryDelayInMs ?? DEFAULT_CLIENT_RETRY_INTERVAL;\n  const maxRetryInterval = options.maxRetryDelayInMs ?? DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n\n  return {\n    name: \"exponentialRetryStrategy\",\n    retry({ retryCount, response, responseError }) {\n      const matchedSystemError = isSystemError(responseError);\n      const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n\n      const isExponential = isExponentialRetryResponse(response);\n      const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n      const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n\n      if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n        return { skipStrategy: true };\n      }\n\n      if (responseError && !matchedSystemError && !isExponential) {\n        return { errorToThrow: responseError };\n      }\n\n      return calculateRetryDelay(retryCount, {\n        retryDelayInMs: retryInterval,\n        maxRetryDelayInMs: maxRetryInterval,\n      });\n    },\n  };\n}\n\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response?: PipelineResponse): boolean {\n  return Boolean(\n    response &&\n      response.status !== undefined &&\n      (response.status >= 500 || response.status === 408) &&\n      response.status !== 501 &&\n      response.status !== 505,\n  );\n}\n\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err?: RestError): boolean {\n  if (!err) {\n    return false;\n  }\n  return (\n    err.code === \"ETIMEDOUT\" ||\n    err.code === \"ESOCKETTIMEDOUT\" ||\n    err.code === \"ECONNREFUSED\" ||\n    err.code === \"ECONNRESET\" ||\n    err.code === \"ENOENT\" ||\n    err.code === \"ENOTFOUND\"\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { delay } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"../retryStrategies/retryStrategy.js\";\nimport type { RestError } from \"../restError.js\";\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport type { TypeSpecRuntimeLogger } from \"../logger/logger.js\";\nimport { createClientLogger } from \"../logger/logger.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nconst retryPolicyLogger = createClientLogger(\"ts-http-runtime retryPolicy\");\n\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: TypeSpecRuntimeLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  const logger = options.logger || retryPolicyLogger;\n  return {\n    name: retryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let response: PipelineResponse | undefined;\n      let responseError: RestError | undefined;\n      let retryCount = -1;\n\n      retryRequest: while (true) {\n        retryCount += 1;\n        response = undefined;\n        responseError = undefined;\n\n        try {\n          logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n          response = await next(request);\n          logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n        } catch (e: any) {\n          logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n\n          // RestErrors are valid targets for the retry strategies.\n          // If none of the retry strategies can work with them, they will be thrown later in this policy.\n          // If the received error is not a RestError, it is immediately thrown.\n          responseError = e as RestError;\n          if (!e || responseError.name !== \"RestError\") {\n            throw e;\n          }\n\n          response = responseError.response;\n        }\n\n        if (request.abortSignal?.aborted) {\n          logger.error(`Retry ${retryCount}: Request aborted.`);\n          const abortError = new AbortError();\n          throw abortError;\n        }\n\n        if (retryCount >= (options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT)) {\n          logger.info(\n            `Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`,\n          );\n          if (responseError) {\n            throw responseError;\n          } else if (response) {\n            return response;\n          } else {\n            throw new Error(\"Maximum retries reached with no response or error to throw\");\n          }\n        }\n\n        logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n\n        strategiesLoop: for (const strategy of strategies) {\n          const strategyLogger = strategy.logger || logger;\n          strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n\n          const modifiers = strategy.retry({\n            retryCount,\n            response,\n            responseError,\n          });\n\n          if (modifiers.skipStrategy) {\n            strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n            continue strategiesLoop;\n          }\n\n          const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n\n          if (errorToThrow) {\n            strategyLogger.error(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`,\n              errorToThrow,\n            );\n            throw errorToThrow;\n          }\n\n          if (retryAfterInMs || retryAfterInMs === 0) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`,\n            );\n            await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n            continue retryRequest;\n          }\n\n          if (redirectTo) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`,\n            );\n            request.url = redirectTo;\n            continue retryRequest;\n          }\n        }\n\n        if (responseError) {\n          logger.info(\n            `None of the retry strategies could work with the received error. Throwing it.`,\n          );\n          throw responseError;\n        }\n        if (response) {\n          logger.info(\n            `None of the retry strategies could work with the received response. Returning it.`,\n          );\n          return response;\n        }\n\n        // If all the retries skip and there's no response,\n        // we're still in the retry loop, so a new request will be sent\n        // until `maxRetries` is reached.\n      }\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return {\n    name: defaultRetryPolicyName,\n    sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    }).sendRequest,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ninterface Window {\n  document: unknown;\n}\n\ninterface DedicatedWorkerGlobalScope {\n  constructor: {\n    name: string;\n  };\n\n  importScripts: (...paths: string[]) => void;\n}\n\ninterface Navigator {\n  product: string;\n}\n\ninterface DenoGlobal {\n  version: {\n    deno: string;\n  };\n}\n\ninterface BunGlobal {\n  version: string;\n}\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\ndeclare const window: Window;\ndeclare const self: DedicatedWorkerGlobalScope;\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike =\n  typeof globalThis.process !== \"undefined\" &&\n  Boolean(globalThis.process.version) &&\n  Boolean(globalThis.process.versions?.node);\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport type {\n  BodyPart,\n  FormDataMap,\n  FormDataValue,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\nfunction formDataToFormDataMap(formData: FormData): FormDataMap {\n  const formDataMap: FormDataMap = {};\n  for (const [key, value] of formData.entries()) {\n    formDataMap[key] ??= [];\n    (formDataMap[key] as FormDataValue[]).push(value);\n  }\n  return formDataMap;\n}\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n        request.formData = formDataToFormDataMap(request.body);\n        request.body = undefined;\n      }\n\n      if (request.formData) {\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = wwwFormUrlEncode(request.formData);\n        } else {\n          await prepareFormData(request.formData, request);\n        }\n\n        request.formData = undefined;\n      }\n      return next(request);\n    },\n  };\n}\n\nfunction wwwFormUrlEncode(formData: FormDataMap): string {\n  const urlSearchParams = new URLSearchParams();\n  for (const [key, value] of Object.entries(formData)) {\n    if (Array.isArray(value)) {\n      for (const subValue of value) {\n        urlSearchParams.append(key, subValue.toString());\n      }\n    } else {\n      urlSearchParams.append(key, value.toString());\n    }\n  }\n  return urlSearchParams.toString();\n}\n\nasync function prepareFormData(formData: FormDataMap, request: PipelineRequest): Promise<void> {\n  // validate content type (multipart/form-data)\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n    // content type is specified and is not multipart/form-data. Exit.\n    return;\n  }\n\n  request.headers.set(\"Content-Type\", contentType ?? \"multipart/form-data\");\n\n  // set body to MultipartRequestBody using content from FormDataMap\n  const parts: BodyPart[] = [];\n\n  for (const [fieldName, values] of Object.entries(formData)) {\n    for (const value of Array.isArray(values) ? values : [values]) {\n      if (typeof value === \"string\") {\n        parts.push({\n          headers: createHttpHeaders({\n            \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n          }),\n          body: stringToUint8Array(value, \"utf-8\"),\n        });\n      } else if (value === undefined || value === null || typeof value !== \"object\") {\n        throw new Error(\n          `Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`,\n        );\n      } else {\n        // using || instead of ?? here since if value.name is empty we should create a file name\n        const fileName = (value as File).name || \"blob\";\n        const headers = createHttpHeaders();\n        headers.set(\n          \"Content-Disposition\",\n          `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`,\n        );\n\n        // again, || is used since an empty value.type means the content type is unset\n        headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n\n        parts.push({\n          headers,\n          body: value,\n        });\n      }\n    }\n  }\n  request.multipartBody = { parts };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type * as http from \"http\";\nimport type * as https from \"https\";\nimport { HttpsProxyAgent } from \"https-proxy-agent\";\nimport { HttpProxyAgent } from \"http-proxy-agent\";\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  ProxySettings,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger } from \"../log.js\";\n\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = \"proxyPolicy\";\n\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nexport const globalNoProxyList: string[] = [];\nlet noProxyListLoaded: boolean = false;\n\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap: Map<string, boolean> = new Map();\n\nfunction getEnvironmentValue(name: string): string | undefined {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n\nfunction loadEnvironmentProxyValue(): string | undefined {\n  if (!process) {\n    return undefined;\n  }\n\n  const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n  const allProxy = getEnvironmentValue(ALL_PROXY);\n  const httpProxy = getEnvironmentValue(HTTP_PROXY);\n\n  return httpsProxy || allProxy || httpProxy;\n}\n\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(\n  uri: string,\n  noProxyList: string[],\n  bypassedMap?: Map<string, boolean>,\n): boolean | undefined {\n  if (noProxyList.length === 0) {\n    return false;\n  }\n  const host = new URL(uri).hostname;\n  if (bypassedMap?.has(host)) {\n    return bypassedMap.get(host);\n  }\n  let isBypassedFlag = false;\n  for (const pattern of noProxyList) {\n    if (pattern[0] === \".\") {\n      // This should match either domain it self or any subdomain or host\n      // .foo.com will match foo.com it self or *.foo.com\n      if (host.endsWith(pattern)) {\n        isBypassedFlag = true;\n      } else {\n        if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n          isBypassedFlag = true;\n        }\n      }\n    } else {\n      if (host === pattern) {\n        isBypassedFlag = true;\n      }\n    }\n  }\n  bypassedMap?.set(host, isBypassedFlag);\n  return isBypassedFlag;\n}\n\nexport function loadNoProxy(): string[] {\n  const noProxy = getEnvironmentValue(NO_PROXY);\n  noProxyListLoaded = true;\n  if (noProxy) {\n    return noProxy\n      .split(\",\")\n      .map((item) => item.trim())\n      .filter((item) => item.length);\n  }\n\n  return [];\n}\n\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  if (!proxyUrl) {\n    proxyUrl = loadEnvironmentProxyValue();\n    if (!proxyUrl) {\n      return undefined;\n    }\n  }\n\n  const parsedUrl = new URL(proxyUrl);\n  const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n  return {\n    host: schema + parsedUrl.hostname,\n    port: Number.parseInt(parsedUrl.port || \"80\"),\n    username: parsedUrl.username,\n    password: parsedUrl.password,\n  };\n}\n\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal(): URL | undefined {\n  const envProxy = loadEnvironmentProxyValue();\n  return envProxy ? new URL(envProxy) : undefined;\n}\n\nfunction getUrlFromProxySettings(settings: ProxySettings): URL {\n  let parsedProxyUrl: URL;\n  try {\n    parsedProxyUrl = new URL(settings.host);\n  } catch {\n    throw new Error(\n      `Expecting a valid host string in proxy settings, but found \"${settings.host}\".`,\n    );\n  }\n\n  parsedProxyUrl.port = String(settings.port);\n  if (settings.username) {\n    parsedProxyUrl.username = settings.username;\n  }\n  if (settings.password) {\n    parsedProxyUrl.password = settings.password;\n  }\n\n  return parsedProxyUrl;\n}\n\nfunction setProxyAgentOnRequest(\n  request: PipelineRequest,\n  cachedAgents: CachedAgents,\n  proxyUrl: URL,\n): void {\n  // Custom Agent should take precedence so if one is present\n  // we should skip to avoid overwriting it.\n  if (request.agent) {\n    return;\n  }\n\n  const url = new URL(request.url);\n\n  const isInsecure = url.protocol !== \"https:\";\n\n  if (request.tlsSettings) {\n    logger.warning(\n      \"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\",\n    );\n  }\n\n  const headers = request.headers.toJSON();\n\n  if (isInsecure) {\n    if (!cachedAgents.httpProxyAgent) {\n      cachedAgents.httpProxyAgent = new HttpProxyAgent(proxyUrl, { headers });\n    }\n    request.agent = cachedAgents.httpProxyAgent;\n  } else {\n    if (!cachedAgents.httpsProxyAgent) {\n      cachedAgents.httpsProxyAgent = new HttpsProxyAgent(proxyUrl, { headers });\n    }\n    request.agent = cachedAgents.httpsProxyAgent;\n  }\n}\n\ninterface CachedAgents {\n  httpsProxyAgent?: https.Agent;\n  httpProxyAgent?: http.Agent;\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  },\n): PipelinePolicy {\n  if (!noProxyListLoaded) {\n    globalNoProxyList.push(...loadNoProxy());\n  }\n\n  const defaultProxy = proxySettings\n    ? getUrlFromProxySettings(proxySettings)\n    : getDefaultProxySettingsInternal();\n\n  const cachedAgents: CachedAgents = {};\n\n  return {\n    name: proxyPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (\n        !request.proxySettings &&\n        defaultProxy &&\n        !isBypassed(\n          request.url,\n          options?.customNoProxyList ?? globalNoProxyList,\n          options?.customNoProxyList ? undefined : globalBypassedMap,\n        )\n      ) {\n        setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n      } else if (request.proxySettings) {\n        setProxyAgentOnRequest(\n          request,\n          cachedAgents,\n          getUrlFromProxySettings(request.proxySettings),\n        );\n      }\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = \"agentPolicy\";\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return {\n    name: agentPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define an agent on the request, honor it over the client level one\n      if (!req.agent) {\n        req.agent = agent;\n      }\n      return next(req);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return {\n    name: tlsPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define a request tlsSettings, honor those over the client level one\n      if (!req.tlsSettings) {\n        req.tlsSettings = tlsSettings;\n      }\n      return next(req);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\nexport function isWebReadableStream(x: unknown): x is ReadableStream {\n  return Boolean(\n    x &&\n      typeof (x as ReadableStream).getReader === \"function\" &&\n      typeof (x as ReadableStream).tee === \"function\",\n  );\n}\n\nexport function isBinaryBody(\n  body: unknown,\n): body is\n  | Uint8Array\n  | NodeJS.ReadableStream\n  | ReadableStream<Uint8Array>\n  | (() => NodeJS.ReadableStream)\n  | (() => ReadableStream<Uint8Array>)\n  | Blob {\n  return (\n    body !== undefined &&\n    (body instanceof Uint8Array ||\n      isReadableStream(body) ||\n      typeof body === \"function\" ||\n      body instanceof Blob)\n  );\n}\n\nexport function isReadableStream(x: unknown): x is ReadableStream | NodeJS.ReadableStream {\n  return isNodeReadableStream(x) || isWebReadableStream(x);\n}\n\nexport function isBlob(x: unknown): x is Blob {\n  return typeof (x as Blob).stream === \"function\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Readable } from \"stream\";\nimport type { ReadableStream as AsyncIterableReadableStream } from \"stream/web\";\nimport { isBlob } from \"./typeGuards.js\";\n\nasync function* streamAsyncIterator(\n  this: ReadableStream<Uint8Array>,\n): AsyncIterableIterator<Uint8Array> {\n  const reader = this.getReader();\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nfunction makeAsyncIterable<T>(webStream: any): asserts webStream is AsyncIterableReadableStream<T> {\n  if (!webStream[Symbol.asyncIterator]) {\n    webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n  }\n\n  if (!webStream.values) {\n    webStream.values = streamAsyncIterator.bind(webStream);\n  }\n}\n\nfunction ensureNodeStream(\n  stream: ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n): NodeJS.ReadableStream {\n  if (stream instanceof ReadableStream) {\n    makeAsyncIterable<Uint8Array>(stream);\n    return Readable.fromWeb(stream);\n  } else {\n    return stream;\n  }\n}\n\nfunction toStream(\n  source: ReadableStream<Uint8Array> | NodeJS.ReadableStream | Uint8Array | Blob,\n): NodeJS.ReadableStream {\n  if (source instanceof Uint8Array) {\n    return Readable.from(Buffer.from(source));\n  } else if (isBlob(source)) {\n    return ensureNodeStream(source.stream());\n  } else {\n    return ensureNodeStream(source);\n  }\n}\n\n/**\n * Accepted binary data types for concat\n *\n * @internal\n */\nexport type ConcatSource = ReadableStream<Uint8Array> | NodeJS.ReadableStream | Uint8Array | Blob;\n\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(\n  sources: (ConcatSource | (() => ConcatSource))[],\n): Promise<(() => NodeJS.ReadableStream) | Blob> {\n  return function () {\n    const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n\n    return Readable.from(\n      (async function* () {\n        for (const stream of streams as NodeJS.ReadableStream[]) {\n          for await (const chunk of stream) {\n            yield chunk;\n          }\n        }\n      })(),\n    );\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BodyPart, HttpHeaders, PipelineRequest, PipelineResponse } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\nimport { randomUUID } from \"../util/uuidUtils.js\";\nimport { concat } from \"../util/concat.js\";\n\nfunction generateBoundary(): string {\n  return `----AzSDKFormBoundary${randomUUID()}`;\n}\n\nfunction encodeHeaders(headers: HttpHeaders): string {\n  let result = \"\";\n  for (const [key, value] of headers) {\n    result += `${key}: ${value}\\r\\n`;\n  }\n  return result;\n}\n\nfunction getLength(\n  source:\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream,\n): number | undefined {\n  if (source instanceof Uint8Array) {\n    return source.byteLength;\n  } else if (isBlob(source)) {\n    // if was created using createFile then -1 means we have an unknown size\n    return source.size === -1 ? undefined : source.size;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getTotalLength(\n  sources: (\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream\n  )[],\n): number | undefined {\n  let total = 0;\n  for (const source of sources) {\n    const partLength = getLength(source);\n    if (partLength === undefined) {\n      return undefined;\n    } else {\n      total += partLength;\n    }\n  }\n  return total;\n}\n\nasync function buildRequestBody(\n  request: PipelineRequest,\n  parts: BodyPart[],\n  boundary: string,\n): Promise<void> {\n  const sources = [\n    stringToUint8Array(`--${boundary}`, \"utf-8\"),\n    ...parts.flatMap((part) => [\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      part.body,\n      stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n    ]),\n    stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n  ];\n\n  const contentLength = getTotalLength(sources);\n  if (contentLength) {\n    request.headers.set(\"Content-Length\", contentLength);\n  }\n\n  request.body = await concat(sources);\n}\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\n\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`,\n);\n\nfunction assertValidBoundary(boundary: string): void {\n  if (boundary.length > maxBoundaryLength) {\n    throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n  }\n\n  if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n    throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n  }\n}\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  return {\n    name: multipartPolicyName,\n    async sendRequest(request, next): Promise<PipelineResponse> {\n      if (!request.multipartBody) {\n        return next(request);\n      }\n\n      if (request.body) {\n        throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n      }\n\n      let boundary = request.multipartBody.boundary;\n\n      const contentTypeHeader = request.headers.get(\"Content-Type\") ?? \"multipart/mixed\";\n      const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n      if (!parsedHeader) {\n        throw new Error(\n          `Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`,\n        );\n      }\n\n      const [, contentType, parsedBoundary] = parsedHeader;\n      if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n        throw new Error(\n          `Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`,\n        );\n      }\n\n      boundary ??= parsedBoundary;\n      if (boundary) {\n        assertValidBoundary(boundary);\n      } else {\n        boundary = generateBoundary();\n      }\n      request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n      await buildRequestBody(request, request.multipartBody.parts, boundary);\n\n      request.multipartBody = undefined;\n\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type LogPolicyOptions, logPolicy } from \"./policies/logPolicy.js\";\nimport { type Pipeline, createEmptyPipeline } from \"./pipeline.js\";\nimport type { Agent, PipelineRetryOptions, ProxySettings, TlsSettings } from \"./interfaces.js\";\nimport { type RedirectPolicyOptions, redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { type UserAgentPolicyOptions, userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"./util/checkEnvironment.js\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\n\n/**\n * Defines options that are used to configure the HTTP pipeline for\n * an SDK client.\n */\nexport interface PipelineOptions {\n  /**\n   * Options that control how to retry failed requests.\n   */\n  retryOptions?: PipelineRetryOptions;\n\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxySettings;\n\n  /** Options for configuring Agent instance for outgoing requests */\n  agent?: Agent;\n\n  /** Options for configuring TLS authentication */\n  tlsOptions?: TlsSettings;\n\n  /**\n   * Options for how redirect responses are handled.\n   */\n  redirectOptions?: RedirectPolicyOptions;\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentPolicyOptions;\n\n  /**\n   * Options for setting common telemetry and tracing info to outgoing requests.\n   */\n  telemetryOptions?: TelemetryOptions;\n}\n\n/**\n * Defines options that are used to configure common telemetry and tracing info\n */\nexport interface TelemetryOptions {\n  /**\n   * The name of the header to pass the request ID to.\n   */\n  clientRequestIdHeaderName?: string;\n}\n\n/**\n * Defines options that are used to configure internal options of\n * the HTTP pipeline for an SDK client.\n */\nexport interface InternalPipelineOptions extends PipelineOptions {\n  /**\n   * Options to configure request/response logging.\n   */\n  loggingOptions?: LogPolicyOptions;\n}\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options: InternalPipelineOptions): Pipeline {\n  const pipeline = createEmptyPipeline();\n\n  if (isNodeLike) {\n    if (options.agent) {\n      pipeline.addPolicy(agentPolicy(options.agent));\n    }\n    if (options.tlsOptions) {\n      pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n    }\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  // The multipart policy is added after policies with no phase, so that\n  // policies can be added between it and formDataPolicy to modify\n  // properties (e.g., making the boundary constant in recorded tests).\n  pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n  if (isNodeLike) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n  }\n  pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n\n  return pipeline;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { ClientOptions } from \"./common.js\";\n\nexport const apiVersionPolicyName = \"ApiVersionPolicy\";\n\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nexport function apiVersionPolicy(options: ClientOptions): PipelinePolicy {\n  return {\n    name: apiVersionPolicyName,\n    sendRequest: (req, next) => {\n      // Use the apiVesion defined in request url directly\n      // Append one if there is no apiVesion and we have one at client options\n      const url = new URL(req.url);\n      if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n        req.url = `${req.url}${\n          Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"\n        }api-version=${options.apiVersion}`;\n      }\n\n      return next(req);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OAuth2Flow } from \"./oauth2Flows.js\";\n\n/**\n * Options used when creating and sending get OAuth 2 requests for this operation.\n */\nexport interface GetOAuth2TokenOptions {\n  /** Abort signal for the request */\n  abortSignal?: AbortSignal;\n}\n\n/**\n * Options used when creating and sending get bearer token requests for this operation.\n */\nexport interface GetBearerTokenOptions {\n  /** Abort signal for the request */\n  abortSignal?: AbortSignal;\n}\n\n/**\n * Credential for OAuth2 authentication flows.\n */\nexport interface OAuth2TokenCredential<TFlows extends OAuth2Flow> {\n  /**\n   * Gets an OAuth2 token for the specified flows.\n   * @param flows - The OAuth2 flows to use.\n   * @param options - Options for the request.\n   * @returns - a valid access token which was obtained through one of the flows specified in `flows`.\n   */\n  getOAuth2Token(flows: TFlows[], options?: GetOAuth2TokenOptions): Promise<string>;\n}\n\n/**\n * Credential for Bearer token authentication.\n */\nexport interface BearerTokenCredential {\n  /**\n   * Gets a Bearer token for the specified flows.\n   * @param options - Options for the request.\n   * @returns - a valid access token.\n   */\n  getBearerToken(options?: GetBearerTokenOptions): Promise<string>;\n}\n\n/**\n * Credential for HTTP Basic authentication.\n * Provides username and password for basic authentication headers.\n */\nexport interface BasicCredential {\n  /** The username for basic authentication. */\n  username: string;\n  /** The password for basic authentication. */\n  password: string;\n}\n\n/**\n * Credential for API Key authentication.\n * Provides an API key that will be used in the request headers.\n */\nexport interface ApiKeyCredential {\n  /** The API key for authentication. */\n  key: string;\n}\n\n/**\n * Union type of all supported authentication credentials.\n */\nexport type ClientCredential =\n  | OAuth2TokenCredential<OAuth2Flow>\n  | BearerTokenCredential\n  | BasicCredential\n  | ApiKeyCredential;\n\n/**\n * Type guard to check if a credential is an OAuth2 token credential.\n */\nexport function isOAuth2TokenCredential(\n  credential: ClientCredential,\n): credential is OAuth2TokenCredential<OAuth2Flow> {\n  return \"getOAuth2Token\" in credential;\n}\n\n/**\n * Type guard to check if a credential is a Bearer token credential.\n */\nexport function isBearerTokenCredential(\n  credential: ClientCredential,\n): credential is BearerTokenCredential {\n  return \"getBearerToken\" in credential;\n}\n\n/**\n * Type guard to check if a credential is a Basic auth credential.\n */\nexport function isBasicCredential(credential: ClientCredential): credential is BasicCredential {\n  return \"username\" in credential && \"password\" in credential;\n}\n\n/**\n * Type guard to check if a credential is an API key credential.\n */\nexport function isApiKeyCredential(credential: ClientCredential): credential is ApiKeyCredential {\n  return \"key\" in credential;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest } from \"../../interfaces.js\";\nimport { logger } from \"../../log.js\";\n\n// Ensure the warining is only emitted once\nlet insecureConnectionWarningEmmitted = false;\n\n/**\n * Checks if the request is allowed to be sent over an insecure connection.\n *\n * A request is allowed to be sent over an insecure connection when:\n * - The `allowInsecureConnection` option is set to `true`.\n * - The request has the `allowInsecureConnection` property set to `true`.\n * - The request is being sent to `localhost` or `127.0.0.1`\n */\nfunction allowInsecureConnection(\n  request: PipelineRequest,\n  options: { allowInsecureConnection?: boolean },\n): boolean {\n  if (options.allowInsecureConnection && request.allowInsecureConnection) {\n    const url = new URL(request.url);\n    if (url.hostname === \"localhost\" || url.hostname === \"127.0.0.1\") {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Logs a warning about sending a token over an insecure connection.\n *\n * This function will emit a node warning once, but log the warning every time.\n */\nfunction emitInsecureConnectionWarning(): void {\n  const warning = \"Sending token over insecure transport. Assume any token issued is compromised.\";\n\n  logger.warning(warning);\n\n  if (typeof process?.emitWarning === \"function\" && !insecureConnectionWarningEmmitted) {\n    insecureConnectionWarningEmmitted = true;\n    process.emitWarning(warning);\n  }\n}\n\n/**\n * Ensures that authentication is only allowed over HTTPS unless explicitly allowed.\n * Throws an error if the connection is not secure and not explicitly allowed.\n */\nexport function ensureSecureConnection(\n  request: PipelineRequest,\n  options: { allowInsecureConnection?: boolean },\n): void {\n  if (!request.url.toLowerCase().startsWith(\"https://\")) {\n    if (allowInsecureConnection(request, options)) {\n      emitInsecureConnectionWarning();\n    } else {\n      throw new Error(\n        \"Authentication is not permitted for non-TLS protected (non-https) URLs when allowInsecureConnection is false.\",\n      );\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ApiKeyCredential } from \"../../auth/credentials.js\";\nimport type { AuthScheme } from \"../../auth/schemes.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../../interfaces.js\";\nimport type { PipelinePolicy } from \"../../pipeline.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n\n/**\n * Name of the API Key Authentication Policy\n */\nexport const apiKeyAuthenticationPolicyName = \"apiKeyAuthenticationPolicy\";\n\n/**\n * Options for configuring the API key authentication policy\n */\nexport interface ApiKeyAuthenticationPolicyOptions {\n  /**\n   * The credential used to authenticate requests\n   */\n  credential: ApiKeyCredential;\n  /**\n   * Optional authentication schemes to use. If `authSchemes` is provided in both request and policy options, the request options will take precedence.\n   */\n  authSchemes?: AuthScheme[];\n  /**\n   * Allows for connecting to HTTP endpoints instead of enforcing HTTPS.\n   * CAUTION: Never use this option in production.\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * Gets a pipeline policy that adds API key authentication to requests\n */\nexport function apiKeyAuthenticationPolicy(\n  options: ApiKeyAuthenticationPolicyOptions,\n): PipelinePolicy {\n  return {\n    name: apiKeyAuthenticationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n      ensureSecureConnection(request, options);\n\n      const scheme = (request.authSchemes ?? options.authSchemes)?.find((x) => x.kind === \"apiKey\");\n\n      // Skip adding authentication header if no API key authentication scheme is found\n      if (!scheme) {\n        return next(request);\n      }\n      if (scheme.apiKeyLocation !== \"header\") {\n        throw new Error(`Unsupported API key location: ${scheme.apiKeyLocation}`);\n      }\n\n      request.headers.set(scheme.name, options.credential.key);\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BasicCredential } from \"../../auth/credentials.js\";\nimport type { AuthScheme } from \"../../auth/schemes.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../../interfaces.js\";\nimport type { PipelinePolicy } from \"../../pipeline.js\";\nimport { stringToUint8Array, uint8ArrayToString } from \"../../util/bytesEncoding.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n\n/**\n * Name of the Basic Authentication Policy\n */\nexport const basicAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n\n/**\n * Options for configuring the basic authentication policy\n */\nexport interface BasicAuthenticationPolicyOptions {\n  /**\n   * The credential used to authenticate requests\n   */\n  credential: BasicCredential;\n  /**\n   * Optional authentication schemes to use. If not provided, schemes from the request will be used.\n   */\n  authSchemes?: AuthScheme[];\n  /**\n   * Allows for connecting to HTTP endpoints instead of enforcing HTTPS.\n   * CAUTION: Never use this option in production.\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * Gets a pipeline policy that adds basic authentication to requests\n */\nexport function basicAuthenticationPolicy(\n  options: BasicAuthenticationPolicyOptions,\n): PipelinePolicy {\n  return {\n    name: basicAuthenticationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n      ensureSecureConnection(request, options);\n\n      const scheme = (request.authSchemes ?? options.authSchemes)?.find(\n        (x) => x.kind === \"http\" && x.scheme === \"basic\",\n      );\n\n      // Skip adding authentication header if no basic authentication scheme is found\n      if (!scheme) {\n        return next(request);\n      }\n\n      const { username, password } = options.credential;\n      const headerValue = uint8ArrayToString(\n        stringToUint8Array(`${username}:${password}`, \"utf-8\"),\n        \"base64\",\n      );\n      request.headers.set(\"Authorization\", `Basic ${headerValue}`);\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BearerTokenCredential } from \"../../auth/credentials.js\";\nimport type { AuthScheme } from \"../../auth/schemes.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../../interfaces.js\";\nimport type { PipelinePolicy } from \"../../pipeline.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n\n/**\n * Name of the Bearer Authentication Policy\n */\nexport const bearerAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n\n/**\n * Options for configuring the bearer authentication policy\n */\nexport interface BearerAuthenticationPolicyOptions {\n  /**\n   * The BearerTokenCredential implementation that can supply the bearer token.\n   */\n  credential: BearerTokenCredential;\n  /**\n   * Optional authentication schemes to use. If not provided, schemes from the request will be used.\n   */\n  authSchemes?: AuthScheme[];\n  /**\n   * Allows for connecting to HTTP endpoints instead of enforcing HTTPS.\n   * CAUTION: Never use this option in production.\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * Gets a pipeline policy that adds bearer token authentication to requests\n */\nexport function bearerAuthenticationPolicy(\n  options: BearerAuthenticationPolicyOptions,\n): PipelinePolicy {\n  return {\n    name: bearerAuthenticationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n      ensureSecureConnection(request, options);\n\n      const scheme = (request.authSchemes ?? options.authSchemes)?.find(\n        (x) => x.kind === \"http\" && x.scheme === \"bearer\",\n      );\n\n      // Skip adding authentication header if no bearer authentication scheme is found\n      if (!scheme) {\n        return next(request);\n      }\n\n      const token = await options.credential.getBearerToken({\n        abortSignal: request.abortSignal,\n      });\n      request.headers.set(\"Authorization\", `Bearer ${token}`);\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OAuth2Flow } from \"../../auth/oauth2Flows.js\";\nimport type { OAuth2TokenCredential } from \"../../auth/credentials.js\";\nimport type { AuthScheme } from \"../../auth/schemes.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../../interfaces.js\";\nimport type { PipelinePolicy } from \"../../pipeline.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n\n/**\n * Name of the OAuth2 Authentication Policy\n */\nexport const oauth2AuthenticationPolicyName = \"oauth2AuthenticationPolicy\";\n\n/**\n * Options for configuring the OAuth2 authentication policy\n */\nexport interface OAuth2AuthenticationPolicyOptions<TFlows extends OAuth2Flow> {\n  /**\n   * The OAuth2TokenCredential implementation that can supply the bearer token.\n   */\n  credential: OAuth2TokenCredential<TFlows>;\n  /**\n   * Optional authentication schemes to use. If not provided, schemes from the request will be used.\n   */\n  authSchemes?: AuthScheme[];\n  /**\n   * Allows for connecting to HTTP endpoints instead of enforcing HTTPS.\n   * CAUTION: Never use this option in production.\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * Gets a pipeline policy that adds authorization header from OAuth2 schemes\n */\nexport function oauth2AuthenticationPolicy<TFlows extends OAuth2Flow>(\n  options: OAuth2AuthenticationPolicyOptions<TFlows>,\n): PipelinePolicy {\n  return {\n    name: oauth2AuthenticationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n      ensureSecureConnection(request, options);\n\n      const scheme = (request.authSchemes ?? options.authSchemes)?.find((x) => x.kind === \"oauth2\");\n\n      // Skip adding authentication header if no OAuth2 authentication scheme is found\n      if (!scheme) {\n        return next(request);\n      }\n      const token = await options.credential.getOAuth2Token(scheme.flows as TFlows[], {\n        abortSignal: request.abortSignal,\n      });\n      request.headers.set(\"Authorization\", `Bearer ${token}`);\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"../interfaces.js\";\nimport type { Pipeline } from \"../pipeline.js\";\nimport { createDefaultHttpClient } from \"../defaultHttpClient.js\";\nimport { createPipelineFromOptions } from \"../createPipelineFromOptions.js\";\nimport type { ClientOptions } from \"./common.js\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy.js\";\nimport {\n  isApiKeyCredential,\n  isBasicCredential,\n  isBearerTokenCredential,\n  isOAuth2TokenCredential,\n} from \"../auth/credentials.js\";\nimport { apiKeyAuthenticationPolicy } from \"../policies/auth/apiKeyAuthenticationPolicy.js\";\nimport { basicAuthenticationPolicy } from \"../policies/auth/basicAuthenticationPolicy.js\";\nimport { bearerAuthenticationPolicy } from \"../policies/auth/bearerAuthenticationPolicy.js\";\nimport { oauth2AuthenticationPolicy } from \"../policies/auth/oauth2AuthenticationPolicy.js\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(options: ClientOptions = {}): Pipeline {\n  const pipeline = createPipelineFromOptions(options);\n\n  pipeline.addPolicy(apiVersionPolicy(options));\n\n  const { credential, authSchemes, allowInsecureConnection } = options;\n  if (credential) {\n    if (isApiKeyCredential(credential)) {\n      pipeline.addPolicy(\n        apiKeyAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }),\n      );\n    } else if (isBasicCredential(credential)) {\n      pipeline.addPolicy(\n        basicAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }),\n      );\n    } else if (isBearerTokenCredential(credential)) {\n      pipeline.addPolicy(\n        bearerAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }),\n      );\n    } else if (isOAuth2TokenCredential(credential)) {\n      pipeline.addPolicy(\n        oauth2AuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }),\n      );\n    }\n  }\n\n  return pipeline;\n}\n\nexport function getCachedDefaultHttpsClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BodyPart, MultipartRequestBody, RawHttpHeadersInput } from \"../interfaces.js\";\nimport { RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBinaryBody } from \"../util/typeGuards.js\";\n\n/**\n * Describes a single part in a multipart body.\n */\nexport interface PartDescriptor {\n  /**\n   * Content type of this part. If set, this value will be used to set the Content-Type MIME header for this part, although explicitly\n   * setting the Content-Type header in the headers bag will override this value. If set to `null`, no content type will be inferred from\n   * the body field. Otherwise, the value of the Content-Type MIME header will be inferred based on the type of the body.\n   */\n  contentType?: string | null;\n\n  /**\n   * The disposition type of this part (for example, \"form-data\" for parts making up a multipart/form-data request). If set, this value\n   * will be used to set the Content-Disposition MIME header for this part, in addition to the `name` and `filename` properties.\n   * If the `name` or `filename` properties are set while `dispositionType` is left undefined, `dispositionType` will default to \"form-data\".\n   *\n   * Explicitly setting the Content-Disposition header in the headers bag will override this value.\n   */\n  dispositionType?: string;\n\n  /**\n   * The field name associated with this part. This value will be used to construct the Content-Disposition header,\n   * along with the `dispositionType` and `filename` properties, if the header has not been set in the `headers` bag.\n   */\n  name?: string;\n\n  /**\n   * The file name of the content if it is a file. This value will be used to construct the Content-Disposition header,\n   * along with the `dispositionType` and `name` properties, if the header has not been set in the `headers` bag.\n   */\n  filename?: string;\n\n  /**\n   * The multipart headers for this part of the multipart body. Values of the Content-Type and Content-Disposition headers set in the headers bag\n   * will take precedence over those computed from the request body or the contentType, dispositionType, name, and filename fields on this object.\n   */\n  headers?: RawHttpHeadersInput;\n\n  /**\n   * The body of this part of the multipart request.\n   */\n  body?: unknown;\n}\n\ntype MultipartBodyType = BodyPart[\"body\"];\n\ntype HeaderValue = RawHttpHeadersInput[string];\n\n/**\n * Get value of a header in the part descriptor ignoring case\n */\nfunction getHeaderValue(descriptor: PartDescriptor, headerName: string): HeaderValue | undefined {\n  if (descriptor.headers) {\n    const actualHeaderName = Object.keys(descriptor.headers).find(\n      (x) => x.toLowerCase() === headerName.toLowerCase(),\n    );\n    if (actualHeaderName) {\n      return descriptor.headers[actualHeaderName];\n    }\n  }\n\n  return undefined;\n}\n\nfunction getPartContentType(descriptor: PartDescriptor): HeaderValue | undefined {\n  const contentTypeHeader = getHeaderValue(descriptor, \"content-type\");\n  if (contentTypeHeader) {\n    return contentTypeHeader;\n  }\n\n  // Special value of null means content type is to be omitted\n  if (descriptor.contentType === null) {\n    return undefined;\n  }\n\n  if (descriptor.contentType) {\n    return descriptor.contentType;\n  }\n\n  const { body } = descriptor;\n\n  if (body === null || body === undefined) {\n    return undefined;\n  }\n\n  if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n    return \"text/plain; charset=UTF-8\";\n  }\n\n  if (body instanceof Blob) {\n    return body.type || \"application/octet-stream\";\n  }\n\n  if (isBinaryBody(body)) {\n    return \"application/octet-stream\";\n  }\n\n  // arbitrary non-text object -> generic JSON content type by default. We will try to JSON.stringify the body.\n  return \"application/json\";\n}\n\n/**\n * Enclose value in quotes and escape special characters, for use in the Content-Disposition header\n */\nfunction escapeDispositionField(value: string): string {\n  return JSON.stringify(value);\n}\n\nfunction getContentDisposition(descriptor: PartDescriptor): HeaderValue | undefined {\n  const contentDispositionHeader = getHeaderValue(descriptor, \"content-disposition\");\n  if (contentDispositionHeader) {\n    return contentDispositionHeader;\n  }\n\n  if (\n    descriptor.dispositionType === undefined &&\n    descriptor.name === undefined &&\n    descriptor.filename === undefined\n  ) {\n    return undefined;\n  }\n\n  const dispositionType = descriptor.dispositionType ?? \"form-data\";\n\n  let disposition = dispositionType;\n  if (descriptor.name) {\n    disposition += `; name=${escapeDispositionField(descriptor.name)}`;\n  }\n\n  let filename: string | undefined = undefined;\n  if (descriptor.filename) {\n    filename = descriptor.filename;\n  } else if (typeof File !== \"undefined\" && descriptor.body instanceof File) {\n    const filenameFromFile = (descriptor.body as File).name;\n    if (filenameFromFile !== \"\") {\n      filename = filenameFromFile;\n    }\n  }\n\n  if (filename) {\n    disposition += `; filename=${escapeDispositionField(filename)}`;\n  }\n\n  return disposition;\n}\n\nfunction normalizeBody(body?: unknown, contentType?: HeaderValue): MultipartBodyType {\n  if (body === undefined) {\n    // zero-length body\n    return new Uint8Array([]);\n  }\n\n  // binary and primitives should go straight on the wire regardless of content type\n  if (isBinaryBody(body)) {\n    return body;\n  }\n  if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n    return stringToUint8Array(String(body), \"utf-8\");\n  }\n\n  // stringify objects for JSON-ish content types e.g. application/json, application/merge-patch+json, application/vnd.oci.manifest.v1+json, application.json; charset=UTF-8\n  if (contentType && /application\\/(.+\\+)?json(;.+)?/i.test(String(contentType))) {\n    return stringToUint8Array(JSON.stringify(body), \"utf-8\");\n  }\n\n  throw new RestError(`Unsupported body/content-type combination: ${body}, ${contentType}`);\n}\n\nexport function buildBodyPart(descriptor: PartDescriptor): BodyPart {\n  const contentType = getPartContentType(descriptor);\n  const contentDisposition = getContentDisposition(descriptor);\n  const headers = createHttpHeaders(descriptor.headers ?? {});\n\n  if (contentType) {\n    headers.set(\"content-type\", contentType);\n  }\n  if (contentDisposition) {\n    headers.set(\"content-disposition\", contentDisposition);\n  }\n\n  const body = normalizeBody(descriptor.body, contentType);\n\n  return {\n    headers,\n    body,\n  };\n}\n\nexport function buildMultipartBody(parts: PartDescriptor[]): MultipartRequestBody {\n  return { parts: parts.map(buildBodyPart) };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  HttpClient,\n  HttpMethods,\n  MultipartRequestBody,\n  PipelineRequest,\n  PipelineResponse,\n  RequestBodyType,\n} from \"../interfaces.js\";\nimport { isRestError, RestError } from \"../restError.js\";\nimport type { Pipeline } from \"../pipeline.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport { createPipelineRequest } from \"../pipelineRequest.js\";\nimport { getCachedDefaultHttpsClient } from \"./clientHelpers.js\";\nimport { isReadableStream } from \"../util/typeGuards.js\";\nimport type { HttpResponse, RequestParameters } from \"./common.js\";\nimport type { PartDescriptor } from \"./multipart.js\";\nimport { buildMultipartBody } from \"./multipart.js\";\n\n/**\n * Helper function to send request used by the client\n * @param method - method to use to send the request\n * @param url - url to send the request to\n * @param pipeline - pipeline with the policies to run when sending the request\n * @param options - request options\n * @param customHttpClient - a custom HttpClient to use when making the request\n * @returns returns and HttpResponse\n */\nexport async function sendRequest(\n  method: HttpMethods,\n  url: string,\n  pipeline: Pipeline,\n  options: InternalRequestParameters = {},\n  customHttpClient?: HttpClient,\n): Promise<HttpResponse> {\n  const httpClient = customHttpClient ?? getCachedDefaultHttpsClient();\n  const request = buildPipelineRequest(method, url, options);\n\n  try {\n    const response = await pipeline.sendRequest(httpClient, request);\n    const headers = response.headers.toJSON();\n    const stream = response.readableStreamBody ?? response.browserStreamBody;\n    const parsedBody =\n      options.responseAsStream || stream !== undefined ? undefined : getResponseBody(response);\n    const body = stream ?? parsedBody;\n\n    if (options?.onResponse) {\n      options.onResponse({ ...response, request, rawHeaders: headers, parsedBody });\n    }\n\n    return {\n      request,\n      headers,\n      status: `${response.status}`,\n      body,\n    };\n  } catch (e: unknown) {\n    if (isRestError(e) && e.response && options.onResponse) {\n      const { response } = e;\n      const rawHeaders = response.headers.toJSON();\n      // UNBRANDED DIFFERENCE: onResponse callback does not have a second __legacyError property\n      options?.onResponse({ ...response, request, rawHeaders }, e);\n    }\n\n    throw e;\n  }\n}\n\n/**\n * Function to determine the request content type\n * @param options - request options InternalRequestParameters\n * @returns returns the content-type\n */\nfunction getRequestContentType(options: InternalRequestParameters = {}): string {\n  return (\n    options.contentType ??\n    (options.headers?.[\"content-type\"] as string) ??\n    getContentType(options.body)\n  );\n}\n\n/**\n * Function to determine the content-type of a body\n * this is used if an explicit content-type is not provided\n * @param body - body in the request\n * @returns returns the content-type\n */\nfunction getContentType(body: any): string | undefined {\n  if (ArrayBuffer.isView(body)) {\n    return \"application/octet-stream\";\n  }\n\n  if (typeof body === \"string\") {\n    try {\n      JSON.parse(body);\n      return \"application/json\";\n    } catch (error: any) {\n      // If we fail to parse the body, it is not json\n      return undefined;\n    }\n  }\n  // By default return json\n  return \"application/json\";\n}\n\nexport interface InternalRequestParameters extends RequestParameters {\n  responseAsStream?: boolean;\n}\n\nfunction buildPipelineRequest(\n  method: HttpMethods,\n  url: string,\n  options: InternalRequestParameters = {},\n): PipelineRequest {\n  const requestContentType = getRequestContentType(options);\n  const { body, multipartBody } = getRequestBody(options.body, requestContentType);\n  const hasContent = body !== undefined || multipartBody !== undefined;\n\n  const headers = createHttpHeaders({\n    ...(options.headers ? options.headers : {}),\n    accept: options.accept ?? options.headers?.accept ?? \"application/json\",\n    ...(hasContent &&\n      requestContentType && {\n        \"content-type\": requestContentType,\n      }),\n  });\n\n  return createPipelineRequest({\n    url,\n    method,\n    body,\n    multipartBody,\n    headers,\n    allowInsecureConnection: options.allowInsecureConnection,\n    abortSignal: options.abortSignal,\n    onUploadProgress: options.onUploadProgress,\n    onDownloadProgress: options.onDownloadProgress,\n    timeout: options.timeout,\n    enableBrowserStreams: true,\n    streamResponseStatusCodes: options.responseAsStream\n      ? new Set([Number.POSITIVE_INFINITY])\n      : undefined,\n  });\n}\n\ninterface RequestBody {\n  body?: RequestBodyType;\n  multipartBody?: MultipartRequestBody;\n}\n\n/**\n * Prepares the body before sending the request\n */\nfunction getRequestBody(body?: unknown, contentType: string = \"\"): RequestBody {\n  if (body === undefined) {\n    return { body: undefined };\n  }\n\n  if (typeof FormData !== \"undefined\" && body instanceof FormData) {\n    return { body };\n  }\n\n  if (isReadableStream(body)) {\n    return { body };\n  }\n\n  if (ArrayBuffer.isView(body)) {\n    return { body: body instanceof Uint8Array ? body : JSON.stringify(body) };\n  }\n\n  const firstType = contentType.split(\";\")[0];\n\n  switch (firstType) {\n    case \"application/json\":\n      return { body: JSON.stringify(body) };\n    case \"multipart/form-data\":\n      if (Array.isArray(body)) {\n        return { multipartBody: buildMultipartBody(body as PartDescriptor[]) };\n      }\n      return { body: JSON.stringify(body) };\n    case \"text/plain\":\n      return { body: String(body) };\n    default:\n      if (typeof body === \"string\") {\n        return { body };\n      }\n      return { body: JSON.stringify(body) };\n  }\n}\n\n/**\n * Prepares the response body\n */\nfunction getResponseBody(response: PipelineResponse): RequestBodyType | undefined {\n  // Set the default response type\n  const contentType = response.headers.get(\"content-type\") ?? \"\";\n  const firstType = contentType.split(\";\")[0];\n  const bodyToParse = response.bodyAsText ?? \"\";\n\n  if (firstType === \"text/plain\") {\n    return String(bodyToParse);\n  }\n  // Default to \"application/json\" and fallback to string;\n  try {\n    return bodyToParse ? JSON.parse(bodyToParse) : undefined;\n  } catch (error: any) {\n    // If we were supposed to get a JSON object and failed to\n    // parse, throw a parse error\n    if (firstType === \"application/json\") {\n      throw createParseError(response, error);\n    }\n\n    // We are not sure how to handle the response so we return it as\n    // plain text.\n    return String(bodyToParse);\n  }\n}\n\nfunction createParseError(response: PipelineResponse, err: any): RestError {\n  const msg = `Error \"${err}\" occurred while parsing the response body - ${response.bodyAsText}.`;\n  const errCode = err.code ?? RestError.PARSE_ERROR;\n  return new RestError(msg, {\n    code: errCode,\n    statusCode: response.status,\n    request: response.request,\n    response: response,\n  });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PathParameterWithOptions, RequestParameters } from \"./common.js\";\n\ntype QueryParameterStyle = \"form\" | \"spaceDelimited\" | \"pipeDelimited\";\n\n/**\n * An object that can be passed as a query parameter, allowing for additional options to be set relating to how the parameter is encoded.\n */\ninterface QueryParameterWithOptions {\n  /**\n   * The value of the query parameter.\n   */\n  value: unknown;\n\n  /**\n   * If set to true, value must be an array. Setting this option to true will cause the array to be encoded as multiple query parameters.\n   * Setting it to false will cause the array values to be encoded as a single query parameter, with each value separated by a comma ','.\n   *\n   * For example, with `explode` set to true, a query parameter named \"foo\" with value [\"a\", \"b\", \"c\"] will be encoded as foo=a&foo=b&foo=c.\n   * If `explode` was set to false, the same example would instead be encouded as foo=a,b,c.\n   *\n   * Defaults to false.\n   */\n  explode?: boolean;\n\n  /**\n   * Style for encoding arrays. Three possible values:\n   * - \"form\": array values will be separated by a comma \",\" in the query parameter value.\n   * - \"spaceDelimited\": array values will be separated by a space (\" \", url-encoded to \"%20\").\n   * - \"pipeDelimited\": array values will be separated by a pipe (\"|\").\n   *\n   * Defaults to \"form\".\n   */\n  style?: QueryParameterStyle;\n}\n\nfunction isQueryParameterWithOptions(x: unknown): x is QueryParameterWithOptions {\n  const value = (x as QueryParameterWithOptions).value as any;\n  return (\n    value !== undefined && value.toString !== undefined && typeof value.toString === \"function\"\n  );\n}\n\n/**\n * Builds the request url, filling in query and path parameters\n * @param endpoint - base url which can be a template url\n * @param routePath - path to append to the endpoint\n * @param pathParameters - values of the path parameters\n * @param options - request parameters including query parameters\n * @returns a full url with path and query parameters\n */\nexport function buildRequestUrl(\n  endpoint: string,\n  routePath: string,\n  pathParameters: (string | number | PathParameterWithOptions)[],\n  options: RequestParameters = {},\n): string {\n  if (routePath.startsWith(\"https://\") || routePath.startsWith(\"http://\")) {\n    return routePath;\n  }\n  endpoint = buildBaseUrl(endpoint, options);\n  routePath = buildRoutePath(routePath, pathParameters, options);\n  const requestUrl = appendQueryParams(`${endpoint}/${routePath}`, options);\n  const url = new URL(requestUrl);\n\n  return (\n    url\n      .toString()\n      // Remove double forward slashes\n      .replace(/([^:]\\/)\\/+/g, \"$1\")\n  );\n}\n\nfunction getQueryParamValue(\n  key: string,\n  allowReserved: boolean,\n  style: QueryParameterStyle,\n  param: any,\n): string {\n  let separator: string;\n  if (style === \"pipeDelimited\") {\n    separator = \"|\";\n  } else if (style === \"spaceDelimited\") {\n    separator = \"%20\";\n  } else {\n    separator = \",\";\n  }\n\n  let paramValues: any[];\n  if (Array.isArray(param)) {\n    paramValues = param;\n  } else if (typeof param === \"object\" && param.toString === Object.prototype.toString) {\n    // If the parameter is an object without a custom toString implementation (e.g. a Date),\n    // then we should deconstruct the object into an array [key1, value1, key2, value2, ...].\n    paramValues = Object.entries(param).flat();\n  } else {\n    paramValues = [param];\n  }\n\n  const value = paramValues\n    .map((p) => {\n      if (p === null || p === undefined) {\n        return \"\";\n      }\n\n      if (!p.toString || typeof p.toString !== \"function\") {\n        throw new Error(`Query parameters must be able to be represented as string, ${key} can't`);\n      }\n\n      const rawValue = p.toISOString !== undefined ? p.toISOString() : p.toString();\n      return allowReserved ? rawValue : encodeURIComponent(rawValue);\n    })\n    .join(separator);\n\n  return `${allowReserved ? key : encodeURIComponent(key)}=${value}`;\n}\n\nfunction appendQueryParams(url: string, options: RequestParameters = {}): string {\n  if (!options.queryParameters) {\n    return url;\n  }\n  const parsedUrl = new URL(url);\n  const queryParams = options.queryParameters;\n\n  const paramStrings: string[] = [];\n  for (const key of Object.keys(queryParams)) {\n    const param = queryParams[key] as any;\n    if (param === undefined || param === null) {\n      continue;\n    }\n\n    const hasMetadata = isQueryParameterWithOptions(param);\n    const rawValue = hasMetadata ? param.value : param;\n    const explode = hasMetadata ? (param.explode ?? false) : false;\n    const style = hasMetadata && param.style ? param.style : \"form\";\n\n    if (explode) {\n      if (Array.isArray(rawValue)) {\n        for (const item of rawValue) {\n          paramStrings.push(getQueryParamValue(key, options.skipUrlEncoding ?? false, style, item));\n        }\n      } else if (typeof rawValue === \"object\") {\n        // For object explode, the name of the query parameter is ignored and we use the object key instead\n        for (const [actualKey, value] of Object.entries(rawValue)) {\n          paramStrings.push(\n            getQueryParamValue(actualKey, options.skipUrlEncoding ?? false, style, value),\n          );\n        }\n      } else {\n        // Explode doesn't really make sense for primitives\n        throw new Error(\"explode can only be set to true for objects and arrays\");\n      }\n    } else {\n      paramStrings.push(getQueryParamValue(key, options.skipUrlEncoding ?? false, style, rawValue));\n    }\n  }\n\n  if (parsedUrl.search !== \"\") {\n    parsedUrl.search += \"&\";\n  }\n  parsedUrl.search += paramStrings.join(\"&\");\n  return parsedUrl.toString();\n}\n\nexport function buildBaseUrl(endpoint: string, options: RequestParameters): string {\n  if (!options.pathParameters) {\n    return endpoint;\n  }\n  const pathParams = options.pathParameters;\n  for (const [key, param] of Object.entries(pathParams)) {\n    if (param === undefined || param === null) {\n      throw new Error(`Path parameters ${key} must not be undefined or null`);\n    }\n    if (!param.toString || typeof param.toString !== \"function\") {\n      throw new Error(`Path parameters must be able to be represented as string, ${key} can't`);\n    }\n    let value = param.toISOString !== undefined ? param.toISOString() : String(param);\n    if (!options.skipUrlEncoding) {\n      value = encodeURIComponent(param);\n    }\n    endpoint = replaceAll(endpoint, `{${key}}`, value) ?? \"\";\n  }\n  return endpoint;\n}\n\nfunction buildRoutePath(\n  routePath: string,\n  pathParameters: (string | number | PathParameterWithOptions)[],\n  options: RequestParameters = {},\n): string {\n  for (const pathParam of pathParameters) {\n    const allowReserved = typeof pathParam === \"object\" && (pathParam.allowReserved ?? false);\n    let value = typeof pathParam === \"object\" ? pathParam.value : pathParam;\n\n    if (!options.skipUrlEncoding && !allowReserved) {\n      value = encodeURIComponent(value);\n    }\n\n    routePath = routePath.replace(/\\{[\\w-]+\\}/, String(value));\n  }\n  return routePath;\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string,\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, HttpMethods } from \"../interfaces.js\";\nimport type { Pipeline } from \"../pipeline.js\";\nimport { createDefaultPipeline } from \"./clientHelpers.js\";\nimport type {\n  Client,\n  ClientOptions,\n  HttpBrowserStreamResponse,\n  HttpNodeStreamResponse,\n  RequestParameters,\n  ResourceMethods,\n  StreamableMethod,\n} from \"./common.js\";\nimport { sendRequest } from \"./sendRequest.js\";\nimport { buildRequestUrl } from \"./urlHelpers.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\n\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nexport function getClient(endpoint: string, clientOptions: ClientOptions = {}): Client {\n  const pipeline = clientOptions.pipeline ?? createDefaultPipeline(clientOptions);\n  if (clientOptions.additionalPolicies?.length) {\n    for (const { policy, position } of clientOptions.additionalPolicies) {\n      // Sign happens after Retry and is commonly needed to occur\n      // before policies that intercept post-retry.\n      const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n      pipeline.addPolicy(policy, {\n        afterPhase,\n      });\n    }\n  }\n\n  const { allowInsecureConnection, httpClient } = clientOptions;\n  const endpointUrl = clientOptions.endpoint ?? endpoint;\n  const client = (path: string, ...args: Array<any>): ResourceMethods<StreamableMethod> => {\n    const getUrl = (requestOptions: RequestParameters): string =>\n      buildRequestUrl(endpointUrl, path, args, { allowInsecureConnection, ...requestOptions });\n\n    return {\n      get: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"GET\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      post: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"POST\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      put: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"PUT\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      patch: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"PATCH\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      delete: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"DELETE\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      head: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"HEAD\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      options: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"OPTIONS\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      trace: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"TRACE\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n    };\n  };\n\n  return {\n    path: client,\n    pathUnchecked: client,\n    pipeline,\n  };\n}\n\nfunction buildOperation(\n  method: HttpMethods,\n  url: string,\n  pipeline: Pipeline,\n  options: RequestParameters,\n  allowInsecureConnection?: boolean,\n  httpClient?: HttpClient,\n): StreamableMethod {\n  allowInsecureConnection = options.allowInsecureConnection ?? allowInsecureConnection;\n  return {\n    then: function (onFulfilled, onrejected) {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection },\n        httpClient,\n      ).then(onFulfilled, onrejected);\n    },\n    async asBrowserStream() {\n      if (isNodeLike) {\n        throw new Error(\n          \"`asBrowserStream` is supported only in the browser environment. Use `asNodeStream` instead to obtain the response body stream. If you require a Web stream of the response in Node, consider using `Readable.toWeb` on the result of `asNodeStream`.\",\n        );\n      } else {\n        return sendRequest(\n          method,\n          url,\n          pipeline,\n          { ...options, allowInsecureConnection, responseAsStream: true },\n          httpClient,\n        ) as Promise<HttpBrowserStreamResponse>;\n      }\n    },\n    async asNodeStream() {\n      if (isNodeLike) {\n        return sendRequest(\n          method,\n          url,\n          pipeline,\n          { ...options, allowInsecureConnection, responseAsStream: true },\n          httpClient,\n        ) as Promise<HttpNodeStreamResponse>;\n      } else {\n        throw new Error(\n          \"`isNodeStream` is not supported in the browser environment. Use `asBrowserStream` to obtain the response body stream.\",\n        );\n      }\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\nimport { createEmptyPipeline as tspCreateEmptyPipeline } from \"@typespec/ts-http-runtime\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return tspCreateEmptyPipeline() as Pipeline;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createLoggerContext } from \"@typespec/ts-http-runtime/internal/logger\";\n\nconst context = createLoggerContext({\n  logLevelEnvVarName: \"AZURE_LOG_LEVEL\",\n  namespace: \"azure\",\n});\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = context.logger;\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  context.setLogLevel(level);\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return context.getLogLevel();\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  return context.createClientLogger(namespace);\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"@azure/logger\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport {\n  logPolicyName as tspLogPolicyName,\n  logPolicy as tspLogPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = tspLogPolicyName;\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  return tspLogPolicy({\n    logger: coreLogger.info,\n    ...options,\n  });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  redirectPolicyName as tspRedirectPolicyName,\n  redirectPolicy as tspRedirectPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = tspRedirectPolicyName;\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  return tspRedirectPolicy(options);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as os from \"node:os\";\nimport * as process from \"node:process\";\n\n/**\n * @internal\n */\ninterface ExtendedPlatformVersions extends NodeJS.ProcessVersions {\n  bun?: string;\n  deno?: string;\n}\n\n/**\n * @internal\n */\nexport function getHeaderName(): string {\n  return \"User-Agent\";\n}\n\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map: Map<string, string>): Promise<void> {\n  if (process && process.versions) {\n    const versions = process.versions as ExtendedPlatformVersions;\n    if (versions.bun) {\n      map.set(\"Bun\", versions.bun);\n    } else if (versions.deno) {\n      map.set(\"Deno\", versions.deno);\n    } else if (versions.node) {\n      map.set(\"Node\", versions.node);\n    }\n  }\n\n  map.set(\"OS\", `(${os.arch()}-${os.type()}-${os.release()})`);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"1.22.0\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\n\nfunction getUserAgentString(telemetryInfo: Map<string, string>): string {\n  const parts: string[] = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n\n/**\n * @internal\n */\nexport function getUserAgentHeaderName(): string {\n  return getHeaderName();\n}\n\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix?: string): Promise<string> {\n  const runtimeInfo = new Map<string, string>();\n  runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n  await setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, await userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortOptions } from \"./aborterUtils.js\";\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\nimport { getRandomIntegerInclusive } from \"@typespec/ts-http-runtime/internal/util\";\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions extends AbortOptions {}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  const { abortSignal, abortErrorMsg } = options ?? {};\n  return createAbortablePromise(\n    (resolve) => {\n      token = setTimeout(resolve, timeInMs);\n    },\n    {\n      cleanupBeforeAbort: () => clearTimeout(token),\n      abortSignal,\n      abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    },\n  );\n}\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[],\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName,\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as tspRuntime from \"@typespec/ts-http-runtime/internal/util\";\n\nexport {\n  type AbortOptions,\n  type AbortablePromiseBuilder,\n  cancelablePromiseRace,\n} from \"./aborterUtils.js\";\nexport {\n  type CreateAbortablePromiseOptions,\n  createAbortablePromise,\n} from \"./createAbortablePromise.js\";\nexport { type DelayOptions, delay } from \"./delay.js\";\nexport { getErrorMessage } from \"./error.js\";\nexport { isDefined, isObjectWithProperties, objectHasProperty } from \"./typeGuards.js\";\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n *\n * @param retryAttempt - The current retry attempt number.\n *\n * @param config - The exponential retry configuration.\n *\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): {\n  retryAfterInMs: number;\n} {\n  return tspRuntime.calculateRetryDelay(retryAttempt, config);\n}\n\n/**\n * Generates a SHA-256 hash.\n *\n * @param content - The data to be included in the hash.\n *\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport function computeSha256Hash(content: string, encoding: \"base64\" | \"hex\"): Promise<string> {\n  return tspRuntime.computeSha256Hash(content, encoding);\n}\n\n/**\n * Generates a SHA-256 HMAC signature.\n *\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n *\n * @param stringToSign - The data to be signed.\n *\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport function computeSha256Hmac(\n  key: string,\n  stringToSign: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  return tspRuntime.computeSha256Hmac(key, stringToSign, encoding);\n}\n\n/**\n * Returns a random integer value between a lower and upper bound, inclusive of both bounds. Note that this uses Math.random and isn't secure. If you need to use this for any kind of security purpose, find a better source of random.\n *\n * @param min - The smallest integer value allowed.\n *\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  return tspRuntime.getRandomIntegerInclusive(min, max);\n}\n\n/**\n * Typeguard for an error object shape (has name and message)\n *\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  return tspRuntime.isError(e);\n}\n\n/**\n * Helper to determine when an input is a generic JS object.\n *\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return tspRuntime.isObject(input);\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return tspRuntime.randomUUID();\n}\n\n/**\n * Supported HTTP methods to use when making requests.\n *\n * @public\n */\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = {\n  [s: string]: unknown;\n};\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\nexport const isBrowser: boolean = tspRuntime.isBrowser;\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun: boolean = tspRuntime.isBun;\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno: boolean = tspRuntime.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n *\n * @deprecated\n *\n * Use `isNodeLike` instead.\n */\nexport const isNode: boolean = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike: boolean = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime: boolean = tspRuntime.isNodeRuntime;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\nexport const isReactNative: boolean = tspRuntime.isReactNative;\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker: boolean = tspRuntime.isWebWorker;\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  return tspRuntime.uint8ArrayToString(bytes, format);\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  return tspRuntime.stringToUint8Array(value, format);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNodeLike } from \"@azure/core-util\";\n\nfunction isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\n/**\n * Options passed into createFile specifying metadata about the file.\n */\nexport interface CreateFileOptions {\n  /**\n   * The MIME type of the file.\n   */\n  type?: string;\n\n  /**\n   * Last modified time of the file as a UNIX timestamp.\n   * This will default to the current date.\n   */\n  lastModified?: number;\n\n  /**\n   * relative path of this file when uploading a directory.\n   */\n  webkitRelativePath?: string;\n}\n\n/**\n * Extra options for createFile when a stream is being passed in.\n */\nexport interface CreateFileFromStreamOptions extends CreateFileOptions {\n  /**\n   * Size of the file represented by the stream in bytes.\n   *\n   * This will be used by the pipeline when calculating the Content-Length header\n   * for the overall request.\n   */\n  size?: number;\n}\n\nconst unimplementedMethods = {\n  arrayBuffer: () => {\n    throw new Error(\"Not implemented\");\n  },\n  bytes: () => {\n    throw new Error(\"Not implemented\");\n  },\n  slice: () => {\n    throw new Error(\"Not implemented\");\n  },\n  text: () => {\n    throw new Error(\"Not implemented\");\n  },\n};\n\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent: unique symbol = Symbol(\"rawContent\");\n\n/**\n * Type signature of a blob-like object with a raw content property.\n */\nexport interface RawContent extends Blob {\n  [rawContent](): Uint8Array | NodeJS.ReadableStream | ReadableStream<Uint8Array>;\n}\n\n/**\n * Type guard to check if a given object is a blob-like object with a raw content property.\n */\nexport function hasRawContent(x: unknown): x is RawContent {\n  return typeof (x as RawContent)[rawContent] === \"function\";\n}\n\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the actual blob.\n *\n * @internal\n */\nexport function getRawContent(\n  blob: Blob,\n): Blob | NodeJS.ReadableStream | ReadableStream<Uint8Array> | Uint8Array {\n  if (hasRawContent(blob)) {\n    return blob[rawContent]();\n  } else {\n    return blob;\n  }\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(\n  stream: () => ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n  name: string,\n  options: CreateFileFromStreamOptions = {},\n): File {\n  return {\n    ...unimplementedMethods,\n    type: options.type ?? \"\",\n    lastModified: options.lastModified ?? new Date().getTime(),\n    webkitRelativePath: options.webkitRelativePath ?? \"\",\n    size: options.size ?? -1,\n    name,\n    stream: () => {\n      const s = stream();\n      if (isNodeReadableStream(s)) {\n        throw new Error(\n          \"Not supported: a Node stream was provided as input to createFileFromStream.\",\n        );\n      }\n\n      return s;\n    },\n    [rawContent]: stream,\n  } as File & RawContent;\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(\n  content: Uint8Array,\n  name: string,\n  options: CreateFileOptions = {},\n): File {\n  if (isNodeLike) {\n    return {\n      ...unimplementedMethods,\n      type: options.type ?? \"\",\n      lastModified: options.lastModified ?? new Date().getTime(),\n      webkitRelativePath: options.webkitRelativePath ?? \"\",\n      size: content.byteLength,\n      name,\n      arrayBuffer: async () => content.buffer,\n      stream: () => new Blob([content]).stream(),\n      [rawContent]: () => content,\n    } as File & RawContent;\n  } else {\n    return new File([content], name, options);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  multipartPolicyName as tspMultipartPolicyName,\n  multipartPolicy as tspMultipartPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\nimport type {\n  PipelineRequest as TspPipelineRequest,\n  SendRequest as TspSendRequest,\n} from \"@typespec/ts-http-runtime\";\nimport { getRawContent, hasRawContent } from \"../util/file.js\";\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = tspMultipartPolicyName;\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  const tspPolicy = tspMultipartPolicy();\n\n  return {\n    name: multipartPolicyName,\n    sendRequest: async (request, next) => {\n      if (request.multipartBody) {\n        for (const part of request.multipartBody.parts) {\n          if (hasRawContent(part.body)) {\n            part.body = getRawContent(part.body);\n          }\n        }\n      }\n\n      return tspPolicy.sendRequest(request as TspPipelineRequest, next as TspSendRequest);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  decompressResponsePolicyName as tspDecompressResponsePolicyName,\n  decompressResponsePolicy as tspDecompressResponsePolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexport const decompressResponsePolicyName = tspDecompressResponsePolicyName;\n\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport function decompressResponsePolicy(): PipelinePolicy {\n  return tspDecompressResponsePolicy();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  defaultRetryPolicyName as tspDefaultRetryPolicyName,\n  defaultRetryPolicy as tspDefaultRetryPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = tspDefaultRetryPolicyName;\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return tspDefaultRetryPolicy(options);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  formDataPolicyName as tspFormDataPolicyName,\n  formDataPolicy as tspFormDataPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = tspFormDataPolicyName;\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return tspFormDataPolicy();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ProxySettings } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  proxyPolicy as tspProxyPolicy,\n  proxyPolicyName as tspProxyPolicyName,\n  getDefaultProxySettings as tspGetDefaultProxySettings,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = tspProxyPolicyName;\n\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  return tspGetDefaultProxySettings(proxyUrl);\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  },\n): PipelinePolicy {\n  return tspProxyPolicy(proxySettings, options);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\",\n): PipelinePolicy {\n  return {\n    name: setClientRequestIdPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(requestIdHeaderName)) {\n        request.headers.set(requestIdHeaderName, request.requestId);\n      }\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\nimport {\n  agentPolicyName as tspAgentPolicyName,\n  agentPolicy as tspAgentPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = tspAgentPolicyName;\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return tspAgentPolicy(agent);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\nimport {\n  tlsPolicy as tspTlsPolicy,\n  tlsPolicyName as tspTlsPolicyName,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = tspTlsPolicyName;\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return tspTlsPolicy(tlsSettings);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { TracingContext, TracingSpan } from \"./interfaces.js\";\n\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options: CreateTracingContextOptions = {}): TracingContext {\n  let context: TracingContext = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n\n/** @internal */\nexport class TracingContextImpl implements TracingContext {\n  private _contextMap: Map<symbol, unknown>;\n  constructor(initialContext?: TracingContext) {\n    this._contextMap =\n      initialContext instanceof TracingContextImpl\n        ? new Map<symbol, unknown>(initialContext._contextMap)\n        : new Map();\n  }\n\n  setValue(key: symbol, value: unknown): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n\n  getValue(key: symbol): unknown {\n    return this._contextMap.get(key);\n  }\n\n  deleteValue(key: symbol): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}\n\n/**\n * Represents a set of items that can be set when creating a new {@link TracingContext}.\n */\nexport interface CreateTracingContextOptions {\n  /** The {@link parentContext} - the newly created context will contain all the values of the parent context unless overridden. */\n  parentContext?: TracingContext;\n  /** An initial span to set on the context. */\n  span?: TracingSpan;\n  /** The namespace to set on any child spans. */\n  namespace?: string;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Instrumenter } from \"./interfaces.js\";\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\nimport { state as cjsState } from \"../commonjs/state.js\";\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nexport const state = cjsState as {\n  instrumenterImplementation: Instrumenter | undefined;\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  TracingContext,\n  TracingSpan,\n} from \"./interfaces.js\";\n\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\n\nexport function createDefaultTracingSpan(): TracingSpan {\n  return {\n    end: () => {\n      // noop\n    },\n    isRecording: () => false,\n    recordException: () => {\n      // noop\n    },\n    setAttribute: () => {\n      // noop\n    },\n    setStatus: () => {\n      // noop\n    },\n    addEvent: () => {\n      // noop\n    },\n  };\n}\n\nexport function createDefaultInstrumenter(): Instrumenter {\n  return {\n    createRequestHeaders: (): Record<string, string> => {\n      return {};\n    },\n    parseTraceparentHeader: (): TracingContext | undefined => {\n      return undefined;\n    },\n    startSpan: (\n      _name: string,\n      spanOptions: InstrumenterSpanOptions,\n    ): { span: TracingSpan; tracingContext: TracingContext } => {\n      return {\n        span: createDefaultTracingSpan(),\n        tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n      };\n    },\n    withContext<\n      CallbackArgs extends unknown[],\n      Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n    >(\n      _context: TracingContext,\n      callback: Callback,\n      ...callbackArgs: CallbackArgs\n    ): ReturnType<Callback> {\n      return callback(...callbackArgs);\n    },\n  };\n}\n\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter: Instrumenter): void {\n  state.instrumenterImplementation = instrumenter;\n}\n\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter(): Instrumenter {\n  if (!state.instrumenterImplementation) {\n    state.instrumenterImplementation = createDefaultInstrumenter();\n  }\n  return state.instrumenterImplementation;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options: TracingClientOptions): TracingClient {\n  const { namespace, packageName, packageVersion } = options;\n\n  function startSpan<Options extends { tracingOptions?: OperationTracingOptions }>(\n    name: string,\n    operationOptions?: Options,\n    spanOptions?: TracingSpanOptions,\n  ): {\n    span: TracingSpan;\n    updatedOptions: OptionsWithTracingContext<Options>;\n  } {\n    const startSpanResult = getInstrumenter().startSpan(name, {\n      ...spanOptions,\n      packageName: packageName,\n      packageVersion: packageVersion,\n      tracingContext: operationOptions?.tracingOptions?.tracingContext,\n    });\n    let tracingContext = startSpanResult.tracingContext;\n    const span = startSpanResult.span;\n    if (!tracingContext.getValue(knownContextKeys.namespace)) {\n      tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n    }\n    span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n    const updatedOptions: OptionsWithTracingContext<Options> = Object.assign({}, operationOptions, {\n      tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n    });\n\n    return {\n      span,\n      updatedOptions,\n    };\n  }\n\n  async function withSpan<\n    Options extends { tracingOptions?: OperationTracingOptions },\n    Callback extends (\n      updatedOptions: Options,\n      span: Omit<TracingSpan, \"end\">,\n    ) => ReturnType<Callback>,\n  >(\n    name: string,\n    operationOptions: Options,\n    callback: Callback,\n    spanOptions?: TracingSpanOptions,\n  ): Promise<Resolved<ReturnType<Callback>>> {\n    const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n    try {\n      const result = await withContext(updatedOptions.tracingOptions.tracingContext, () =>\n        Promise.resolve(callback(updatedOptions, span)),\n      );\n      span.setStatus({ status: \"success\" });\n      return result as ReturnType<typeof withSpan>;\n    } catch (err: any) {\n      span.setStatus({ status: \"error\", error: err });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  function withContext<\n    CallbackArgs extends unknown[],\n    Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n  >(\n    context: TracingContext,\n    callback: Callback,\n    ...callbackArgs: CallbackArgs\n  ): ReturnType<Callback> {\n    return getInstrumenter().withContext(context, callback, ...callbackArgs);\n  }\n\n  /**\n   * Parses a traceparent header value into a span identifier.\n   *\n   * @param traceparentHeader - The traceparent header to parse.\n   * @returns An implementation-specific identifier for the span.\n   */\n  function parseTraceparentHeader(traceparentHeader: string): TracingContext | undefined {\n    return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n  }\n\n  /**\n   * Creates a set of request headers to propagate tracing information to a backend.\n   *\n   * @param tracingContext - The context containing the span to serialize.\n   * @returns The set of headers to add to a request.\n   */\n  function createRequestHeaders(tracingContext?: TracingContext): Record<string, string> {\n    return getInstrumenter().createRequestHeaders(tracingContext);\n  }\n\n  return {\n    startSpan,\n    withSpan,\n    withContext,\n    parseTraceparentHeader,\n    createRequestHeaders,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\n\nimport {\n  RestError as TspRestError,\n  isRestError as tspIsRestError,\n} from \"@typespec/ts-http-runtime\";\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport interface RestErrorConstructor {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  readonly REQUEST_SEND_ERROR: string;\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  readonly PARSE_ERROR: string;\n\n  /**\n   * Prototype of RestError\n   */\n  readonly prototype: RestError;\n\n  /**\n   * Construct a new RestError.\n   */\n  new (message: string, options?: RestErrorOptions): RestError;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport interface RestError extends Error {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  details?: unknown;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const RestError: RestErrorConstructor = TspRestError as RestErrorConstructor;\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  return tspIsRestError(e);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  type TracingClient,\n  type TracingContext,\n  type TracingSpan,\n  createTracingClient,\n} from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\nimport { Sanitizer } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n\n/**\n * Options to configure the tracing policy.\n */\nexport interface TracingPolicyOptions {\n  /**\n   * String prefix to add to the user agent logged as metadata\n   * on the generated Span.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options: TracingPolicyOptions = {}): PipelinePolicy {\n  const userAgentPromise = getUserAgentValue(options.userAgentPrefix);\n  const sanitizer = new Sanitizer({\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  const tracingClient = tryCreateTracingClient();\n\n  return {\n    name: tracingPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!tracingClient) {\n        return next(request);\n      }\n\n      const userAgent = await userAgentPromise;\n\n      const spanAttributes = {\n        \"http.url\": sanitizer.sanitizeUrl(request.url),\n        \"http.method\": request.method,\n        \"http.user_agent\": userAgent,\n        requestId: request.requestId,\n      };\n      if (userAgent) {\n        spanAttributes[\"http.user_agent\"] = userAgent;\n      }\n\n      const { span, tracingContext } = tryCreateSpan(tracingClient, request, spanAttributes) ?? {};\n\n      if (!span || !tracingContext) {\n        return next(request);\n      }\n\n      try {\n        const response = await tracingClient.withContext(tracingContext, next, request);\n        tryProcessResponse(span, response);\n        return response;\n      } catch (err: any) {\n        tryProcessError(span, err);\n        throw err;\n      }\n    },\n  };\n}\n\nfunction tryCreateTracingClient(): TracingClient | undefined {\n  try {\n    return createTracingClient({\n      namespace: \"\",\n      packageName: \"@azure/core-rest-pipeline\",\n      packageVersion: SDK_VERSION,\n    });\n  } catch (e: unknown) {\n    logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryCreateSpan(\n  tracingClient: TracingClient,\n  request: PipelineRequest,\n  spanAttributes: Record<string, unknown>,\n): { span: TracingSpan; tracingContext: TracingContext } | undefined {\n  try {\n    // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n    const { span, updatedOptions } = tracingClient.startSpan(\n      `HTTP ${request.method}`,\n      { tracingOptions: request.tracingOptions },\n      {\n        spanKind: \"client\",\n        spanAttributes,\n      },\n    );\n\n    // If the span is not recording, don't do any more work.\n    if (!span.isRecording()) {\n      span.end();\n      return undefined;\n    }\n\n    // set headers\n    const headers = tracingClient.createRequestHeaders(\n      updatedOptions.tracingOptions.tracingContext,\n    );\n    for (const [key, value] of Object.entries(headers)) {\n      request.headers.set(key, value);\n    }\n    return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n  } catch (e: any) {\n    logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryProcessError(span: TracingSpan, error: unknown): void {\n  try {\n    span.setStatus({\n      status: \"error\",\n      error: isError(error) ? error : undefined,\n    });\n    if (isRestError(error) && error.statusCode) {\n      span.setAttribute(\"http.status_code\", error.statusCode);\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n\nfunction tryProcessResponse(span: TracingSpan, response: PipelineResponse): void {\n  try {\n    span.setAttribute(\"http.status_code\", response.status);\n    const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n    if (serviceRequestId) {\n      span.setAttribute(\"serviceRequestId\", serviceRequestId);\n    }\n    // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n    // Otherwise, the status MUST remain unset.\n    // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n    if (response.status >= 400) {\n      span.setStatus({\n        status: \"error\",\n      });\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Creates a native AbortSignal which reflects the state of the provided AbortSignalLike.\n * If the AbortSignalLike is already a native AbortSignal, it is returned as is.\n * @param abortSignalLike - The AbortSignalLike to wrap.\n * @returns - An object containing the native AbortSignal and an optional cleanup function. The cleanup function should be called when the AbortSignal is no longer needed.\n */\nexport function wrapAbortSignalLike(abortSignalLike: AbortSignalLike): {\n  abortSignal: AbortSignal;\n  cleanup?: () => void;\n} {\n  if (abortSignalLike instanceof AbortSignal) {\n    return { abortSignal: abortSignalLike };\n  }\n\n  if (abortSignalLike.aborted) {\n    return { abortSignal: AbortSignal.abort((abortSignalLike as any).reason) };\n  }\n\n  const controller = new AbortController();\n  let needsCleanup = true;\n  function cleanup(): void {\n    if (needsCleanup) {\n      abortSignalLike.removeEventListener(\"abort\", listener);\n      needsCleanup = false;\n    }\n  }\n  function listener(): void {\n    controller.abort((abortSignalLike as any).reason);\n    cleanup();\n  }\n\n  abortSignalLike.addEventListener(\"abort\", listener);\n  return { abortSignal: controller.signal, cleanup };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type PipelinePolicy } from \"../pipeline.js\";\nimport { wrapAbortSignalLike } from \"../util/wrapAbortSignal.js\";\n\nexport const wrapAbortSignalLikePolicyName = \"wrapAbortSignalLikePolicy\";\n\n/**\n * Policy that ensure that any AbortSignalLike is wrapped in a native AbortSignal for processing by the pipeline.\n * Since the ts-http-runtime expects a native AbortSignal, this policy is used to ensure that any AbortSignalLike is wrapped in a native AbortSignal.\n *\n * @returns - created policy\n */\nexport function wrapAbortSignalLikePolicy(): PipelinePolicy {\n  return {\n    name: wrapAbortSignalLikePolicyName,\n    sendRequest: async (request, next) => {\n      if (!request.abortSignal) {\n        return next(request);\n      }\n\n      const { abortSignal, cleanup } = wrapAbortSignalLike(request.abortSignal);\n      // eslint-disable-next-line no-param-reassign\n      request.abortSignal = abortSignal;\n      try {\n        return await next(request);\n      } finally {\n        cleanup?.();\n      }\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type LogPolicyOptions, logPolicy } from \"./policies/logPolicy.js\";\nimport { type Pipeline, createEmptyPipeline } from \"./pipeline.js\";\nimport type { Agent, PipelineRetryOptions, ProxySettings, TlsSettings } from \"./interfaces.js\";\nimport { type RedirectPolicyOptions, redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { type UserAgentPolicyOptions, userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\nimport { wrapAbortSignalLikePolicy } from \"./policies/wrapAbortSignalLikePolicy.js\";\n\n/**\n * Defines options that are used to configure the HTTP pipeline for\n * an SDK client.\n */\nexport interface PipelineOptions {\n  /**\n   * Options that control how to retry failed requests.\n   */\n  retryOptions?: PipelineRetryOptions;\n\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxySettings;\n\n  /** Options for configuring Agent instance for outgoing requests */\n  agent?: Agent;\n\n  /** Options for configuring TLS authentication */\n  tlsOptions?: TlsSettings;\n\n  /**\n   * Options for how redirect responses are handled.\n   */\n  redirectOptions?: RedirectPolicyOptions;\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentPolicyOptions;\n\n  /**\n   * Options for setting common telemetry and tracing info to outgoing requests.\n   */\n  telemetryOptions?: TelemetryOptions;\n}\n\n/**\n * Defines options that are used to configure common telemetry and tracing info\n */\nexport interface TelemetryOptions {\n  /**\n   * The name of the header to pass the request ID to.\n   */\n  clientRequestIdHeaderName?: string;\n}\n\n/**\n * Defines options that are used to configure internal options of\n * the HTTP pipeline for an SDK client.\n */\nexport interface InternalPipelineOptions extends PipelineOptions {\n  /**\n   * Options to configure request/response logging.\n   */\n  loggingOptions?: LogPolicyOptions;\n}\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options: InternalPipelineOptions): Pipeline {\n  const pipeline = createEmptyPipeline();\n\n  if (isNodeLike) {\n    if (options.agent) {\n      pipeline.addPolicy(agentPolicy(options.agent));\n    }\n    if (options.tlsOptions) {\n      pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n    }\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(wrapAbortSignalLikePolicy());\n\n  pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  pipeline.addPolicy(setClientRequestIdPolicy(options.telemetryOptions?.clientRequestIdHeaderName));\n  // The multipart policy is added after policies with no phase, so that\n  // policies can be added between it and formDataPolicy to modify\n  // properties (e.g., making the boundary constant in recorded tests).\n  pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n  pipeline.addPolicy(tracingPolicy({ ...options.userAgentOptions, ...options.loggingOptions }), {\n    afterPhase: \"Retry\",\n  });\n  if (isNodeLike) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n  }\n  pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n\n  return pipeline;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { type AzureLogger, createClientLogger } from \"@azure/logger\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nimport {\n  retryPolicy as tspRetryPolicy,\n  type RetryStrategy as TspRetryStrategy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\n\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n\n/**\n * Information provided to the retry strategy about the current progress of the retry policy.\n */\nexport interface RetryInformation {\n  /**\n   * A {@link PipelineResponse}, if the last retry attempt succeeded.\n   */\n  response?: PipelineResponse;\n  /**\n   * A {@link RestError}, if the last retry attempt failed.\n   */\n  responseError?: RestError;\n  /**\n   * Total number of retries so far.\n   */\n  retryCount: number;\n}\n\n/**\n * Properties that can modify the behavior of the retry policy.\n */\nexport interface RetryModifiers {\n  /**\n   * If true, allows skipping the current strategy from running on the retry policy.\n   */\n  skipStrategy?: boolean;\n  /**\n   * Indicates to retry against this URL.\n   */\n  redirectTo?: string;\n  /**\n   * Controls whether to retry in a given number of milliseconds.\n   * If provided, a new retry will be attempted.\n   */\n  retryAfterInMs?: number;\n  /**\n   * Indicates to throw this error instead of retrying.\n   */\n  errorToThrow?: RestError;\n}\n\n/**\n * A retry strategy is intended to define whether to retry or not, and how to retry.\n */\nexport interface RetryStrategy {\n  /**\n   * Name of the retry strategy. Used for logging.\n   */\n  name: string;\n  /**\n   * Logger. If it's not provided, a default logger for all retry strategies is used.\n   */\n  logger?: AzureLogger;\n  /**\n   * Function that determines how to proceed with the subsequent requests.\n   * @param state - Retry state\n   */\n  retry(state: RetryInformation): RetryModifiers;\n}\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  // Cast is required since the TSP runtime retry strategy type is slightly different\n  // very deep down (using real AbortSignal vs. AbortSignalLike in RestError).\n  // In practice the difference doesn't actually matter.\n  return tspRetryPolicy(strategies as TspRetryStrategy[], {\n    logger: retryPolicyLogger,\n    ...options,\n  });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport { delay } from \"@azure/core-util\";\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\nexport type AccessTokenGetter = (\n  scopes: string | string[],\n  options: GetTokenOptions,\n) => Promise<AccessToken>;\n\nexport interface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  refreshTimeout: number,\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < refreshTimeout) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(\n  credential: TokenCredential,\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>,\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n  let tenantId: string | undefined;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      if (cycler.isRefreshing) {\n        return false;\n      }\n      if (token?.refreshAfterTimestamp && token.refreshAfterTimestamp < Date.now()) {\n        return true;\n      }\n\n      return (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now();\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(\n    scopes: string | string[],\n    getTokenOptions: GetTokenOptions,\n  ): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now(),\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          tenantId = getTokenOptions.tenantId;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          tenantId = undefined;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (scopes: string | string[], tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    const hasClaimChallenge = Boolean(tokenOptions.claims);\n    const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n\n    if (hasClaimChallenge) {\n      // If we've received a claim, we know the existing token isn't valid\n      // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n      token = null;\n    }\n\n    // If the tenantId passed in token options is different to the one we have\n    // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n    // refresh the token with the new tenantId or token.\n    const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n\n    if (mustRefresh) {\n      return refresh(scopes, tokenOptions);\n    }\n\n    if (cycler.shouldRefresh) {\n      refresh(scopes, tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport type { AzureLogger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport type { RestError } from \"../restError.js\";\nimport { isRestError } from \"../restError.js\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n\n/**\n * Options sent to the authorizeRequest callback\n */\nexport interface AuthorizeRequestOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options sent to the authorizeRequestOnChallenge callback\n */\nexport interface AuthorizeRequestOnChallengeOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * Response containing the challenge.\n   */\n  response: PipelineResponse;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options to override the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n */\nexport interface ChallengeCallbacks {\n  /**\n   * Allows for the authorization of the main request of this policy before it's sent.\n   */\n  authorizeRequest?(options: AuthorizeRequestOptions): Promise<void>;\n  /**\n   * Allows to handle authentication challenges and to re-authorize the request.\n   * The response containing the challenge is `options.response`.\n   * If this method returns true, the underlying request will be sent once again.\n   * The request may be modified before being sent.\n   */\n  authorizeRequestOnChallenge?(options: AuthorizeRequestOnChallengeOptions): Promise<boolean>;\n}\n\n/**\n * Options to configure the bearerTokenAuthenticationPolicy\n */\nexport interface BearerTokenAuthenticationPolicyOptions {\n  /**\n   * The TokenCredential implementation that can supply the bearer token.\n   */\n  credential?: TokenCredential;\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string | string[];\n  /**\n   * Allows for the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n   * If provided, it must contain at least the `authorizeRequestOnChallenge` method.\n   * If provided, after a request is sent, if it has a challenge, it can be processed to re-send the original request with the relevant challenge information.\n   */\n  challengeCallbacks?: ChallengeCallbacks;\n  /**\n   * A logger can be sent for debugging purposes.\n   */\n  logger?: AzureLogger;\n}\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(\n  request: PipelineRequest,\n  next: SendRequest,\n): Promise<[PipelineResponse, RestError | undefined]> {\n  try {\n    return [await next(request), undefined];\n  } catch (e: any) {\n    if (isRestError(e) && e.response) {\n      return [e.response, e];\n    } else {\n      throw e;\n    }\n  }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options: AuthorizeRequestOptions): Promise<void> {\n  const { scopes, getAccessToken, request } = options;\n  // Enable CAE true by default\n  const getTokenOptions: GetTokenOptions = {\n    abortSignal: request.abortSignal,\n    tracingOptions: request.tracingOptions,\n    enableCae: true,\n  };\n\n  const accessToken = await getAccessToken(scopes, getTokenOptions);\n\n  if (accessToken) {\n    options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n  }\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response: PipelineResponse): boolean {\n  return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(\n  onChallengeOptions: AuthorizeRequestOnChallengeOptions,\n  caeClaims: string,\n): Promise<boolean> {\n  const { scopes } = onChallengeOptions;\n\n  const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n    enableCae: true,\n    claims: caeClaims,\n  });\n  if (!accessToken) {\n    return false;\n  }\n\n  onChallengeOptions.request.headers.set(\n    \"Authorization\",\n    `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`,\n  );\n  return true;\n}\n\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(\n  options: BearerTokenAuthenticationPolicyOptions,\n): PipelinePolicy {\n  const { credential, scopes, challengeCallbacks } = options;\n  const logger = options.logger || coreLogger;\n  const callbacks = {\n    authorizeRequest:\n      challengeCallbacks?.authorizeRequest?.bind(challengeCallbacks) ?? defaultAuthorizeRequest,\n    authorizeRequestOnChallenge:\n      challengeCallbacks?.authorizeRequestOnChallenge?.bind(challengeCallbacks),\n  };\n\n  // This function encapsulates the entire process of reliably retrieving the token\n  // The options are left out of the public API until there's demand to configure this.\n  // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n  // in order to pass through the `options` object.\n  const getAccessToken = credential\n    ? createTokenCycler(credential /* , options */)\n    : () => Promise.resolve(null);\n\n  return {\n    name: bearerTokenAuthenticationPolicyName,\n    /**\n     * If there's no challenge parameter:\n     * - It will try to retrieve the token using the cache, or the credential's getToken.\n     * - Then it will try the next policy with or without the retrieved token.\n     *\n     * It uses the challenge parameters to:\n     * - Skip a first attempt to get the token from the credential if there's no cached token,\n     *   since it expects the token to be retrievable only after the challenge.\n     * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n     * - Send an initial request to receive the challenge if it fails.\n     * - Process a challenge if the response contains it.\n     * - Retrieve a token with the challenge information, then re-send the request.\n     */\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\",\n        );\n      }\n\n      await callbacks.authorizeRequest({\n        scopes: Array.isArray(scopes) ? scopes : [scopes],\n        request,\n        getAccessToken,\n        logger,\n      });\n\n      let response: PipelineResponse;\n      let error: Error | undefined;\n      let shouldSendRequest: boolean;\n      [response, error] = await trySendRequest(request, next);\n\n      if (isChallengeResponse(response)) {\n        let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n        // Handle CAE by default when receive CAE claim\n        if (claims) {\n          let parsedClaim: string;\n          // Return the response immediately if claims is not a valid base64 encoded string\n          try {\n            parsedClaim = atob(claims);\n          } catch (e) {\n            logger.warning(\n              `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n            );\n            return response;\n          }\n          shouldSendRequest = await authorizeRequestOnCaeChallenge(\n            {\n              scopes: Array.isArray(scopes) ? scopes : [scopes],\n              response,\n              request,\n              getAccessToken,\n              logger,\n            },\n            parsedClaim,\n          );\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n        } else if (callbacks.authorizeRequestOnChallenge) {\n          // Handle custom challenges when client provides custom callback\n          shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            request,\n            response,\n            getAccessToken,\n            logger,\n          });\n\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n\n          // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n          if (isChallengeResponse(response)) {\n            claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\") as string);\n            if (claims) {\n              let parsedClaim: string;\n              try {\n                parsedClaim = atob(claims);\n              } catch (e) {\n                logger.warning(\n                  `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n                );\n                return response;\n              }\n\n              shouldSendRequest = await authorizeRequestOnCaeChallenge(\n                {\n                  scopes: Array.isArray(scopes) ? scopes : [scopes],\n                  response,\n                  request,\n                  getAccessToken,\n                  logger,\n                },\n                parsedClaim,\n              );\n              // Send updated request and handle response for RestError\n              if (shouldSendRequest) {\n                [response, error] = await trySendRequest(request, next);\n              }\n            }\n          }\n        }\n      }\n\n      if (error) {\n        throw error;\n      } else {\n        return response;\n      }\n    },\n  };\n}\n\n/**\n *\n * Interface to represent a parsed challenge.\n *\n * @internal\n */\ninterface AuthChallenge {\n  scheme: string;\n  params: Record<string, string>;\n}\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nexport function parseChallenges(challenges: string): AuthChallenge[] {\n  // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n  // The challenge regex captures parameteres with either quotes values or unquoted values\n  const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n  // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n  // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n  const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n\n  const parsedChallenges: AuthChallenge[] = [];\n  let match;\n\n  // Iterate over each challenge match\n  while ((match = challengeRegex.exec(challenges)) !== null) {\n    const scheme = match[1];\n    const paramsString = match[2];\n    const params: Record<string, string> = {};\n    let paramMatch;\n\n    // Iterate over each parameter match\n    while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n      params[paramMatch[1]] = paramMatch[2];\n    }\n\n    parsedChallenges.push({ scheme, params });\n  }\n  return parsedChallenges;\n}\n\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges: string | undefined): string | undefined {\n  if (!challenges) {\n    return;\n  }\n  // Find all challenges present in the header\n  const parsedChallenges = parseChallenges(challenges);\n  return parsedChallenges.find(\n    (x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\",\n  )?.params.claims;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeyCredential } from \"./keyCredential.js\";\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nexport function isKeyCredential(credential: unknown): credential is KeyCredential {\n  return isObjectWithProperties(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { TracingContext } from \"./tracing.js\";\nimport type { HttpMethods } from \"@azure/core-util\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request.\n     */\n    tracingContext?: TracingContext;\n  };\n  /**\n   * Claim details to perform the Continuous Access Evaluation authentication flow\n   */\n  claims?: string;\n  /**\n   * Indicates whether to enable the Continuous Access Evaluation authentication flow\n   */\n  enableCae?: boolean;\n  /**\n   * Allows specifying a tenantId. Useful to handle challenges that provide tenant Id hints.\n   */\n  tenantId?: string;\n\n  /**\n   * Options for Proof of Possession token requests\n   */\n  proofOfPossessionOptions?: {\n    /**\n     * The nonce value required for PoP token requests.\n     * This is typically retrieved from the WWW-Authenticate header of a 401 challenge response.\n     * This is used in combination with {@link resourceRequestUrl} and {@link resourceRequestMethod} to generate the PoP token.\n     */\n    nonce: string;\n    /**\n     * The HTTP method of the request.\n     * This is used in combination with {@link resourceRequestUrl} and {@link nonce} to generate the PoP token.\n     */\n    resourceRequestMethod: HttpMethods;\n    /**\n     * The URL of the request.\n     * This is used in combination with {@link resourceRequestMethod} and {@link nonce} to generate the PoP token.\n     */\n    resourceRequestUrl: string;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n\n  /**\n   * The timestamp when the access token should be refreshed, in milliseconds, UNIX epoch time.\n   */\n  refreshAfterTimestamp?: number;\n\n  /** Type of token - `Bearer` or `pop` */\n  tokenType?: \"Bearer\" | \"pop\";\n}\n\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nexport function isBearerToken(accessToken: AccessToken): boolean {\n  return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nexport function isPopToken(accessToken: AccessToken): boolean {\n  return accessToken.tokenType === \"pop\";\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"@azure/core-rest-pipeline\";\nimport type { ClientOptions } from \"./common.js\";\n\nexport const apiVersionPolicyName = \"ApiVersionPolicy\";\n\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nexport function apiVersionPolicy(options: ClientOptions): PipelinePolicy {\n  return {\n    name: apiVersionPolicyName,\n    sendRequest: (req, next) => {\n      // Use the apiVesion defined in request url directly\n      // Append one if there is no apiVesion and we have one at client options\n      const url = new URL(req.url);\n      if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n        req.url = `${req.url}${\n          Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"\n        }api-version=${options.apiVersion}`;\n      }\n\n      return next(req);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeyCredential } from \"@azure/core-auth\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const keyCredentialAuthenticationPolicyName = \"keyCredentialAuthenticationPolicy\";\n\nexport function keyCredentialAuthenticationPolicy(\n  credential: KeyCredential,\n  apiKeyHeaderName: string,\n): PipelinePolicy {\n  return {\n    name: keyCredentialAuthenticationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      request.headers.set(apiKeyHeaderName, credential.key);\n      return next(request);\n    },\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, Pipeline } from \"@azure/core-rest-pipeline\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createDefaultHttpClient,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport type { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\n\nimport type { ClientOptions } from \"./common.js\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy.js\";\nimport { keyCredentialAuthenticationPolicy } from \"./keyCredentialAuthenticationPolicy.js\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\n/**\n * Optional parameters for adding a credential policy to the pipeline.\n */\nexport interface AddCredentialPipelinePolicyOptions {\n  /**\n   * Options related to the client.\n   */\n  clientOptions?: ClientOptions;\n  /**\n   * The credential to use.\n   */\n  credential?: TokenCredential | KeyCredential;\n}\n\n/**\n * Adds a credential policy to the pipeline if a credential is provided. If none is provided, no policy is added.\n */\nexport function addCredentialPipelinePolicy(\n  pipeline: Pipeline,\n  endpoint: string,\n  options: AddCredentialPipelinePolicyOptions = {},\n): void {\n  const { credential, clientOptions } = options;\n  if (!credential) {\n    return;\n  }\n\n  if (isTokenCredential(credential)) {\n    const tokenPolicy = bearerTokenAuthenticationPolicy({\n      credential,\n      scopes: clientOptions?.credentials?.scopes ?? `${endpoint}/.default`,\n    });\n    pipeline.addPolicy(tokenPolicy);\n  } else if (isKeyCredential(credential)) {\n    if (!clientOptions?.credentials?.apiKeyHeaderName) {\n      throw new Error(`Missing API Key Header Name`);\n    }\n    const keyPolicy = keyCredentialAuthenticationPolicy(\n      credential,\n      clientOptions?.credentials?.apiKeyHeaderName,\n    );\n    pipeline.addPolicy(keyPolicy);\n  }\n}\n\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(\n  endpoint: string,\n  credential?: TokenCredential | KeyCredential,\n  options: ClientOptions = {},\n): Pipeline {\n  const pipeline = createPipelineFromOptions(options);\n\n  pipeline.addPolicy(apiVersionPolicy(options));\n\n  addCredentialPipelinePolicy(pipeline, endpoint, { credential, clientOptions: options });\n  return pipeline;\n}\n\nfunction isKeyCredential(credential: any): credential is KeyCredential {\n  return (credential as KeyCredential).key !== undefined;\n}\n\nexport function getCachedDefaultHttpsClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport { isKeyCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { type PipelineOptions } from \"@azure/core-rest-pipeline\";\nimport { createDefaultPipeline } from \"./clientHelpers.js\";\nimport type { Client, ClientOptions, RequestParameters, StreamableMethod } from \"./common.js\";\nimport {\n  getClient as tspGetClient,\n  type ClientOptions as TspClientOptions,\n} from \"@typespec/ts-http-runtime\";\n\n/**\n * Function to wrap RequestParameters so that we get the legacy onResponse behavior in core-client-rest\n */\nfunction wrapRequestParameters(parameters: RequestParameters): RequestParameters {\n  if (parameters.onResponse) {\n    return {\n      ...parameters,\n      onResponse(rawResponse, error) {\n        parameters.onResponse?.(rawResponse, error, error);\n      },\n    };\n  }\n\n  return parameters;\n}\n\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param options - Client options\n */\nexport function getClient(endpoint: string, options?: ClientOptions): Client;\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nexport function getClient(\n  endpoint: string,\n  credentials?: TokenCredential | KeyCredential,\n  options?: ClientOptions,\n): Client;\nexport function getClient(\n  endpoint: string,\n  credentialsOrPipelineOptions?: (TokenCredential | KeyCredential) | ClientOptions,\n  clientOptions: ClientOptions = {},\n): Client {\n  let credentials: TokenCredential | KeyCredential | undefined;\n  if (credentialsOrPipelineOptions) {\n    if (isCredential(credentialsOrPipelineOptions)) {\n      credentials = credentialsOrPipelineOptions;\n    } else {\n      clientOptions = credentialsOrPipelineOptions ?? {};\n    }\n  }\n\n  const pipeline = createDefaultPipeline(endpoint, credentials, clientOptions);\n  const tspClient = tspGetClient(endpoint, {\n    ...clientOptions,\n    pipeline,\n  } as TspClientOptions) as Client;\n\n  const client = (path: string, ...args: Array<any>) => {\n    return {\n      get: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).get(wrapRequestParameters(requestOptions));\n      },\n      post: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).post(wrapRequestParameters(requestOptions));\n      },\n      put: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).put(wrapRequestParameters(requestOptions));\n      },\n      patch: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).patch(wrapRequestParameters(requestOptions));\n      },\n      delete: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).delete(wrapRequestParameters(requestOptions));\n      },\n      head: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).head(wrapRequestParameters(requestOptions));\n      },\n      options: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).options(wrapRequestParameters(requestOptions));\n      },\n      trace: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return tspClient.path(path, ...args).trace(wrapRequestParameters(requestOptions));\n      },\n    };\n  };\n\n  return {\n    path: client,\n    pathUnchecked: client,\n    pipeline: tspClient.pipeline,\n  };\n}\n\nfunction isCredential(\n  param: (TokenCredential | KeyCredential) | PipelineOptions,\n): param is TokenCredential | KeyCredential {\n  return isKeyCredential(param) || isTokenCredential(param);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { createClientLogger } from \"@azure/logger\";\n\nexport const logger = createClientLogger(\"ai-inference\");\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\nexport const SDK_VERSION: string = \"1.0.0-beta.4\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport type { PipelineRequest, PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport type { TracingSpan } from \"@azure/core-tracing\";\nimport { isError } from \"@azure/core-util\";\nimport type {\n  ChatRequestAssistantMessage,\n  ChatRequestMessage,\n  ChatRequestSystemMessage,\n  ChatRequestToolMessage,\n} from \"./models.js\";\nimport type {\n  ChatChoiceOutput,\n  ChatCompletionsOutput,\n  ChatCompletionsToolCallOutput,\n} from \"./outputModels.js\";\nimport type { GetChatCompletionsBodyParam } from \"./parameters.js\";\n/*\n* Add event to span.  Sample:\n    {\n    name: 'gen_ai.user.message',\n    attributes: {\n      'gen_ai.system': 'INFERENCE_GEN_AI_SYSTEM_NAME',\n      'gen_ai.event.content': `{\"role\":\"user\",\"content\":\"What's the weather like in Boston?\"}`  \n    },\n    time: [ 1725666879, 622695900 ],\n    droppedAttributesCount: 0\n  },\n*/\n/*\n* Add event to span.  Sample:\n{\n  name: 'gen_ai.choice',\n  attributes: {\n    'gen_ai.system': 'INFERENCE_GEN_AI_SYSTEM_NAME',\n    'gen_ai.event.content': '{\"finish_reason\":\"tool_calls\",\"index\":0,\"message\":{\"content\":\"\"}}'\n  },\n  time: [ 1725666881, 780608000 ],\n  droppedAttributesCount: 0\n}  \n*/\n\nenum TracingAttributesEnum {\n  Operation_Name = \"gen_ai.operation.name\",\n  Request_Model = \"gen_ai.request.model\",\n  System = \"gen_ai.system\",\n  Error_Type = \"error.type\",\n  Server_Port = \"server.port\",\n  Request_Frequency_Penalty = \"gen_ai.request.frequency_penalty\",\n  Request_Max_Tokens = \"gen_ai.request.max_tokens\",\n  Request_Presence_Penalty = \"gen_ai.request.presence_penalty\",\n  Request_Stop_Sequences = \"gen_ai.request.stop_sequences\",\n  Request_Temperature = \"gen_ai.request.temperature\",\n  Request_Top_P = \"gen_ai.request.top_p\",\n  Response_Finish_Reasons = \"gen_ai.response.finish_reasons\",\n  Response_Id = \"gen_ai.response.id\",\n  Response_Model = \"gen_ai.response.model\",\n  Usage_Input_Tokens = \"gen_ai.usage.input_tokens\",\n  Usage_Output_Tokens = \"gen_ai.usage.output_tokens\",\n  Server_Address = \"server.address\",\n}\n\nconst INFERENCE_GEN_AI_SYSTEM_NAME = \"az.ai.inference\";\n\nconst isContentRecordingEnabled = (): boolean =>\n  envVarToBoolean(\"AZURE_TRACING_GEN_AI_CONTENT_RECORDING_ENABLED\");\n\nexport function getRequestBody(request: PipelineRequest): GetChatCompletionsBodyParam {\n  return { body: JSON.parse(request.body as string) };\n}\n\nexport function getSpanName(request: PipelineRequest): string {\n  const { body } = getRequestBody(request);\n  return `chat ${body?.model ?? \"\"}`.trim();\n}\n\nexport function onStartTracing(span: TracingSpan, request: PipelineRequest, url: string): void {\n  if (!span.isRecording()) {\n    return;\n  }\n\n  const urlObj = new URL(url);\n  const port = Number(urlObj.port) || (urlObj.protocol === \"https:\" ? undefined : 80);\n  if (port) {\n    span.setAttribute(TracingAttributesEnum.Server_Port, port);\n  }\n\n  span.setAttribute(TracingAttributesEnum.Server_Address, urlObj.hostname);\n  span.setAttribute(TracingAttributesEnum.Operation_Name, \"chat\");\n  span.setAttribute(TracingAttributesEnum.System, \"az.ai.inference\");\n  const { body } = getRequestBody(request);\n  if (!body) return;\n  span.setAttribute(TracingAttributesEnum.Request_Model, body.model);\n  span.setAttribute(TracingAttributesEnum.Request_Frequency_Penalty, body.frequency_penalty);\n  span.setAttribute(TracingAttributesEnum.Request_Max_Tokens, body.max_tokens);\n  span.setAttribute(TracingAttributesEnum.Request_Presence_Penalty, body.presence_penalty);\n  span.setAttribute(TracingAttributesEnum.Request_Stop_Sequences, body.stop);\n  span.setAttribute(TracingAttributesEnum.Request_Temperature, body.temperature);\n  span.setAttribute(TracingAttributesEnum.Request_Top_P, body.top_p);\n  if (body.messages) {\n    addRequestChatMessageEvent(span, body.messages);\n  }\n}\n\nexport function tryProcessResponse(span: TracingSpan, response?: PipelineResponse): void {\n  if (!span.isRecording()) {\n    return;\n  }\n\n  if (response?.bodyAsText) {\n    const body: any = JSON.parse(response.bodyAsText);\n    if (body.error ?? body.message) {\n      span.setAttribute(TracingAttributesEnum.Error_Type, `${body.status ?? body.statusCode}`);\n      span.setStatus({\n        status: \"error\",\n        error: body.error ?? body.message, // message is not in the schema of the response, but it can present if there is crediential error\n      });\n    }\n    span.setAttribute(TracingAttributesEnum.Response_Id, body.id);\n    span.setAttribute(TracingAttributesEnum.Response_Model, body.model);\n    if (body.choices) {\n      span.setAttribute(\n        TracingAttributesEnum.Response_Finish_Reasons,\n        body.choices.map((choice: ChatChoiceOutput) => choice.finish_reason).join(\",\"),\n      );\n    }\n    if (body.usage) {\n      span.setAttribute(TracingAttributesEnum.Usage_Input_Tokens, body.usage.prompt_tokens);\n      span.setAttribute(TracingAttributesEnum.Usage_Output_Tokens, body.usage.completion_tokens);\n    }\n    addResponseChatMessageEvent(span, body);\n  }\n}\n\nexport function tryProcessError(span: TracingSpan, error: unknown): void {\n  span.setStatus({\n    status: \"error\",\n    error: isError(error) ? error : undefined,\n  });\n}\n\nfunction addRequestChatMessageEvent(span: TracingSpan, messages: Array<ChatRequestMessage>): void {\n  messages.forEach((message: any) => {\n    if (message.role) {\n      const content: {\n        content?: string;\n        tool_calls?: Array<ChatCompletionsToolCallOutput>;\n        id?: string;\n      } = {};\n\n      const chatMsg = message as ChatRequestSystemMessage;\n      if (chatMsg.content) {\n        content.content = chatMsg.content;\n      }\n      if (!isContentRecordingEnabled()) {\n        content.content = \"\";\n      }\n\n      const assistantMsg = message as ChatRequestAssistantMessage;\n      if (assistantMsg.tool_calls) {\n        content.tool_calls = assistantMsg.tool_calls;\n        if (!isContentRecordingEnabled()) {\n          const toolCalls: Array<ChatCompletionsToolCallOutput> = JSON.parse(\n            JSON.stringify(content.tool_calls),\n          );\n          toolCalls.forEach((toolCall) => {\n            if (toolCall.function.arguments) {\n              toolCall.function.arguments = \"\";\n            }\n            toolCall.function.name = \"\";\n          });\n          content.tool_calls = toolCalls;\n        }\n      }\n\n      const toolMsg: ChatRequestToolMessage = message;\n      if (toolMsg.tool_call_id) {\n        content.id = toolMsg.tool_call_id;\n      }\n\n      span.addEvent?.(`gen_ai.${message.role}.message`, {\n        attributes: {\n          \"gen_ai.system\": INFERENCE_GEN_AI_SYSTEM_NAME,\n          \"gen_ai.event.content\": JSON.stringify(content),\n        },\n      });\n    }\n  });\n}\n\nfunction addResponseChatMessageEvent(span: TracingSpan, body: ChatCompletionsOutput): void {\n  if (!span.addEvent) {\n    return;\n  }\n\n  body?.choices?.forEach((choice: ChatChoiceOutput) => {\n    let message: { content?: string; toolCalls?: Array<ChatCompletionsToolCallOutput> } = {};\n\n    if (choice.message.content) {\n      message.content = choice.message.content;\n    }\n    if (choice.message.tool_calls) {\n      message.toolCalls = choice.message.tool_calls;\n    }\n\n    if (!isContentRecordingEnabled()) {\n      message = JSON.parse(JSON.stringify(message));\n      message.content = \"\";\n      if (message.toolCalls) {\n        message.toolCalls.forEach((toolCall) => {\n          if (toolCall.function.arguments) {\n            toolCall.function.arguments = \"\";\n          }\n          toolCall.function.name = \"\";\n        });\n      }\n    }\n\n    const response = {\n      finish_reason: choice.finish_reason,\n      index: choice.index,\n      message,\n    };\n    const attributes = {\n      \"gen_ai.system\": INFERENCE_GEN_AI_SYSTEM_NAME,\n      \"gen_ai.event.content\": JSON.stringify(response),\n    };\n\n    span.addEvent?.(\"gen_ai.choice\", { attributes });\n  });\n}\n\nfunction envVarToBoolean(key: string): boolean {\n  const value = process.env[key] ?? process.env[key.toLowerCase()];\n  return value !== \"false\" && value !== \"0\" && Boolean(value);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  type TracingClient,\n  type TracingContext,\n  type TracingSpan,\n  createTracingClient,\n} from \"@azure/core-tracing\";\nimport { getErrorMessage } from \"@azure/core-util\";\nimport { SDK_VERSION } from \"./constants.js\";\nimport { logger } from \"./logger.js\";\nimport {\n  getRequestBody,\n  getSpanName,\n  onStartTracing,\n  tryProcessError,\n  tryProcessResponse,\n} from \"./tracingHelper.js\";\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"inferenceTracingPolicy\";\n\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n */\nexport function tracingPolicy(): PipelinePolicy {\n  const tracingClient = createTracingClient({\n    namespace: \"Microsoft.CognitiveServices\",\n    packageName: \"@azure/ai-inference-rest\",\n    packageVersion: SDK_VERSION,\n  });\n  return {\n    name: tracingPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const url = new URL(request.url);\n      if (\n        !tracingClient ||\n        !url.href.endsWith(\"/chat/completions\") ||\n        getRequestBody(request)?.body?.stream\n      ) {\n        return next(request);\n      }\n\n      const { span, tracingContext } = tryCreateSpan(tracingClient, request) ?? {};\n\n      if (!span || !tracingContext) {\n        return next(request);\n      }\n\n      try {\n        request.tracingOptions ??= {};\n        request.tracingOptions.tracingContext = tracingContext;\n\n        onStartTracing(span, request, request.url);\n        const response = await tracingClient.withContext(tracingContext, next, request);\n        tryProcessResponse(span, response);\n        return response;\n      } catch (err: any) {\n        tryProcessError(span, err);\n        throw err;\n      } finally {\n        span.end();\n      }\n    },\n  };\n}\n\nfunction tryCreateSpan(\n  tracingClient: TracingClient,\n  request: PipelineRequest,\n): { span: TracingSpan; tracingContext: TracingContext } | undefined {\n  try {\n    // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n    const { span, updatedOptions } = tracingClient.startSpan(\n      getSpanName(request),\n      { tracingOptions: request.tracingOptions },\n      {\n        spanKind: \"client\",\n      },\n    );\n\n    return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n  } catch (e: any) {\n    logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport type { ClientOptions } from \"@azure-rest/core-client\";\nimport { getClient } from \"@azure-rest/core-client\";\nimport { logger } from \"./logger.js\";\nimport type { TokenCredential, KeyCredential } from \"@azure/core-auth\";\nimport { isKeyCredential } from \"@azure/core-auth\";\nimport type { ModelClient } from \"./clientDefinitions.js\";\nimport { tracingPolicy } from \"./tracingPolicy.js\";\n\n/** The optional parameters for the client */\nexport interface ModelClientOptions extends ClientOptions {\n  /** The api version option of the client */\n  apiVersion?: string;\n}\n\n/**\n * Initialize a new instance of `ModelClient`\n * @param endpointParam - The parameter endpointParam\n * @param credentials - uniquely identify client credential\n * @param options - the parameter for all optional parameters\n */\nexport default function createClient(\n  endpointParam: string,\n  credentials: TokenCredential | KeyCredential,\n  { apiVersion = \"2024-05-01-preview\", ...options }: ModelClientOptions = {},\n): ModelClient {\n  const endpointUrl = options.endpoint ?? options.baseUrl ?? `${endpointParam}`;\n  const userAgentInfo = `azsdk-js-ai-inference-rest/1.0.0-beta.6`;\n  const userAgentPrefix =\n    options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n      ? `${options.userAgentOptions.userAgentPrefix} ${userAgentInfo}`\n      : `${userAgentInfo}`;\n  options = {\n    ...options,\n    userAgentOptions: {\n      userAgentPrefix,\n    },\n    loggingOptions: {\n      logger: options.loggingOptions?.logger ?? logger.info,\n    },\n    credentials: {\n      scopes: options.credentials?.scopes ?? [\"https://ml.azure.com/.default\"],\n      apiKeyHeaderName: options.credentials?.apiKeyHeaderName ?? \"api-key\",\n    },\n  };\n\n  const client = getClient(endpointUrl, credentials, options) as ModelClient;\n\n  client.pipeline.removePolicy({ name: \"ApiVersionPolicy\" });\n  client.pipeline.addPolicy({\n    name: \"InferenceTracingPolicy\",\n    sendRequest: (req, next) => {\n      return tracingPolicy().sendRequest(req, next);\n    },\n  });\n  client.pipeline.addPolicy({\n    name: \"ClientApiVersionPolicy\",\n    sendRequest: (req, next) => {\n      // Use the apiVersion defined in request url directly\n      // Append one if there is no apiVersion and we have one at client options\n      const url = new URL(req.url);\n      if (!url.searchParams.get(\"api-version\") && apiVersion) {\n        req.url = `${req.url}${\n          Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"\n        }api-version=${apiVersion}`;\n      }\n\n      return next(req);\n    },\n  });\n  if (isKeyCredential(credentials)) {\n    client.pipeline.addPolicy({\n      name: \"customKeyCredentialPolicy\",\n      async sendRequest(request, next) {\n        request.headers.set(\"Authorization\", \"Bearer \" + credentials.key);\n        return next(request);\n      },\n    });\n  }\n\n  return client;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport type {\n  GetChatCompletions200Response,\n  GetChatCompletionsDefaultResponse,\n  GetEmbeddings200Response,\n  GetEmbeddingsDefaultResponse,\n  GetImageEmbeddings200Response,\n  GetImageEmbeddingsDefaultResponse,\n  GetModelInfo200Response,\n  GetModelInfoDefaultResponse,\n} from \"./responses.js\";\n\nconst responseMap: Record<string, string[]> = {\n  \"POST /chat/completions\": [\"200\"],\n  \"GET /info\": [\"200\"],\n  \"POST /embeddings\": [\"200\"],\n  \"POST /images/embeddings\": [\"200\"],\n};\n\nexport function isUnexpected(\n  response: GetChatCompletions200Response | GetChatCompletionsDefaultResponse,\n): response is GetChatCompletionsDefaultResponse;\nexport function isUnexpected(\n  response: GetModelInfo200Response | GetModelInfoDefaultResponse,\n): response is GetModelInfoDefaultResponse;\nexport function isUnexpected(\n  response: GetEmbeddings200Response | GetEmbeddingsDefaultResponse,\n): response is GetEmbeddingsDefaultResponse;\nexport function isUnexpected(\n  response: GetImageEmbeddings200Response | GetImageEmbeddingsDefaultResponse,\n): response is GetImageEmbeddingsDefaultResponse;\nexport function isUnexpected(\n  response:\n    | GetChatCompletions200Response\n    | GetChatCompletionsDefaultResponse\n    | GetModelInfo200Response\n    | GetModelInfoDefaultResponse\n    | GetEmbeddings200Response\n    | GetEmbeddingsDefaultResponse\n    | GetImageEmbeddings200Response\n    | GetImageEmbeddingsDefaultResponse,\n): response is\n  | GetChatCompletionsDefaultResponse\n  | GetModelInfoDefaultResponse\n  | GetEmbeddingsDefaultResponse\n  | GetImageEmbeddingsDefaultResponse {\n  const lroOriginal = response.headers[\"x-ms-original-url\"];\n  const url = new URL(lroOriginal ?? response.request.url);\n  const method = response.request.method;\n  let pathDetails = responseMap[`${method} ${url.pathname}`];\n  if (!pathDetails) {\n    pathDetails = getParametrizedPathSuccess(method, url.pathname);\n  }\n\n  return !pathDetails.includes(response.status);\n}\n\nfunction getParametrizedPathSuccess(method: string, path: string): string[] {\n  const pathParts = path.split(\"/\");\n  let matchedLen = -1,\n    matchedValue: string[] = [];\n  for (const [key, value] of Object.entries(responseMap)) {\n    // Extracting the path from the map key which is in format\n    // GET /path/foo\n    if (!key.startsWith(method)) {\n      continue;\n    }\n    const candidatePath = getPathFromMapKey(key);\n    // Get each part of the url path\n    const candidateParts = candidatePath.split(\"/\");\n\n    // track if we have found a match to return the values found.\n    let found = true;\n    for (let i = candidateParts.length - 1, j = pathParts.length - 1; i >= 1 && j >= 1; i--, j--) {\n      if (candidateParts[i]?.startsWith(\"{\") && candidateParts[i]?.indexOf(\"}\") !== -1) {\n        const start = candidateParts[i]!.indexOf(\"}\") + 1,\n          end = candidateParts[i]?.length;\n        // If the current part of the candidate is a \"template\" part\n        // Try to use the suffix of pattern to match the path\n        // {guid} ==> $\n        // {guid}:export ==> :export$\n        const isMatched = new RegExp(`${candidateParts[i]?.slice(start, end)}`).test(\n          pathParts[j] || \"\",\n        );\n\n        if (!isMatched) {\n          found = false;\n          break;\n        }\n        continue;\n      }\n\n      // If the candidate part is not a template and\n      // the parts don't match mark the candidate as not found\n      // to move on with the next candidate path.\n      if (candidateParts[i] !== pathParts[j]) {\n        found = false;\n        break;\n      }\n    }\n\n    // We finished evaluating the current candidate parts\n    // Update the matched value if and only if we found the longer pattern\n    if (found && candidatePath.length > matchedLen) {\n      matchedLen = candidatePath.length;\n      matchedValue = value;\n    }\n  }\n\n  return matchedValue;\n}\n\nfunction getPathFromMapKey(mapKey: string): string {\n  const pathStart = mapKey.indexOf(\"/\");\n  return mapKey.slice(pathStart);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport ModelClient from \"./modelClient.js\";\n\nexport * from \"./clientDefinitions.js\";\nexport * from \"./isUnexpected.js\";\nexport * from \"./modelClient.js\";\nexport * from \"./models.js\";\nexport * from \"./outputModels.js\";\nexport * from \"./parameters.js\";\nexport * from \"./responses.js\";\nexport type { ErrorModel } from \"@azure-rest/core-client\";\n\nexport default ModelClient;\n", "/**\n * @fileoverview Neural Domain Mapper - GNN-Powered Domain Relationship Analysis\n * \n * This module provides advanced domain mapping capabilities using Graph Neural Networks (GNN)\n * to analyze and understand complex relationships between software domains. It combines\n * machine learning with graph theory to automatically discover domain boundaries and\n * optimize software architecture decisions.\n * \n * **Key Features:**\n * - **GNN-Based Analysis**: Uses message passing neural networks to understand domain interactions\n * - **WASM Acceleration**: Leverages WebAssembly for high-performance tensor operations\n * - **Bazel Integration**: Enhanced analysis for Bazel-based monorepos with target metadata\n * - **Human-in-the-Loop**: Interactive validation through AGUI for critical decisions\n * - **Cross-Domain Dependencies**: Sophisticated dependency analysis with strength metrics\n * - **Cohesion Scoring**: Quantitative domain cohesion analysis for architecture optimization\n * \n * **Architecture Integration:**\n * This mapper is typically used within the Domain Discovery Bridge to enhance document-based\n * domain discovery with neural insights. It processes domain graphs generated from code\n * analysis and provides AI-powered recommendations for domain boundaries and relationships.\n * \n * **Performance Considerations:**\n * - Memory usage scales with O(n\u00B2) for n domains due to relationship matrix\n * - WASM acceleration provides 2-4x speedup for large domain graphs (>100 domains)\n * - Bazel metadata processing adds ~15% overhead but significantly improves accuracy\n * \n * @author Claude Code Zen Team\n * @version 1.0.0-alpha.43\n * @since 2024-01-01\n * \n * @example Basic Domain Mapping\n * ```typescript\n * const mapper = new NeuralDomainMapper();\n * \n * const domains = [\n *   { name: 'authentication', files: [...], dependencies: [...], confidenceScore: 0.8 },\n *   { name: 'user-management', files: [...], dependencies: [...], confidenceScore: 0.9 }\n * ];\n * \n * const dependencyGraph = {\n *   'authentication': { 'user-management': 0.7 },\n *   'user-management': { 'authentication': 0.3 }\n * };\n * \n * const mapping = await mapper.mapDomainRelationships(domains, dependencyGraph);\n * console.log(`Found ${mapping.relationships.length} domain relationships`);\n * ```\n * \n * @example Bazel-Enhanced Analysis\n * ```typescript\n * const bazelMetadata = {\n *   targets: [\n *     { package: 'authentication', type: 'java_library', deps: [...] },\n *     { package: 'user-management', type: 'java_binary', deps: [...] }\n *   ],\n *   languages: ['java', 'typescript'],\n *   targetDependencies: { ... }\n * };\n * \n * const enhancedMapping = await mapper.mapDomainRelationships(\n *   domains, \n *   dependencyGraph, \n *   bazelMetadata\n * );\n * \n * // Enhanced mapping includes Bazel-specific insights\n * console.log(`Bazel targets analyzed: ${enhancedMapping.bazelEnhancements.totalTargets}`);\n * ```\n * \n * @example Human Validation Workflow\n * ```typescript\n * try {\n *   const mapping = await mapper.mapDomainRelationships(domains, dependencies);\n *   // Mapping approved by human validator\n *   console.log('Domain boundaries validated and approved');\n * } catch (error) {\n *   if (error.message.includes('Human did not approve')) {\n *     // Handle human rejection of suggested boundaries\n *     console.log('Suggested boundaries rejected, refinement needed');\n *   }\n * }\n * ```\n */\n\nimport { GNNModel } from '../../neural/models/presets/gnn.js';\nimport { WASMNeuralAccelerator } from '../../neural/wasm/wasm-neural-accelerator.ts';\nimport { LLMIntegrationService } from '../services/llm-integration.service.js';\n\nimport type { DependencyGraph, Domain, DomainRelationshipMap } from './types.ts';\n\n/**\n * Neural Domain Mapper class implementing GNN-based domain relationship analysis.\n * \n * This class combines Graph Neural Networks with domain-specific knowledge to provide\n * intelligent insights into software architecture. It processes domain information,\n * dependencies, and optional build system metadata to generate comprehensive\n * relationship mappings with confidence scores and optimization recommendations.\n * \n * **Technical Architecture:**\n * - **GNN Core**: Uses message passing neural network for relationship inference\n * - **WASM Acceleration**: Optional WebAssembly acceleration for large-scale analysis\n * - **Bazel Integration**: Specialized handling of Bazel workspace metadata\n * - **Human Validation**: AGUI integration for critical decision validation\n * \n * **Use Cases:**\n * - Monorepo architecture optimization and domain boundary discovery\n * - Legacy system domain extraction and modernization planning\n * - Microservice decomposition strategy with data-driven insights\n * - Build system optimization through dependency analysis\n * \n * @class NeuralDomainMapper\n */\nexport class NeuralDomainMapper {\n  /**\n   * Graph Neural Network model instance for domain relationship analysis.\n   * Configured specifically for domain-level features and relationship patterns.\n   * @private\n   * @type {GNNModel}\n   */\n  private gnnModel: unknown;\n\n  /**\n   * WebAssembly neural accelerator for performance optimization.\n   * Provides significant speedup for tensor operations on large domain graphs.\n   * @private\n   * @type {WasmNeuralAccelerator}\n   */\n  private _wasmAccelerator: unknown;\n\n  /**\n   * LLM Integration Service for advanced domain analysis and validation.\n   * Provides intelligent analysis using Claude Code or Gemini CLI without external API keys.\n   * @private\n   * @type {LLMIntegrationService}\n   */\n  private _llmService: LLMIntegrationService;\n\n  /**\n   * Creates a new Neural Domain Mapper with optimized GNN and WASM acceleration.\n   * \n   * The constructor initializes both the GNN model with domain-specific parameters\n   * and the WASM accelerator for high-performance tensor operations. The GNN is\n   * configured with domain-appropriate features (file counts, dependency metrics, etc.)\n   * and the WASM accelerator provides 2-4x speedup for large domain analyses.\n   * \n   * @constructor\n   * @param {Object} [options={}] - Configuration options for the mapper\n   * @param {boolean} [options.enableABTesting=false] - Enable GPT-5 vs Grok-3 A/B testing for complex analysis\n   * \n   * @example\n   * ```typescript\n   * // Create mapper instance (A/B testing disabled by default - GPT-5 is fully free)\n   * const mapper = new NeuralDomainMapper();\n   * \n   * // Mapper is ready to analyze domain relationships using GPT-5\n   * const domains = await loadDomainData();\n   * const mapping = await mapper.mapDomainRelationships(domains, dependencies);\n   * ```\n   */\n  private _enableABTesting: boolean;\n\n  constructor(options = {}) {\n    const { enableABTesting = false } = options;\n    this._enableABTesting = enableABTesting;\n\n    /**\n     * Initialize GNN model with domain-specific configuration.\n     * Uses 3 node features: file count, dependency count, confidence score.\n     */\n    this.gnnModel = new GNNModel();\n\n    /**\n     * Initialize WASM accelerator for performance optimization.\n     * Provides vectorized operations for large domain matrices.\n     */\n    this._wasmAccelerator = new WasmNeuralAccelerator();\n\n    /**\n     * Initialize LLM Integration Service for intelligent analysis and validation.\n     * Uses Claude Code, Gemini CLI, or GitHub Models (free GPT-5) for enhanced domain insights.\n     */\n    this._llmService = new LLMIntegrationService({\n      projectPath: process.cwd(),\n      preferredProvider: 'github-models', // Free GPT-5 with 200k context for complex analysis\n      model: 'openai/gpt-5',\n      temperature: 0.1, // Low temperature for consistent domain analysis\n      maxTokens: 100000, // Use GPT-5's full output capacity (100k max output)\n      debug: false\n    });\n  }\n\n  /**\n   * Maps domain relationships using GNN analysis with optional Bazel metadata enhancement.\n   * \n   * This is the primary method for analyzing domain relationships. It performs the following steps:\n   * 1. **Data Conversion**: Transforms domain and dependency data into GNN-compatible graph format\n   * 2. **GNN Analysis**: Runs message passing neural network to understand domain relationships\n   * 3. **WASM Acceleration**: Optionally accelerates tensor operations for large graphs\n   * 4. **Boundary Extraction**: Extracts domain boundaries and relationship insights from GNN predictions\n   * 5. **Human Validation**: Presents results to human validator through AGUI interface\n   * 6. **Result Assembly**: Combines neural insights with metadata for comprehensive mapping\n   * \n   * **Bazel Enhancement**: When Bazel metadata is provided, the analysis is enhanced with:\n   * - Target type information (library, binary, test) for better clustering\n   * - Language compatibility analysis for cross-language boundaries\n   * - Build dependency strength metrics for more accurate relationship scoring\n   * \n   * **Performance**: Analysis complexity is O(n\u00B2) for n domains plus GNN forward pass.\n   * WASM acceleration is automatically enabled for graphs with >1000 tensor operations.\n   * \n   * @async\n   * @method mapDomainRelationships\n   * @param {Domain[]} domains - Array of domain objects with files, dependencies, and confidence scores\n   * @param {DependencyGraph} dependencies - Domain dependency graph as adjacency map\n   * @param {Record<string, unknown>} [bazelMetadata] - Optional Bazel workspace metadata for enhanced analysis\n   * \n   * @returns {Promise<DomainRelationshipMap>} Comprehensive domain relationship mapping\n   * @returns {Array<{source: number, target: number, strength: number}>} returns.relationships - Domain relationships with strength scores\n   * @returns {Array<{domainName: string, score: number}>} returns.cohesionScores - Cohesion analysis for each domain\n   * @returns {Array<{sourceDomain: string, targetDomain: string, count: number}>} returns.crossDomainDependencies - Cross-domain dependency counts\n   * @returns {Object} [returns.bazelEnhancements] - Bazel-specific insights when metadata provided\n   * \n   * @throws {Error} When domain data is invalid or insufficient for analysis\n   * @throws {Error} When GNN analysis fails due to model or data issues\n   * @throws {Error} When human validation rejects suggested boundaries\n   * \n   * @example Basic Domain Analysis\n   * ```typescript\n   * const domains = [\n   *   {\n   *     name: 'user-service',\n   *     files: ['user.ts', 'user-repository.ts'],\n   *     dependencies: ['common-utils'],\n   *     confidenceScore: 0.9\n   *   },\n   *   {\n   *     name: 'order-service', \n   *     files: ['order.ts', 'order-repository.ts'],\n   *     dependencies: ['common-utils', 'user-service'],\n   *     confidenceScore: 0.8\n   *   }\n   * ];\n   * \n   * const dependencies = {\n   *   'user-service': { 'common-utils': 0.5 },\n   *   'order-service': { 'user-service': 0.7, 'common-utils': 0.3 }\n   * };\n   * \n   * const mapping = await mapper.mapDomainRelationships(domains, dependencies);\n   * \n   * // Analyze results\n   * console.log(`Found ${mapping.relationships.length} relationships`);\n   * for (const rel of mapping.relationships) {\n   *   const source = domains[rel.source];\n   *   const target = domains[rel.target];\n   *   console.log(`${source.name} -> ${target.name}: strength ${rel.strength}`);\n   * }\n   * ```\n   * \n   * @example Bazel-Enhanced Analysis\n   * ```typescript\n   * const bazelMetadata = {\n   *   targets: [\n   *     { \n   *       package: 'user-service', \n   *       type: 'java_library', \n   *       deps: ['//common:utils'],\n   *       srcs: ['User.java', 'UserRepository.java']\n   *     },\n   *     { \n   *       package: 'order-service', \n   *       type: 'java_binary',\n   *       deps: ['//user-service:lib', '//common:utils'],\n   *       srcs: ['OrderMain.java']\n   *     }\n   *   ],\n   *   languages: ['java'],\n   *   targetDependencies: {\n   *     'user-service': { 'common': 1 },\n   *     'order-service': { 'user-service': 1, 'common': 1 }\n   *   }\n   * };\n   * \n   * const enhancedMapping = await mapper.mapDomainRelationships(\n   *   domains, \n   *   dependencies, \n   *   bazelMetadata\n   * );\n   * \n   * // Enhanced insights available\n   * console.log('Bazel insights:', enhancedMapping.bazelEnhancements);\n   * console.log('Total targets analyzed:', enhancedMapping.bazelEnhancements.totalTargets);\n   * \n   * // Relationship insights include Bazel-specific data\n   * for (const rel of enhancedMapping.relationships) {\n   *   if (rel.bazelInsights) {\n   *     console.log('Target types:', rel.bazelInsights.targetTypes);\n   *     console.log('Shared languages:', rel.bazelInsights.sharedLanguages);\n   *   }\n   * }\n   * ```\n   * \n   * @example Error Handling and Validation\n   * ```typescript\n   * try {\n   *   const mapping = await mapper.mapDomainRelationships(domains, dependencies);\n   *   \n   *   // Successful validation - proceed with recommendations\n   *   console.log('Domain boundaries approved by human validator');\n   *   \n   *   // Apply architectural recommendations\n   *   for (const score of mapping.cohesionScores) {\n   *     if (score.score < 0.5) {\n   *       console.warn(`Domain ${score.domainName} has low cohesion: ${score.score}`);\n   *     }\n   *   }\n   *   \n   * } catch (error) {\n   *   if (error.message.includes('Human did not approve')) {\n   *     // Handle human rejection - refine analysis or present alternatives\n   *     console.log('Boundaries rejected - consider domain splitting or merging');\n   *     \n   *   } else if (error.message.includes('GNN analysis failed')) {\n   *     // Handle technical failures - check data quality or model parameters\n   *     console.error('Neural analysis failed - verify domain data:', error);\n   *     \n   *   } else {\n   *     // Unknown error\n   *     console.error('Domain mapping failed:', error);\n   *   }\n   * }\n   * ```\n   */\n  async mapDomainRelationships(\n    domains: Domain[],\n    dependencies: DependencyGraph,\n    bazelMetadata?: Record<string, unknown>\n  ): Promise<DomainRelationshipMap> {\n    // Convert to graph format with enhanced Bazel data if available\n    const graphData = bazelMetadata\n      ? this.convertBazelToGraphData(domains, dependencies, bazelMetadata)\n      : this.convertToGraphData(domains, dependencies);\n\n    // Run GNN analysis with WASM acceleration\n    const predictions = await (\n      this.gnnModel as {\n        forward: (\n          data: unknown\n        ) => Promise<{ shape: number[]; data: Float32Array; [key: number]: number }>;\n      }\n    ).forward(graphData);\n\n    // Use WASM accelerator for performance optimization\n    if (this._wasmAccelerator && predictions.data && predictions.data.length > 1000) {\n      // Accelerate large tensor operations\n      await (\n        this._wasmAccelerator as {\n          optimizeTensor: (tensor: { data: Float32Array }) => Promise<void>;\n        }\n      ).optimizeTensor(predictions);\n    }\n\n    // Extract domain boundaries with Bazel-enhanced analysis\n    const boundaries = bazelMetadata\n      ? this.extractBazelEnhancedBoundaries(\n          predictions,\n          domains,\n          (graphData as { adjacency: unknown[][] }).adjacency,\n          bazelMetadata\n        )\n      : this.extractBoundaries(\n          predictions,\n          domains,\n          (graphData as { adjacency: unknown[][] }).adjacency\n        );\n\n    // Enhanced LLM validation using smart provider selection or A/B testing\n    let llmAnalysis;\n    \n    // Use GPT-5 for all domain analysis (fully free, excellent performance)  \n    llmAnalysis = await this._llmService.analyzeSmart({\n      task: 'domain-analysis',\n      context: {\n        domains,\n        dependencies,\n        gnnResults: boundaries,\n        bazelMetadata\n      },\n      prompt: `\n        Analyze these GNN-suggested domain boundaries and provide validation:\n        \n        Domains: ${domains.map(d => d.name).join(', ')}\n        Suggested Boundaries: ${JSON.stringify(boundaries, null, 2)}\n        \n        Please evaluate:\n        1. Domain boundary coherence and logical separation\n        2. Dependency flow analysis and coupling strength\n        3. Potential architecture improvements\n        4. Validation: Should these boundaries be approved? (yes/no)\n        \n        Respond with: {\"approved\": boolean, \"reasoning\": string, \"improvements\": string[]}\n      `,\n      requiresFileOperations: false\n    });\n\n    let approvalResult;\n    try {\n      approvalResult = typeof llmAnalysis.data === 'string' \n        ? JSON.parse(llmAnalysis.data) \n        : llmAnalysis.data;\n    } catch {\n      // Fallback to simple approval if JSON parsing fails\n      const approved = llmAnalysis.data?.toLowerCase?.().includes('yes') || \n                      llmAnalysis.data?.approved === true;\n      approvalResult = { approved, reasoning: 'LLM analysis completed', improvements: [] };\n    }\n\n    if (approvalResult.approved) {\n      // Enhance boundaries with LLM insights if available\n      return {\n        ...boundaries,\n        llmInsights: {\n          reasoning: approvalResult.reasoning,\n          suggestedImprovements: approvalResult.improvements || [],\n          analysisProvider: llmAnalysis.provider,\n          analysisTime: llmAnalysis.executionTime\n        }\n      };\n    } else {\n      throw new Error(`LLM validation rejected domain boundaries: ${approvalResult.reasoning}`);\n    }\n  }\n\n  private async askHuman(questionJson: string): Promise<string> {\n    // TODO: Implement actual human interaction using AGUI\n    // For now, simulate a direct approval\n    const question = JSON.parse(questionJson);\n    console.log(`AGUI Question: ${question.question}`);\n    console.log(`Context: ${JSON.stringify(question.context, null, 2)}`);\n    console.log(`Options: ${question.options.join(', ')}`);\n    return 'yes'; // Simulate approval\n  }\n\n  private convertToGraphData(domains: Domain[], dependencies: DependencyGraph): unknown {\n    const numDomains = domains.length;\n    const domainIndexMap = new Map(domains.map((d, i) => [d.name, i]));\n\n    // Create node features\n    const nodeFeatures = new Float32Array(numDomains * 3); // 3 features per node\n    for (let i = 0; i < numDomains; i++) {\n      const domain = domains[i];\n      if (domain) {\n        nodeFeatures[i * 3 + 0] = domain.files.length;\n        nodeFeatures[i * 3 + 1] = domain.dependencies.length;\n        nodeFeatures[i * 3 + 2] = domain.confidenceScore;\n      }\n    }\n    (nodeFeatures as any).shape = [numDomains, 3];\n\n    // Create adjacency list and edge features\n    const adjacency = [] as unknown[];\n    const edgeFeaturesList = [] as unknown[];\n    for (const [sourceDomain, targetDomains] of Object.entries(dependencies)) {\n      const sourceIndex = domainIndexMap.get(sourceDomain);\n      if (sourceIndex === undefined) continue;\n\n      for (const targetDomain of Object.keys(targetDomains)) {\n        const targetIndex = domainIndexMap.get(targetDomain);\n        if (targetIndex === undefined) continue;\n\n        adjacency.push([sourceIndex, targetIndex]);\n        edgeFeaturesList.push(targetDomains[targetDomain]); // Using the number of dependencies as the edge feature\n      }\n    }\n    const edgeFeatures = new Float32Array(edgeFeaturesList.length);\n    for (let i = 0; i < edgeFeaturesList.length; i++) {\n      edgeFeatures[i] = edgeFeaturesList[i] as number;\n    }\n    (edgeFeatures as any).shape = [adjacency.length, 1];\n\n    return {\n      nodes: nodeFeatures,\n      edges: edgeFeatures,\n      adjacency: adjacency,\n    };\n  }\n\n  private extractBoundaries(\n    predictions: { shape: number[]; [key: number]: number },\n    domains: Domain[],\n    adjacency: unknown[][]\n  ): DomainRelationshipMap {\n    const relationships = [] as unknown[];\n    const cohesionScores = [] as { domainName: string; score: number }[];\n    const crossDomainDependencies = new Map<string, number>();\n    const numDomains = predictions.shape[0];\n\n    // Calculate cohesion scores\n    for (let i = 0; i < (numDomains ?? 0); i++) {\n      let cohesion = 0;\n      for (let k = 0; k < (predictions.shape?.[1] ?? 0); k++) {\n        cohesion += (predictions[i * (predictions.shape?.[1] ?? 0) + k] ?? 0) ** 2;\n      }\n      const domain = domains[i];\n      if (domain) {\n        cohesionScores.push({ domainName: domain.name, score: cohesion });\n      }\n    }\n\n    // Identify cross-domain dependencies\n    for (const [sourceIndex, targetIndex] of adjacency) {\n      if (sourceIndex === undefined || targetIndex === undefined) continue;\n      const sourceDomain = domains[sourceIndex as number];\n      const targetDomain = domains[targetIndex as number];\n      if (!sourceDomain || !targetDomain) continue;\n      const sourceDomainName = sourceDomain.name;\n      const targetDomainName = targetDomain.name;\n      const key = `${sourceDomainName}->${targetDomainName}`;\n      crossDomainDependencies.set(key, (crossDomainDependencies.get(key) || 0) + 1);\n    }\n\n    for (let i = 0; i < (numDomains ?? 0); i++) {\n      for (let j = i + 1; j < (numDomains ?? 0); j++) {\n        // This is a placeholder for a more sophisticated relationship calculation.\n        // For now, we'll just use the dot product of the output vectors as the strength.\n        let strength = 0;\n        for (let k = 0; k < (predictions.shape?.[1] ?? 0); k++) {\n          strength +=\n            (predictions[i * (predictions.shape?.[1] ?? 0) + k] ?? 0) *\n            (predictions[j * (predictions.shape?.[1] ?? 0) + k] ?? 0);\n        }\n\n        if (strength > 0.5) {\n          // Assuming a threshold of 0.5\n          relationships.push({\n            source: i, // Using the index as the domain identifier for now\n            target: j,\n            strength: strength,\n          });\n        }\n      }\n    }\n\n    return {\n      relationships: relationships as { source: number; target: number; strength: number }[],\n      cohesionScores: cohesionScores,\n      crossDomainDependencies: Array.from(crossDomainDependencies.entries()).map(([key, count]) => {\n        const [sourceDomain, targetDomain] = key.split('->');\n        return { sourceDomain: sourceDomain || '', targetDomain: targetDomain || '', count };\n      }),\n    };\n  }\n\n  /**\n   * Convert Bazel workspace data to enhanced graph format for GNN analysis.\n   * Incorporates target types, language information, and explicit dependencies.\n   *\n   * @param domains\n   * @param dependencies\n   * @param bazelMetadata\n   */\n  private convertBazelToGraphData(\n    domains: Domain[],\n    dependencies: DependencyGraph,\n    bazelMetadata: Record<string, unknown>\n  ): {\n    nodes: Float32Array & { shape: number[] };\n    edges: Float32Array & { shape: number[] };\n    adjacency: unknown[];\n    metadata: Record<string, unknown>;\n  } {\n    const numDomains = domains.length;\n    const domainIndexMap = new Map(domains.map((d, i) => [d.name, i]));\n\n    // Enhanced node features for Bazel workspaces (6 features per node)\n    const nodeFeatures = new Float32Array(numDomains * 6);\n    for (let i = 0; i < numDomains; i++) {\n      const domain = domains[i];\n      if (domain) {\n        const packageTargets = Array.isArray((bazelMetadata)['targets'])\n          ? ((bazelMetadata)['targets']).filter(\n              (t: any) => t.package === domain.name\n            )\n          : [];\n\n        nodeFeatures[i * 6 + 0] = domain.files.length; // File count\n        nodeFeatures[i * 6 + 1] = domain.dependencies.length; // Dependency count\n        nodeFeatures[i * 6 + 2] = domain.confidenceScore; // Confidence\n        nodeFeatures[i * 6 + 3] = packageTargets.length; // Bazel target count\n        nodeFeatures[i * 6 + 4] = this.calculateLanguageComplexity(\n          packageTargets,\n          Array.isArray((bazelMetadata)['languages'])\n            ? ((bazelMetadata)['languages'] as string[])\n            : []\n        ); // Language complexity\n        nodeFeatures[i * 6 + 5] = this.calculateTargetTypeDistribution(packageTargets); // Target type diversity\n      }\n    }\n    (nodeFeatures as any).shape = [numDomains, 6];\n\n    // Enhanced edge features using Bazel target dependencies\n    const adjacency = [] as unknown[];\n    const edgeFeaturesList = [] as unknown[];\n\n    // Use Bazel's explicit target dependencies for more accurate relationships\n    if (\n      (bazelMetadata)['targetDependencies'] &&\n      typeof (bazelMetadata)['targetDependencies'] === 'object'\n    ) {\n      for (const [sourcePkg, targets] of Object.entries(\n        (bazelMetadata)['targetDependencies'] as Record<\n          string,\n          Record<string, number>\n        >\n      )) {\n        const sourceIndex = domainIndexMap.get(sourcePkg);\n        if (sourceIndex === undefined) continue;\n\n        for (const [targetPkg, count] of Object.entries(targets)) {\n          const targetIndex = domainIndexMap.get(targetPkg);\n          if (targetIndex === undefined) continue;\n\n          adjacency.push([sourceIndex, targetIndex]);\n\n          // Enhanced edge features: [dependency_count, target_type_similarity, language_compatibility]\n          const sourceTargets = Array.isArray((bazelMetadata)['targets'])\n            ? ((bazelMetadata)['targets']).filter(\n                (t: any) => t.package === sourcePkg\n              )\n            : [];\n          const targetTargets = Array.isArray((bazelMetadata)['targets'])\n            ? ((bazelMetadata)['targets']).filter(\n                (t: any) => t.package === targetPkg\n              )\n            : [];\n\n          edgeFeaturesList.push([\n            count, // Raw dependency count\n            this.calculateTargetTypeSimilarity(sourceTargets, targetTargets), // Target type similarity\n            this.calculateLanguageCompatibility(\n              sourceTargets,\n              targetTargets,\n              Array.isArray((bazelMetadata)['languages'])\n                ? ((bazelMetadata)['languages'] as string[])\n                : []\n            ), // Language compatibility\n          ]);\n        }\n      }\n    } else {\n      // Fallback to regular dependency analysis\n      for (const [sourceDomain, targetDomains] of Object.entries(dependencies)) {\n        const sourceIndex = domainIndexMap.get(sourceDomain);\n        if (sourceIndex === undefined) continue;\n\n        for (const [targetDomain, count] of Object.entries(targetDomains)) {\n          const targetIndex = domainIndexMap.get(targetDomain);\n          if (targetIndex === undefined) continue;\n\n          adjacency.push([sourceIndex, targetIndex]);\n          edgeFeaturesList.push([count, 0.5, 0.5]); // Default values when Bazel data unavailable\n        }\n      }\n    }\n\n    const flatFeatures = edgeFeaturesList.flat();\n    const edgeFeatures = new Float32Array(flatFeatures.length);\n    for (let i = 0; i < flatFeatures.length; i++) {\n      edgeFeatures[i] = flatFeatures[i] as number;\n    }\n    (edgeFeatures as any).shape = [adjacency.length, 3];\n\n    return {\n      nodes: nodeFeatures as Float32Array & { shape: number[] },\n      edges: edgeFeatures as Float32Array & { shape: number[] },\n      adjacency: adjacency,\n      metadata: {\n        bazelTargets: (bazelMetadata)['targets'],\n        languages: (bazelMetadata)['languages'],\n        toolchains: (bazelMetadata)['toolchains'],\n      },\n    };\n  }\n\n  /**\n   * Extract enhanced domain boundaries using Bazel metadata.\n   *\n   * @param predictions\n   * @param domains\n   * @param adjacency\n   * @param bazelMetadata\n   */\n  private extractBazelEnhancedBoundaries(\n    predictions: { shape: number[]; [key: number]: number },\n    domains: Domain[],\n    adjacency: unknown[][],\n    bazelMetadata: Record<string, unknown>\n  ): DomainRelationshipMap {\n    const relationships = [] as unknown[];\n    const cohesionScores = [] as { domainName: string; score: number }[];\n    const crossDomainDependencies = new Map<string, number>();\n    const numDomains = predictions.shape[0];\n\n    // Enhanced cohesion scores incorporating Bazel target analysis\n    for (let i = 0; i < (numDomains ?? 0); i++) {\n      let cohesion = 0;\n      for (let k = 0; k < (predictions.shape?.[1] ?? 0); k++) {\n        cohesion += (predictions[i * (predictions.shape?.[1] ?? 0) + k] ?? 0) ** 2;\n      }\n\n      // Boost cohesion for domains with strong Bazel target relationships\n      const domain = domains[i];\n      if (domain) {\n        const domainTargets = Array.isArray((bazelMetadata)['targets'])\n          ? ((bazelMetadata)['targets']).filter(\n              (t: any) => t.package === domain.name\n            )\n          : [];\n        const targetTypeBonus = this.calculateTargetCohesionBonus(domainTargets);\n\n        cohesionScores.push({\n          domainName: domain.name,\n          score: cohesion * (1 + targetTypeBonus),\n        });\n      }\n    }\n\n    // Enhanced cross-domain dependencies using Bazel's explicit relationships\n    if (\n      (bazelMetadata)['targetDependencies'] &&\n      typeof (bazelMetadata)['targetDependencies'] === 'object'\n    ) {\n      for (const [sourcePkg, targets] of Object.entries(\n        (bazelMetadata)['targetDependencies'] as Record<\n          string,\n          Record<string, number>\n        >\n      )) {\n        for (const [targetPkg, count] of Object.entries(targets)) {\n          const key = `${sourcePkg}->${targetPkg}`;\n          crossDomainDependencies.set(key, count);\n        }\n      }\n    } else {\n      // Fallback to adjacency matrix analysis\n      for (const [sourceIndex, targetIndex] of adjacency) {\n        if (sourceIndex === undefined || targetIndex === undefined) continue;\n        const sourceDomain = domains[sourceIndex as number];\n        const targetDomain = domains[targetIndex as number];\n        if (!sourceDomain || !targetDomain) continue;\n        const sourceDomainName = sourceDomain.name;\n        const targetDomainName = targetDomain.name;\n        const key = `${sourceDomainName}->${targetDomainName}`;\n        crossDomainDependencies.set(key, (crossDomainDependencies.get(key) || 0) + 1);\n      }\n    }\n\n    // Enhanced relationship extraction with Bazel-specific insights\n    for (let i = 0; i < (numDomains ?? 0); i++) {\n      for (let j = i + 1; j < (numDomains ?? 0); j++) {\n        let strength = 0;\n        for (let k = 0; k < (predictions.shape?.[1] ?? 0); k++) {\n          strength +=\n            (predictions[i * (predictions.shape?.[1] ?? 0) + k] ?? 0) *\n            (predictions[j * (predictions.shape?.[1] ?? 0) + k] ?? 0);\n        }\n\n        // Enhance relationship strength with Bazel target analysis\n        const iDomain = domains[i];\n        const jDomain = domains[j];\n        if (!iDomain || !jDomain) continue;\n        const iTargets = Array.isArray((bazelMetadata)['targets'])\n          ? ((bazelMetadata)['targets']).filter(\n              (t: any) => t.package === iDomain.name\n            )\n          : [];\n        const jTargets = Array.isArray((bazelMetadata)['targets'])\n          ? ((bazelMetadata)['targets']).filter(\n              (t: any) => t.package === jDomain.name\n            )\n          : [];\n        const bazelBonus = this.calculateBazelRelationshipBonus(iTargets, jTargets);\n\n        const enhancedStrength = strength * (1 + bazelBonus);\n\n        if (enhancedStrength > 0.4) {\n          // Slightly lower threshold due to enhancement\n          relationships.push({\n            source: i,\n            target: j,\n            strength: enhancedStrength,\n            bazelInsights: {\n              targetTypes: [\n                ...new Set([\n                  ...iTargets.map((t: any) => t.type),\n                  ...jTargets.map((t: any) => t.type),\n                ]),\n              ],\n              sharedLanguages: this.findSharedLanguages(\n                iTargets,\n                jTargets,\n                Array.isArray((bazelMetadata)['languages'])\n                  ? ((bazelMetadata)['languages'] as string[])\n                  : []\n              ),\n              dependencyStrength: bazelBonus,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      relationships: relationships as { source: number; target: number; strength: number }[],\n      cohesionScores: cohesionScores,\n      crossDomainDependencies: Array.from(crossDomainDependencies.entries()).map(([key, count]) => {\n        const [sourceDomain, targetDomain] = key.split('->');\n        return { sourceDomain: sourceDomain || '', targetDomain: targetDomain || '', count };\n      }),\n      bazelEnhancements: (() => {\n        const enhancement = {\n          totalTargets: Array.isArray((bazelMetadata)['targets'])\n            ? ((bazelMetadata)['targets']).length\n            : 0,\n          languages: Array.isArray((bazelMetadata)['languages'])\n            ? ((bazelMetadata)['languages'] as string[])\n            : [],\n          toolchains: Array.isArray((bazelMetadata)['toolchains'])\n            ? ((bazelMetadata)['toolchains'] as string[])\n            : [],\n        };\n        const workspaceName = (bazelMetadata)['workspaceName'];\n        if (workspaceName && typeof workspaceName === 'string') {\n          return { ...enhancement, workspaceName };\n        }\n        return enhancement;\n      })(),\n    };\n  }\n\n  // Helper methods for Bazel-specific calculations\n\n  private calculateLanguageComplexity(\n    targets: Array<{ type: string }>,\n    languages: string[]\n  ): number {\n    const targetLanguages = new Set<string>();\n    for (const target of targets) {\n      // Infer language from target type\n      if (target.type.startsWith('java_')) targetLanguages.add('java');\n      if (target.type.startsWith('py_')) targetLanguages.add('python');\n      if (target.type.startsWith('go_')) targetLanguages.add('go');\n      if (target.type.startsWith('cc_')) targetLanguages.add('cpp');\n      if (target.type.startsWith('ts_')) targetLanguages.add('typescript');\n    }\n    return targetLanguages.size / Math.max(languages.length, 1);\n  }\n\n  private calculateTargetTypeDistribution(targets: Array<{ type: string }>): number {\n    const types = new Set(targets.map((t) => t.type.split('_')[1] || t.type)); // library, binary, test\n    return types.size / Math.max(targets.length, 1);\n  }\n\n  private calculateTargetTypeSimilarity(\n    sourceTargets: Array<{ type: string }>,\n    targetTargets: Array<{ type: string }>\n  ): number {\n    const sourceTypes = new Set(sourceTargets.map((t) => t.type));\n    const targetTypes = new Set(targetTargets.map((t) => t.type));\n    const intersection = new Set([...sourceTypes].filter((t) => targetTypes.has(t)));\n    const union = new Set([...sourceTypes, ...targetTypes]);\n    return union.size > 0 ? intersection.size / union.size : 0;\n  }\n\n  private calculateLanguageCompatibility(\n    sourceTargets: Array<{ type: string }>,\n    targetTargets: Array<{ type: string }>,\n    _languages: string[]\n  ): number {\n    const sourceLangs = this.extractLanguagesFromTargets(sourceTargets);\n    const targetLangs = this.extractLanguagesFromTargets(targetTargets);\n    const intersection = sourceLangs.filter((lang) => targetLangs.includes(lang));\n    const union = [...new Set([...sourceLangs, ...targetLangs])];\n    return union.length > 0 ? intersection.length / union.length : 0;\n  }\n\n  private calculateTargetCohesionBonus(targets: Array<{ type: string }>): number {\n    // Higher bonus for packages with diverse but related target types\n    const types = targets.map((t) => t.type);\n    const hasLibrary = types.some((t) => t.includes('_library'));\n    const hasBinary = types.some((t) => t.includes('_binary'));\n    const hasTest = types.some((t) => t.includes('_test'));\n\n    // Ideal package has library + test, optionally binary\n    let bonus = 0;\n    if (hasLibrary && hasTest) bonus += 0.2;\n    if (hasBinary) bonus += 0.1;\n    return Math.min(bonus, 0.3); // Cap at 30% bonus\n  }\n\n  private calculateBazelRelationshipBonus(\n    iTargets: Array<{ package?: string; deps?: string[] }>,\n    jTargets: Array<{ package?: string }>\n  ): number {\n    // Check for direct target dependencies\n    for (const target of iTargets) {\n      if (target.deps) {\n        for (const dep of target.deps) {\n          const depPkg = dep.match(/^\\/\\/([^:]+):/)?.[1];\n          if (jTargets.some((jt) => jt.package === depPkg)) {\n            return 0.3; // Strong relationship bonus\n          }\n        }\n      }\n    }\n    return 0;\n  }\n\n  private findSharedLanguages(\n    iTargets: Array<{ type: string }>,\n    jTargets: Array<{ type: string }>,\n    _languages: string[]\n  ): string[] {\n    const iLangs = this.extractLanguagesFromTargets(iTargets);\n    const jLangs = this.extractLanguagesFromTargets(jTargets);\n    return iLangs.filter((lang) => jLangs.includes(lang));\n  }\n\n  private extractLanguagesFromTargets(targets: Array<{ type: string }>): string[] {\n    const languages: string[] = [];\n    for (const target of targets) {\n      if (target.type.startsWith('java_')) languages.push('java');\n      if (target.type.startsWith('py_')) languages.push('python');\n      if (target.type.startsWith('go_')) languages.push('go');\n      if (target.type.startsWith('cc_')) languages.push('cpp');\n      if (target.type.startsWith('ts_')) languages.push('typescript');\n    }\n    return [...new Set(languages)];\n  }\n}\n"],
  "mappings": "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",
  "names": ["http", "https", "req", "http", "Agent", "HttpsProxyAgent", "HttpProxyAgent", "v", "process", "enabledNamespaces", "logger", "_a", "randomUUID", "_a", "_b", "_c", "_d", "randomUUID", "_a", "request", "request", "_a", "_b", "_c", "logger", "_a", "request", "request", "process", "process", "versions", "request", "request", "_a", "_a", "_b", "logger", "request", "_a", "_b", "_a", "_a", "_a", "request", "_a", "request", "isReadableStream", "_d", "_a", "_c", "randomUUID", "request", "_a", "request", "request", "_b", "_a", "request", "_b", "_a", "request", "_b", "_a", "request", "_b", "_a", "allowInsecureConnection", "_a", "request", "_a", "_c", "_b", "isReadableStream", "_a", "_b", "_c", "_d", "_a", "_b", "allowInsecureConnection", "_c", "path", "createEmptyPipeline", "context", "createClientLogger", "context", "logger", "createClientLogger", "logPolicy", "logger", "redirectPolicy", "os", "process", "getHeaderName", "setPlatformSpecificData", "process", "versions", "SDK_VERSION", "getUserAgentString", "getUserAgentHeaderName", "getHeaderName", "getUserAgentValue", "SDK_VERSION", "setPlatformSpecificData", "UserAgentHeaderName", "getUserAgentHeaderName", "userAgentPolicyName", "userAgentPolicy", "getUserAgentValue", "request", "AbortError", "AbortError", "StandardAbortMessage", "delay", "isError", "isNodeLike", "multipartPolicyName", "multipartPolicy", "request", "decompressResponsePolicy", "defaultRetryPolicy", "formDataPolicy", "proxyPolicy", "request", "agentPolicy", "tlsPolicy", "context", "cjsState", "_a", "context", "isRestError", "getUserAgentValue", "request", "_a", "SDK_VERSION", "logger", "isError", "isRestError", "request", "createPipelineFromOptions", "createEmptyPipeline", "isNodeLike", "agentPolicy", "tlsPolicy", "proxyPolicy", "decompressResponsePolicy", "formDataPolicy", "multipartPolicyName", "userAgentPolicy", "_a", "multipartPolicy", "defaultRetryPolicy", "redirectPolicy", "logPolicy", "retryPolicyLogger", "createClientLogger", "_a", "delay", "request", "isRestError", "_a", "logger", "_b", "_c", "apiVersionPolicyName", "apiVersionPolicy", "request", "_b", "_a", "isKeyCredential", "_c", "_d", "createDefaultPipeline", "createPipelineFromOptions", "apiVersionPolicy", "_a", "getClient", "createDefaultPipeline", "path", "logger", "createClientLogger", "SDK_VERSION", "TracingAttributesEnum", "getRequestBody", "request", "_a", "tryProcessResponse", "_b", "_c", "tryProcessError", "isError", "tracingPolicyName", "tracingPolicy", "SDK_VERSION", "request", "_b", "_a", "getRequestBody", "_c", "tryCreateSpan", "_d", "tryProcessResponse", "tryProcessError", "logger", "_a", "_c", "_b", "_d", "logger", "getClient", "tracingPolicy", "request", "path", "_a", "_b", "_c", "_d", "request", "stderr", "logger", "domain"]
}
