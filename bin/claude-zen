#!/bin/sh
# Claude-Zen Smart Dispatcher - Detects and uses the best available runtime

VERSION="2.0.0-alpha.73"

# Determine the correct path based on how the script is invoked
if [ -L "$0" ]; then
  # Script is a symlink (npm global install)
  REAL_PATH=$(readlink -f "$0" 2>/dev/null || readlink "$0")
  SCRIPT_DIR=$(dirname "$REAL_PATH")
else
  # Script is executed directly
  SCRIPT_DIR=$(dirname "$0")
fi

# Handle global npm installation vs local execution
if [ -f "$SCRIPT_DIR/../src/interfaces/terminal/main.ts" ]; then
  # Local development or properly structured installation
  ROOT_DIR=$(cd "$SCRIPT_DIR/.." && pwd)
else
  # Global npm installation - files might be in different location
  # Try to find the module root
  NODE_ROOT=$(npm root -g 2>/dev/null)
  if [ -n "$NODE_ROOT" ] && [ -f "$NODE_ROOT/claude-zen/src/interfaces/terminal/main.ts" ]; then
    ROOT_DIR="$NODE_ROOT/claude-zen"
  else
    # Fallback to relative path
    ROOT_DIR=$(cd "$SCRIPT_DIR/.." && pwd)
  fi
fi

# Show help if no arguments provided
if [ $# -eq 0 ]; then
  set -- "--help"
fi

# Special handling for help command to ensure it passes through
if [ "$1" = "help" ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
  # Let the actual CLI handle help display
  :  # no-op, just pass through
fi

# Quick version check only - let the actual CLI handle help
for arg in "$@"; do
  if [ "$arg" = "--version" ] || [ "$arg" = "-v" ]; then
    echo "v$VERSION"
    exit 0
  fi
done

# Check if we should use development mode fallback 
should_use_dev_fallback() {
  for arg in "$@"; do
    case "$arg" in
      "discover"|"discover-*"|"--help"|"-h")
        return 0
        ;;
    esac
  done
  return 1
}

# Use Node.js - prefer built files over source
if [ -f "$ROOT_DIR/dist/interfaces/terminal/main.js" ]; then
  # Try production mode first
  # Always use tsx for now due to ESM import issues in dist
  echo "üß† Claude-Zen: Using development mode"
  cd "$ROOT_DIR" && exec npx tsx src/interfaces/terminal/main.ts "$@"
else
  # Built files not found - this should trigger a build
  echo "üß† Claude-Zen v$VERSION - Distribution files not found"
  echo ""
  echo "‚ö†Ô∏è  Please build the project first:"
  echo "  npm run build"
  echo ""
  echo "For development mode only:"
  echo "  npx tsx src/interfaces/terminal/main.ts"
  echo ""
  echo "Documentation: https://github.com/mikkihugo/claude-code-zen"
  exit 1
fi