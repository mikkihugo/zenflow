{
  "key": "c76b2607101edb287cf959cb731bb7f8",
  "value": [
    {
      "rule": "C003",
      "line": 17,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'DATA' is an arbitrary abbreviation and does not clearly indicate its purpose.",
      "suggestion": "Rename 'DATA' to a more descriptive name such as 'dataDomain' or 'dataType'.",
      "codeSnippet": "export enum DependencyCriticality {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 18,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'INTEGRATION' is generic and does not express what it represents.",
      "suggestion": "Rename 'INTEGRATION' to 'integrationDomain' or a more specific name.",
      "codeSnippet": "')  LOW = 'low')  MEDIUM = 'medium')  HIGH = 'high')  CRITICAL = 'critical')};;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 19,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'SHARED_SERVICE' is unclear and could be more descriptive.",
      "suggestion": "Rename 'SHARED_SERVICE' to 'sharedServiceDomain' or similar.",
      "codeSnippet": "/**",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 85,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'getDependenciesForART' is a noun phrase and does not start with a verb.",
      "suggestion": "Rename to 'fetchDependenciesForART' or 'retrieveDependenciesForART'.",
      "codeSnippet": ");",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 92,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'getCriticalDependencies' is a noun phrase and does not start with a verb.",
      "suggestion": "Rename to 'fetchCriticalDependencies' or 'retrieveCriticalDependencies'.",
      "codeSnippet": "synchronizationOutcomes,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 99,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'getBlockedDependencies' is a noun phrase and does not start with a verb.",
      "suggestion": "Rename to 'fetchBlockedDependencies' or 'retrieveBlockedDependencies'.",
      "codeSnippet": "resultId,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 53,
      "column": 0,
      "severity": "warning",
      "message": "Throwing Error for missing coordination configuration may not be a critical failure; using 'error' log level is reserved for critical failures.",
      "suggestion": "Use 'warn' or 'info' log level for recoverable issues instead of throwing an Error.",
      "codeSnippet": "readonly strategyName: new Map<string, MultiARTCoordinationConfig>();",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 53,
      "column": 0,
      "severity": "warning",
      "message": "Error thrown in catch block is not logged with message and stack trace.",
      "suggestion": "Log the error message and stack trace before throwing or handling the error.",
      "codeSnippet": "readonly strategyName: new Map<string, MultiARTCoordinationConfig>();",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 56,
      "column": 0,
      "severity": "error",
      "message": "Access control error handling does not explicitly deny access if permission data is missing or logic errors occur.",
      "suggestion": "Ensure that all access control failures result in a denied access state. Add explicit 'deny by default' logic when configuration or permission data is missing.",
      "codeSnippet": "private integrationPoints = new Map<string, IntegrationPoint>();",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 119,
      "column": 0,
      "severity": "error",
      "message": "Resource access is controlled by 'artId' from client without backend ownership verification.",
      "suggestion": "Verify resource ownership on the backend before returning dependencies. Do not rely solely on client-provided IDs for authorization.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S003",
      "line": 56,
      "column": 0,
      "severity": "warning",
      "message": "Potential redirect using unvalidated user input; no allow list check for URLs.",
      "suggestion": "Validate all redirect URLs against a predefined allow list before executing the redirect. Reject or warn if the URL is not allowed.",
      "codeSnippet": "private integrationPoints = new Map<string, IntegrationPoint>();",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/solution-train/multi-art-coordination-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756493396712,
  "version": "1.0.0",
  "fileHash": ""
}
