{
  "key": "b18f5f2957779ece8eb7974fc11c0e97",
  "value": [
    {
      "rule": "C003",
      "line": 90,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'patterns' is not descriptive; does not clearly indicate purpose.",
      "suggestion": "Rename 'patterns' to 'behavioralPatternsCount' or similar.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 109,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'deviations' is not descriptive; does not clearly indicate purpose.",
      "suggestion": "Rename 'deviations' to 'behavioralDeviationsCount' or similar.",
      "codeSnippet": "success: false,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 180,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'createAISafetyOrchestrator' is not a verb or verb-noun combination.",
      "suggestion": "Rename to 'initializeAISafetyOrchestrator' or 'buildAISafetyOrchestrator'.",
      "codeSnippet": "id: this.generateId(),",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 56,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the root cause of the error.",
      "suggestion": "Log error message and stack trace using logger.error in the catch block.",
      "codeSnippet": "};",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 73,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the root cause of the error.",
      "suggestion": "Log error message and stack trace using logger.error in the catch block.",
      "codeSnippet": "if (this.isMonitoring) {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 122,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the root cause of the error.",
      "suggestion": "Log error message and stack trace using logger.error in the catch block.",
      "codeSnippet": "const phase1Result = await this.performAutomatedDetection(agentId, interactionData, orchestrationId);",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 142,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the root cause of the error.",
      "suggestion": "Log error message and stack trace using logger.error in the catch block.",
      "codeSnippet": "// Update metrics",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 162,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the root cause of the error.",
      "suggestion": "Log error message and stack trace using logger.error in the catch block.",
      "codeSnippet": "catch (error) {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 195,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the root cause of the error.",
      "suggestion": "Log error message and stack trace using logger.error in the catch block.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 80,
      "column": 0,
      "severity": "warning",
      "message": "Resource access is controlled using agentId from the client without verifying ownership or authorization on the backend.",
      "suggestion": "Add backend authorization logic to verify that the agentId belongs to the current user before performing any safety evaluation.",
      "codeSnippet": "session: this.metrics.totalMonitoringSessions",
      "filePath": "/home/mhugo/code/zenflow/packages/services/ai-safety/src/safety-orchestrator.js",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.87
    }
  ],
  "timestamp": 1756490992584,
  "version": "1.0.0",
  "fileHash": ""
}
