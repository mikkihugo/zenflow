{
  "key": "de564db363ab6015c9cbab9c7246b325",
  "value": [
    {
      "rule": "C003",
      "line": 203,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'F' used in CREATE TABLE and CREATE VIRTUAL TABLE statements is an arbitrary single-character abbreviation.",
      "suggestion": "Replace 'F' with a more descriptive table alias or remove the alias if unnecessary.",
      "codeSnippet": "response: row.response,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/knowledge/storage-backends/sqlite-backend.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 216,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'F' used in CREATE VIRTUAL TABLE statement is an arbitrary single-character abbreviation.",
      "suggestion": "Replace 'F' with a more descriptive table alias or remove the alias if unnecessary.",
      "codeSnippet": "if (!this.dalAdapter) {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/knowledge/storage-backends/sqlite-backend.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 225,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'NDEX' in CREATE INDEX statements appears to be a typo or unclear abbreviation.",
      "suggestion": "Replace 'NDEX' with 'INDEX' and ensure variable names are clear and descriptive.",
      "codeSnippet": "if (this.config.enableFullTextSearch) {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/knowledge/storage-backends/sqlite-backend.js",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 96,
      "column": 0,
      "severity": "warning",
      "message": "Access control error in get(): if dalAdapter.query throws, function returns null, which may be interpreted as 'not found' rather than 'access denied'. Should explicitly deny access on error.",
      "suggestion": "On error, throw an explicit access denied error or return a clear 'access denied' response instead of null.",
      "codeSnippet": "[",
      "filePath": "/home/mhugo/code/zenflow/packages/services/knowledge/storage-backends/sqlite-backend.js",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 96,
      "column": 0,
      "severity": "warning",
      "message": "IDOR risk: get(id) retrieves entries by id without verifying ownership or authorization. Anyone with an id could access any entry.",
      "suggestion": "Add backend authorization logic to verify that the requesting user owns the resource before returning it.",
      "codeSnippet": "[",
      "filePath": "/home/mhugo/code/zenflow/packages/services/knowledge/storage-backends/sqlite-backend.js",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 152,
      "column": 0,
      "severity": "warning",
      "message": "IDOR risk: delete(id) deletes entries by id without verifying ownership or authorization. Anyone with an id could delete any entry.",
      "suggestion": "Add backend authorization logic to verify that the requesting user owns the resource before deleting it.",
      "codeSnippet": "sql = `",
      "filePath": "/home/mhugo/code/zenflow/packages/services/knowledge/storage-backends/sqlite-backend.js",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756493270362,
  "version": "1.0.0",
  "fileHash": ""
}
