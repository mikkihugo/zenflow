{
  "key": "490ae1f489aa26769acdca9db4a97a24",
  "value": [
    {
      "rule": "C003",
      "line": 245,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'dm' is an uncommon abbreviation and not descriptive.",
      "suggestion": "Rename 'dm' to 'decisionMaker' for clarity.",
      "codeSnippet": "readonly type : 'timeout| criteria_not_met| manual' | ' risk_threshold')  readonly threshold: any;;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 311,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'dm' is an uncommon abbreviation and not descriptive.",
      "suggestion": "Rename 'dm' to 'decisionMaker' for clarity.",
      "codeSnippet": "readonly resources: ResourceRequirement[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 206,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'getAllDecisions' is a noun phrase, not a verb or verb-noun combination.",
      "suggestion": "Rename to 'fetchAllDecisions' or 'retrieveAllDecisions'.",
      "codeSnippet": "readonly requirement: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 80,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for initialization failure, which may not be critical.",
      "suggestion": "Use 'warn' or 'info' log level for recoverable initialization failures.",
      "codeSnippet": "readonly description: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 273,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for decision initiation failure, which may not be critical.",
      "suggestion": "Use 'warn' or 'info' log level for recoverable decision initiation failures.",
      "codeSnippet": "export interface OverrideRule {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 82,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log stack trace or context for error.",
      "suggestion": "Log error message and stack trace, and include relevant context information.",
      "codeSnippet": "readonly mandatory: boolean;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 275,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log stack trace or context for error.",
      "suggestion": "Log error message and stack trace, and include relevant context information.",
      "codeSnippet": "readonly conditions: string[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 323,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling may leak details and does not explicitly deny access on error; fallback may not be secure.",
      "suggestion": "Ensure that any error during access control or workflow initiation results in a denied access state, not a fallback or default allow. Add logic to explicitly deny access if permission or workflow errors occur.",
      "codeSnippet": "readonly dependencies: string[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 376,
      "column": 0,
      "severity": "warning",
      "message": "getDecision and updateDecisionStatus use decisionId from client without verifying ownership or authorization.",
      "suggestion": "Add backend authorization checks to verify that the requesting user owns or is authorized to access the decision resource before returning or updating it.",
      "codeSnippet": "readonly audiences: string[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/governance-decision-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756493052771,
  "version": "1.0.0",
  "fileHash": ""
}