{
  "key": "8cef27868e2e954686d78482c5e4df5d",
  "value": [
    {
      "rule": "C003",
      "line": 43,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'analytics' is too vague and does not clearly indicate its purpose.",
      "suggestion": "Rename 'analytics' to 'dashboardAnalytics' or 'realTimeAnalytics' for clarity.",
      "codeSnippet": "*/",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 44,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'eventListeners' is generic and does not specify what events are being listened to.",
      "suggestion": "Rename 'eventListeners' to 'dashboardEventListeners' or specify the event type.",
      "codeSnippet": "export enum DashboardViewMode {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 66,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'getDashboardView' does not follow verb or verb-noun combination convention.",
      "suggestion": "Rename to 'generateDashboardView' or 'fetchDashboardView'.",
      "codeSnippet": "/**",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 79,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for dashboard initialization failure, which may not be a critical system failure.",
      "suggestion": "Use 'warn' or 'info' log level unless this is a critical failure requiring immediate attention.",
      "codeSnippet": "// Load current gate statuses",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 79,
      "column": 0,
      "severity": "warning",
      "message": "Error is logged without stack trace or contextual information in catch block.",
      "suggestion": "Log error.message and error.stack, and include relevant context such as userId or actionId.",
      "codeSnippet": "// Load current gate statuses",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 73,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling throws the original error, which may result in ambiguous access state if not handled upstream. Should explicitly deny access on error.",
      "suggestion": "Replace 'throw error;' with logic that denies access and logs the error securely, e.g., 'return { access: false, error };'.",
      "codeSnippet": "// Set up real-time gate monitoring",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 108,
      "column": 0,
      "severity": "warning",
      "message": "Resource access is filtered by userId from client input without explicit backend ownership verification. This may allow IDOR if userId is manipulated.",
      "suggestion": "Add backend resource ownership checks to ensure the userId matches the authenticated user and the resource belongs to them before returning data.",
      "codeSnippet": "const recommendations = await this.getPersonalizedRecommendations(userId, effectiveViewMode);",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/ui/safe-dashboard.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491287438,
  "version": "1.0.0",
  "fileHash": ""
}