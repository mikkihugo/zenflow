{
  "key": "1c0c4e9a3a0ebcff546443701a89231a",
  "value": [
    {
      "rule": "C003",
      "line": 7,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'piId' uses an abbreviation that may not be clear to all readers.",
      "suggestion": "Rename 'piId' to 'programIncrementId' for clarity.",
      "codeSnippet": "export interface BrainPIPredictionRequest {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 8,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'artId' uses an abbreviation that may not be clear to all readers.",
      "suggestion": "Rename 'artId' to 'agileReleaseTrainId' for clarity.",
      "codeSnippet": "piId: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 68,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'predictPISuccessWithBrain' does not follow verb or verb-noun combination convention.",
      "suggestion": "Rename to 'generatePISuccessPredictionWithBrain' or similar.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 37,
      "column": 0,
      "severity": "warning",
      "message": "Use of 'logger.error' for initialization failure may not be appropriate if the issue is recoverable.",
      "suggestion": "Use 'logger.warn' or 'logger.info' if the failure is not critical.",
      "codeSnippet": "monitoringPlan: any;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 37,
      "column": 0,
      "severity": "warning",
      "message": "Error logging does not include stack trace or context information.",
      "suggestion": "Log error.message and error.stack, and include relevant context such as input parameters.",
      "codeSnippet": "monitoringPlan: any;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 119,
      "column": 0,
      "severity": "warning",
      "message": "Use of 'logger.error' for learning update failure may not be appropriate if the issue is recoverable.",
      "suggestion": "Use 'logger.warn' or 'logger.info' if the failure is not critical.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 119,
      "column": 0,
      "severity": "warning",
      "message": "Error logging does not include stack trace or context information.",
      "suggestion": "Log error.message and error.stack, and include relevant context such as predictionId and input parameters.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 43,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling does not explicitly deny access on error; throws error without secure fallback.",
      "suggestion": "Ensure that access is denied by default when access control errors occur. Add logic to explicitly deny access if an error is caught.",
      "codeSnippet": "analysisDepth: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/ml/brain-powered-pi-prediction.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491556835,
  "version": "1.0.0",
  "fileHash": ""
}
