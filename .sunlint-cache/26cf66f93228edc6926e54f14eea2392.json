{
  "key": "26cf66f93228edc6926e54f14eea2392",
  "value": [
    {
      "rule": "C003",
      "line": 69,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'e' used as catch parameter is not descriptive.",
      "suggestion": "Rename 'e' to 'error' or a more descriptive name indicating the caught exception.",
      "codeSnippet": "this.activeOperations.clear();",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "C019",
      "line": 22,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for initialization failure, but context suggests this may be recoverable.",
      "suggestion": "Use 'warn' level if the failure is not critical, or ensure only critical failures use 'error'.",
      "codeSnippet": "enableDetailedTracking: true;')      logger.info('PerformanceTrackerService initialized successfully');",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 22,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log stack trace or context information for the error.",
      "suggestion": "Log error stack and relevant context (e.g., input parameters, user/request ID) in the catch block.",
      "codeSnippet": "enableDetailedTracking: true;')      logger.info('PerformanceTrackerService initialized successfully');",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "C019",
      "line": 55,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for shutdown error, but context suggests this may be recoverable.",
      "suggestion": "Use 'warn' level if the failure is not critical, or ensure only critical failures use 'error'.",
      "codeSnippet": "return {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 55,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log stack trace or context information for the error.",
      "suggestion": "Log error stack and relevant context (e.g., input parameters, user/request ID) in the catch block.",
      "codeSnippet": "return {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "C019",
      "line": 108,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for metrics collection error, but context suggests this may be recoverable.",
      "suggestion": "Use 'warn' level if the failure is not critical, or ensure only critical failures use 'error'.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 108,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log stack trace or context information for the error.",
      "suggestion": "Log error stack and relevant context (e.g., input parameters, user/request ID) in the catch block.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "S001",
      "line": 17,
      "column": 0,
      "severity": "warning",
      "message": "Access control errors (e.g., initialization failure) do not explicitly deny access; code may proceed if initialization fails.",
      "suggestion": "Ensure that when initialization or access control fails, all access is denied by default. Add explicit checks to prevent access if errors occur.",
      "codeSnippet": "constructor(",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/kanban/infrastructure/performance-tracker.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491797043,
  "version": "1.0.0",
  "fileHash": ""
}
