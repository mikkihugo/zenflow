{
  "key": "4e1c97806662bcd7595f5de634daf16e",
  "value": [
    {
      "rule": "C003",
      "line": 17,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'e' used in error mapping is a single-character name not used as a counter.",
      "suggestion": "Rename 'e' to a more descriptive name like 'errorDetail'.",
      "codeSnippet": "static createSafeParser<T>(schema: z.ZodSchema<T>) {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/validation/schema-validator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "C006",
      "line": 32,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'isValid' should start with a verb and clearly describe its action.",
      "suggestion": "Rename 'isValid' to 'validateSchema' or 'checkSchemaValidity'.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/validation/schema-validator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 22,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log the error message or stack trace, nor does it provide context information.",
      "suggestion": "Log error message and stack trace with relevant context (e.g., input data) inside the catch block.",
      "codeSnippet": "const result = schema.parse(data);",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/validation/schema-validator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "S001",
      "line": 16,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling does not explicitly deny access on unexpected errors; fallback may allow access if parser logic fails.",
      "suggestion": "Ensure that any error in schema parsing or validation results in an explicit denial (success: false) and never defaults to allowing access.",
      "codeSnippet": "*/",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/validation/schema-validator.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756492836932,
  "version": "1.0.0",
  "fileHash": ""
}