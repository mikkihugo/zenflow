{
  "key": "414d5501481fadb413384a3dc39611d7",
  "value": [
    {
      "rule": "C003",
      "line": 152,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'p' used as parameter in arrow function is not descriptive.",
      "suggestion": "Rename 'p' to a more descriptive name such as 'principle'.",
      "codeSnippet": "readonly description: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 163,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'p' used as parameter in arrow function is not descriptive.",
      "suggestion": "Rename 'p' to a more descriptive name such as 'principle'.",
      "codeSnippet": "export class ArchitecturePrincipleService extends EventBus {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 89,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for initialization failure, which may not be critical.",
      "suggestion": "Use 'warn' or 'info' log level for recoverable initialization issues.",
      "codeSnippet": "readonly ruleId: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 133,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for principle creation failure, which may not be critical.",
      "suggestion": "Use 'warn' or 'info' log level for recoverable creation issues.",
      "codeSnippet": "export interface ValidationRecommendation {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 196,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for compliance validation failure, which may not be critical.",
      "suggestion": "Use 'warn' or 'info' log level for recoverable validation issues.",
      "codeSnippet": "if (existingPrinciple) {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 90,
      "column": 0,
      "severity": "warning",
      "message": "Error is logged without stack trace or context in catch block.",
      "suggestion": "Log both error message and stack trace, and include relevant context information.",
      "codeSnippet": "readonly name: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 134,
      "column": 0,
      "severity": "warning",
      "message": "Error is logged without stack trace or context in catch block.",
      "suggestion": "Log both error message and stack trace, and include relevant context information.",
      "codeSnippet": "readonly id: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 197,
      "column": 0,
      "severity": "warning",
      "message": "Error is logged without stack trace or context in catch block.",
      "suggestion": "Log both error message and stack trace, and include relevant context information.",
      "codeSnippet": "throw new Error(",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 82,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling may leak details and does not explicitly deny access on error; throws raw error after logging.",
      "suggestion": "On access control errors, ensure the system denies access and returns a generic error message. Do not throw raw errors; instead, respond with a secure denial.",
      "codeSnippet": "readonly includeArtifacts: string[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 139,
      "column": 0,
      "severity": "warning",
      "message": "getPrinciple method retrieves principle by ID without verifying resource ownership or authorization.",
      "suggestion": "Add backend authorization logic to verify that the requesting user owns or is permitted to access the requested principle.",
      "codeSnippet": "readonly dependencies: string[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S003",
      "line": 214,
      "column": 0,
      "severity": "warning",
      "message": "No allow list validation for dynamic workflow start; potential open redirect if workflow type or destination is user-controlled.",
      "suggestion": "Validate workflow types or redirect destinations against a strict allow list before execution to prevent open redirects.",
      "codeSnippet": "principleId: principle.id,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/services/enterprise-architecture/architecture-principle-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756493123888,
  "version": "1.0.0",
  "fileHash": ""
}
