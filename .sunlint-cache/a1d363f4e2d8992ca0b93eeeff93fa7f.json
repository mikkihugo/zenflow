{
  "key": "a1d363f4e2d8992ca0b93eeeff93fa7f",
  "value": [
    {
      "rule": "C003",
      "line": 6,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'getLogger' uses an abbreviation ('Logger') that may not be clear to all readers.",
      "suggestion": "Rename to 'getSystemLogger' or 'createLoggerInstance' for clarity.",
      "codeSnippet": "// Simple logger placeholder",
      "filePath": "/home/mhugo/code/zenflow/packages/services/agent-monitoring/src/intelligence-factory.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 12,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'logger' is generic and does not clearly indicate its purpose.",
      "suggestion": "Rename to 'monitoringLogger' or 'intelligenceLogger' for clarity.",
      "codeSnippet": "warn:(msg: string, meta?:unknown) =>",
      "filePath": "/home/mhugo/code/zenflow/packages/services/agent-monitoring/src/intelligence-factory.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 40,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'createIntelligenceSystem' is a verb-noun combination but lacks specificity about the type of intelligence system.",
      "suggestion": "Rename to 'createCustomIntelligenceSystem' for better context.",
      "codeSnippet": "},",
      "filePath": "/home/mhugo/code/zenflow/packages/services/agent-monitoring/src/intelligence-factory.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 7,
      "column": 0,
      "severity": "warning",
      "message": "Access control errors are not handled securely; logger methods do not handle exceptions or deny access on error.",
      "suggestion": "Wrap logger calls in try-catch blocks and ensure that any error in access control logic results in access being denied by default.",
      "codeSnippet": "const getLogger = (name: string) => ({",
      "filePath": "/home/mhugo/code/zenflow/packages/services/agent-monitoring/src/intelligence-factory.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491615898,
  "version": "1.0.0",
  "fileHash": ""
}
