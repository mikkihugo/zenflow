{
  "key": "d34cd0026ea562be747b4c7af52a4dd3",
  "value": [
    {
      "rule": "C003",
      "line": 30,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'rules' uses a generic name; consider a more descriptive name like 'autoApprovalRules'.",
      "suggestion": "Rename 'rules' to 'autoApprovalRules' for clarity.",
      "codeSnippet": "* Evaluate a task for auto-approval using LLM",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 31,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'ruleResult' uses a generic name; consider a more descriptive name like 'autoApprovalEvaluationResult'.",
      "suggestion": "Rename 'ruleResult' to 'autoApprovalEvaluationResult' for clarity.",
      "codeSnippet": "*/",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 43,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'llmDecision' uses an abbreviation; consider 'llmApprovalDecision' for clarity.",
      "suggestion": "Rename 'llmDecision' to 'llmApprovalDecision'.",
      "codeSnippet": "taskId: context.task.id,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 45,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'autoApproved' uses a vague name; consider 'isAutoApproved'.",
      "suggestion": "Rename 'autoApproved' to 'isAutoApproved'.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 46,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'escalatedToHuman' uses a vague name; consider 'shouldEscalateToHuman'.",
      "suggestion": "Rename 'escalatedToHuman' to 'shouldEscalateToHuman'.",
      "codeSnippet": "",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 18,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'evaluateForApproval' is a verb-preposition combination; prefer verb-noun such as 'evaluateApproval'.",
      "suggestion": "Rename function to 'evaluateApproval'.",
      "codeSnippet": "private readonly logger = getLogger('LLMApprovalService');",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 85,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for a parsing failure, which may not be critical.",
      "suggestion": "Use 'warn' log level for recoverable parsing failures.",
      "codeSnippet": "concerns: llmDecision.concerns",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 72,
      "column": 0,
      "severity": "warning",
      "message": "Catch block logs error but does not include stack trace or full context.",
      "suggestion": "Log error.stack and additional context such as input parameters.",
      "codeSnippet": "llmDecision.confidence >= config.confidenceThreshold;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 86,
      "column": 0,
      "severity": "warning",
      "message": "Catch block logs error but does not include stack trace or full context.",
      "suggestion": "Log error.stack and additional context such as input parameters.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 123,
      "column": 0,
      "severity": "warning",
      "message": "Catch block logs error but does not include stack trace or full context.",
      "suggestion": "Log error.stack and additional context such as rule parameters.",
      "codeSnippet": "private async getLLMDecision(",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 180,
      "column": 0,
      "severity": "warning",
      "message": "Catch block logs error but does not include stack trace or full context.",
      "suggestion": "Log error.stack and additional context such as learning parameters.",
      "codeSnippet": "\"concerns\": [\"array\", \"of\", \"specific\", \"concerns\"],",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 96,
      "column": 0,
      "severity": "warning",
      "message": "Access control rule evaluation errors are logged but do not explicitly deny access; must ensure 'deny by default' on any error.",
      "suggestion": "Explicitly set autoApprove to false and escalate to human review on any rule evaluation error, not just log the error.",
      "codeSnippet": "model: 'llm',",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/intelligence/llm-approval-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491212078,
  "version": "1.0.0",
  "fileHash": ""
}
