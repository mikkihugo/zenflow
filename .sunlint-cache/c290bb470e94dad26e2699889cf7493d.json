{
  "key": "c290bb470e94dad26e2699889cf7493d",
  "value": [
    {
      "rule": "C003",
      "line": 51,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'to' uses an arbitrary abbreviation; unclear purpose.",
      "suggestion": "Rename 'to' to 'toStateResult' or similar to clarify its role.",
      "codeSnippet": "* Validate task creation input",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/utils/validation.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "C003",
      "line": 50,
      "column": 0,
      "severity": "warning",
      "message": "Variable 'from' uses an arbitrary abbreviation; unclear purpose.",
      "suggestion": "Rename 'from' to 'fromStateResult' or similar to clarify its role.",
      "codeSnippet": "/**",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/utils/validation.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.9
    },
    {
      "rule": "C006",
      "line": 48,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'validateTaskCreation' is ambiguous; does not specify action or context.",
      "suggestion": "Rename to 'parseTaskCreationInput' or 'checkTaskCreationTransition' for clarity.",
      "codeSnippet": "*/",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/utils/validation.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 37,
      "column": 0,
      "severity": "warning",
      "message": "Access control logic does not explicitly deny access on error; fallback is to return false, but logic errors or missing data could bypass denial.",
      "suggestion": "Ensure all access control checks fail securely by explicitly denying access on any error or unexpected state. Add comprehensive error handling and default to deny.",
      "codeSnippet": "bottleneckDetectionInterval: z.number().min(1000).default(60000),",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/utils/validation.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756492044198,
  "version": "1.0.0",
  "fileHash": ""
}
