{
  "key": "e39a4d4e374e9ec4fa0e3f9abde57b75",
  "value": [
    {
      "rule": "C003",
      "line": 73,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'a' in gate.approvals.find(a => a.approverId === approverId) is a single-character and not a counter.",
      "suggestion": "Rename 'a' to 'approval' for clarity.",
      "codeSnippet": "reason: string;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 74,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'a' in gate.approvals.find(a => a.approverId === approverId) is a single-character and not a counter.",
      "suggestion": "Rename 'a' to 'approval' for clarity.",
      "codeSnippet": "requiredApprovals: number;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 75,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'a' in gate.approvals.find(a => a.approverId === approverId) is a single-character and not a counter.",
      "suggestion": "Rename 'a' to 'approval' for clarity.",
      "codeSnippet": "receivedApprovals: number;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 76,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'a' in gate.approvals.find(a => a.approverId === approverId) is a single-character and not a counter.",
      "suggestion": "Rename 'a' to 'approval' for clarity.",
      "codeSnippet": "pendingApprovers: UserId[];",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 77,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'a' in gate.approvals.find(a => a.approverId === approverId) is a single-character and not a counter.",
      "suggestion": "Rename 'a' to 'approval' for clarity.",
      "codeSnippet": "autoApprovalTriggered: boolean;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 72,
      "column": 0,
      "severity": "warning",
      "message": "logger.error used for recoverable issue: 'Failed to create approval gate'.",
      "suggestion": "Use logger.warn or logger.info for recoverable errors.",
      "codeSnippet": "approved: boolean;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 133,
      "column": 0,
      "severity": "warning",
      "message": "logger.error used for recoverable issue: 'Failed to process approval'.",
      "suggestion": "Use logger.warn or logger.info for recoverable errors.",
      "codeSnippet": "// =============================================================================",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 43,
      "column": 0,
      "severity": "warning",
      "message": "logger.error used for recoverable issue: 'Failed to initialize ApprovalGateManager'.",
      "suggestion": "Use logger.warn or logger.info for recoverable errors.",
      "codeSnippet": "taskId: TaskId;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 60,
      "column": 0,
      "severity": "warning",
      "message": "logger.error used for recoverable issue: 'Error during ApprovalGateManager shutdown'.",
      "suggestion": "Use logger.warn or logger.info for recoverable errors.",
      "codeSnippet": "createdAt: Date;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 142,
      "column": 0,
      "severity": "warning",
      "message": "Access control errors (e.g., missing gate instance, unauthorized approver) are handled by throwing errors, but the error handling returns a generic failure response. Ensure that access is denied and no default permissions are granted if errors occur.",
      "suggestion": "Explicitly deny access and avoid any fallback to 'allow' state when access control errors occur. Ensure error responses do not leak sensitive information and always result in denied access.",
      "codeSnippet": "",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 339,
      "column": 0,
      "severity": "warning",
      "message": "getApprovalGate and getApprovalGatesForTask methods return approval gates based only on gateId or taskId without verifying resource ownership or user authorization.",
      "suggestion": "Add backend authorization checks to verify that the requesting user owns or is authorized to access the approval gate or task before returning data.",
      "codeSnippet": "error?: any;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/core/approval-gate-manager.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756492283124,
  "version": "1.0.0",
  "fileHash": ""
}