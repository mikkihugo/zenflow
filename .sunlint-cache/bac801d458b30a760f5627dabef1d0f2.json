{
  "key": "bac801d458b30a760f5627dabef1d0f2",
  "value": [
    {
      "rule": "C003",
      "line": 272,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'dbSystem' is abbreviated and not descriptive.",
      "suggestion": "Rename 'dbSystem' to 'databaseSystem' for clarity.",
      "codeSnippet": "});",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 273,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'dbSystem' is abbreviated and not descriptive.",
      "suggestion": "Rename 'dbSystem' to 'databaseSystem' for clarity.",
      "codeSnippet": "",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 294,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'startEpicGenerationProcess' is a noun phrase, not a verb or verb-noun combination.",
      "suggestion": "Rename to 'initiateEpicGenerationProcess' or 'runEpicGenerationProcess'.",
      "codeSnippet": "targetState: PortfolioKanbanState,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 281,
      "column": 0,
      "severity": "warning",
      "message": "Logger uses 'error' level for initialization failure, which may not be critical.",
      "suggestion": "Use 'warn' level for recoverable initialization failures.",
      "codeSnippet": "};",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 282,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log stack trace or context information for error.",
      "suggestion": "Log error stack and relevant context (e.g., input parameters) in catch block.",
      "codeSnippet": "",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 243,
      "column": 0,
      "severity": "error",
      "message": "Access control error handling may leak default permissions: errors in epic lookup (traceabilityRecords.get) throw generic errors, but do not explicitly deny access or ensure 'deny by default'.",
      "suggestion": "Ensure all access control errors result in explicit denial (e.g., return HTTP 403 or equivalent) and never grant access by default if permission data is missing or errors occur.",
      "codeSnippet": "valueRealization:  {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 243,
      "column": 0,
      "severity": "error",
      "message": "CRUD operations on epics use predictable sequential IDs (e.g., epicId = 'epic_' + Date.now()), which may be vulnerable to IDOR if not paired with backend ownership checks.",
      "suggestion": "Use UUIDs or cryptographically random IDs for resource identifiers and always verify resource ownership/authorization at the backend before allowing access or modification.",
      "codeSnippet": "valueRealization:  {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/services/safe-portfolio-traceability-service.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756492315648,
  "version": "1.0.0",
  "fileHash": ""
}
