{
  "key": "343df34c9dfdc78a346e74d2cfdd7933",
  "value": [
    {
      "rule": "C003",
      "line": 245,
      "column": 0,
      "severity": "warning",
      "message": "Variable name '__shutdownStartTime' uses uncommon abbreviation and double underscore prefix.",
      "suggestion": "Rename to 'shutdownStartTime' for clarity.",
      "codeSnippet": "eventType,')';",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/workflow-engine.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 384,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'getNestedValue' is a noun phrase, not a verb or verb-noun combination.",
      "suggestion": "Rename to 'extractNestedValue' or 'retrieveNestedValue'.",
      "codeSnippet": "return definitionOrName;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/workflow-engine.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 119,
      "column": 0,
      "severity": "warning",
      "message": "logger.error used for workflow initialization failure, but may not be a critical failure.",
      "suggestion": "Use 'logger.warn' or 'logger.info' if the failure is recoverable or not system-critical.",
      "codeSnippet": "async (id) => {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/workflow-engine.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 119,
      "column": 0,
      "severity": "warning",
      "message": "Error is logged but stack trace is not included in catch block.",
      "suggestion": "Log both error message and stack trace for better debugging.",
      "codeSnippet": "async (id) => {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/workflow-engine.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 496,
      "column": 0,
      "severity": "warning",
      "message": "Access control error (gate rejection) deletes workflow and emits event, but does not explicitly deny further access or prevent fallback logic.",
      "suggestion": "Ensure that after gate rejection, all access to the workflow and related resources is denied and no fallback logic can grant permissions.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/workflow-engine.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 298,
      "column": 0,
      "severity": "warning",
      "message": "Workflow ID is generated using predictable timestamp and random string, which may be susceptible to guessing and IDOR attacks.",
      "suggestion": "Use cryptographically secure UUIDs for workflow IDs and always verify resource ownership in backend authorization logic.",
      "codeSnippet": "')          if (workflow.status !=='running){';",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/workflow-engine.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756492591750,
  "version": "1.0.0",
  "fileHash": ""
}