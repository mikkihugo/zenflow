{
  "key": "d99e1980c38e9608311db07c77575767",
  "value": [
    {
      "rule": "C003",
      "line": 12,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'id' is too generic and does not clearly indicate its purpose.",
      "suggestion": "Rename 'id' to a more descriptive name such as 'taskId' or 'epicId' depending on context.",
      "codeSnippet": "|'done';",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/orchestration/index.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 13,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'wipLimits' uses an uncommon abbreviation; should be more descriptive.",
      "suggestion": "Rename 'wipLimits' to 'workInProgressLimits' for clarity.",
      "codeSnippet": "|'blocked';",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/orchestration/index.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 17,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'createTask' is acceptable, but 'getFlowMetrics' does not follow verb-noun convention.",
      "suggestion": "Rename 'getFlowMetrics' to 'calculateFlowMetrics' or 'retrieveFlowMetrics'.",
      "codeSnippet": "}",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/orchestration/index.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 26,
      "column": 0,
      "severity": "warning",
      "message": "Error thrown in catch block is not logged with context or stack trace.",
      "suggestion": "Log the error message and stack trace, including relevant context before throwing.",
      "codeSnippet": "throw new Error(`WIP limit exceeded for state `${newState});``;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/orchestration/index.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 16,
      "column": 0,
      "severity": "warning",
      "message": "Task creation and retrieval logic appears to rely on IDs from client input without verifying resource ownership or user authorization.",
      "suggestion": "Implement backend authorization checks to ensure the current user owns or is permitted to access the resource before performing CRUD operations.",
      "codeSnippet": "private wipLimits: wipLimits;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/orchestration/index.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491151536,
  "version": "1.0.0",
  "fileHash": ""
}
