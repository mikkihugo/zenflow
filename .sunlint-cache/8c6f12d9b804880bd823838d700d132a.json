{
  "key": "8c6f12d9b804880bd823838d700d132a",
  "value": [
    {
      "rule": "C003",
      "line": 5,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'id' is used without clear context; avoid single-character names except for loop counters.",
      "suggestion": "Rename 'id' to a more descriptive name such as 'approvalRequestId' or 'epicId'.",
      "codeSnippet": "interface TaskMasterApprovalRequest {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/coordinators/portfolio/epic-owner-coordinator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 16,
      "column": 0,
      "severity": "warning",
      "message": "Function name 'ideateEpic' is not a clear verb or verb-noun combination.",
      "suggestion": "Rename function to 'createEpic' or 'initiateEpicIdeation' for clarity.",
      "codeSnippet": "async ideateEpic(",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/coordinators/portfolio/epic-owner-coordinator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C019",
      "line": 29,
      "column": 0,
      "severity": "warning",
      "message": "Error log level used for non-critical issue: 'Epic not found'.",
      "suggestion": "Use 'warn' log level instead of 'error' for recoverable issues like missing epics.",
      "codeSnippet": "const userBusinessValue = businessCase.expectedValue / 100000; // Normalize",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/coordinators/portfolio/epic-owner-coordinator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C029",
      "line": 29,
      "column": 0,
      "severity": "warning",
      "message": "Catch block does not log root cause or context information for thrown error.",
      "suggestion": "Log error message, stack trace, and relevant context (e.g., epicId, userId) in the catch block.",
      "codeSnippet": "const userBusinessValue = businessCase.expectedValue / 100000; // Normalize",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/coordinators/portfolio/epic-owner-coordinator.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 17,
      "column": 0,
      "severity": "error",
      "message": "Resource access is controlled using 'id' from client without verifying ownership or authorization.",
      "suggestion": "Add backend authorization logic to verify that the epic id belongs to the current user before allowing access or modification.",
      "codeSnippet": "title:  {",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/coordinators/portfolio/epic-owner-coordinator.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 20,
      "column": 0,
      "severity": "error",
      "message": "Access control error handling does not explicitly deny access when epic or business case is missing; only throws error.",
      "suggestion": "Ensure that when access control errors occur, the system denies access and does not proceed with default permissions.",
      "codeSnippet": "businessValue: 'backlog,',",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/safe/coordinators/portfolio/epic-owner-coordinator.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756493186957,
  "version": "1.0.0",
  "fileHash": ""
}