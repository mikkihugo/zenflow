{
  "key": "546801168ea6ea4f3c2443b899a7f57f",
  "value": [
    {
      "rule": "C003",
      "line": 130,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'f' in 'flowTraceabilityId = ``flow-trace-${f}lowId``' is unclear and likely an accidental abbreviation.",
      "suggestion": "Rename 'f' to a descriptive variable name such as 'flow' or 'flowId'.",
      "codeSnippet": "autoApprovalThresholds: Record<string, number>;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 183,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'f' in 'throw new Error(`Flow ${f}lowIdnot found``);`' is unclear and likely an accidental abbreviation.",
      "suggestion": "Rename 'f' to a descriptive variable name such as 'flow' or 'flowId'.",
      "codeSnippet": "private readonly logger = getLogger('CompleteSafeFlowIntegration');",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 236,
      "column": 0,
      "severity": "warning",
      "message": "Variable name '_storyEntity' uses an uncommon underscore prefix and is not descriptive.",
      "suggestion": "Rename '_storyEntity' to 'storyEntity' for clarity and consistency.",
      "codeSnippet": "// 3. Value Stream Mapping Gate",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 245,
      "column": 0,
      "severity": "warning",
      "message": "Variable name '_metadata' uses an uncommon underscore prefix and is not descriptive.",
      "suggestion": "Rename '_metadata' to 'metadata' for clarity and consistency.",
      "codeSnippet": "CompleteSafeGateCategory.INVESTMENT_FUNDING,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 252,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'dodGate' is an abbreviation and not immediately clear.",
      "suggestion": "Rename 'dodGate' to 'definitionOfDoneGate' for clarity.",
      "codeSnippet": "gates,",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C003",
      "line": 264,
      "column": 0,
      "severity": "warning",
      "message": "Variable name 'owner' is used without clear context in 'owner, sprint.teamMembers.find((m) => m.role ==='scrum_master')?.id|| sprint.teamMembers[0].id'.",
      "suggestion": "Rename 'owner' to 'sprintOwner' or similar for clarity.",
      "codeSnippet": "async continueToARTFlow(",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 354,
      "column": 0,
      "severity": "info",
      "message": "Function name 'orchestrateBuildPhase' is a verb-noun combination but could be more specific about the action performed.",
      "suggestion": "Consider renaming to 'executeBuildPhase' or 'runBuildPhase' for clearer action.",
      "codeSnippet": ");",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 362,
      "column": 0,
      "severity": "info",
      "message": "Function name 'orchestrateMeasurePhase' is a verb-noun combination but could be more specific about the action performed.",
      "suggestion": "Consider renaming to 'executeMeasurePhase' or 'runMeasurePhase' for clearer action.",
      "codeSnippet": "gates.push(dodGate);",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 369,
      "column": 0,
      "severity": "info",
      "message": "Function name 'orchestrateLearnPhase' is a verb-noun combination but could be more specific about the action performed.",
      "suggestion": "Consider renaming to 'executeLearnPhase' or 'runLearnPhase' for clearer action.",
      "codeSnippet": "description,    ``)      currentStage: SafeFlowStage.SPRINT_EXECUTION,';",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 192,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling may leak flow existence. Throws error if flow not found, but does not explicitly deny access.",
      "suggestion": "Ensure that access is denied by default when flow lookup fails. Return a generic access denied response instead of throwing detailed errors.",
      "codeSnippet": "this.convertToBaseConfig(config));",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 192,
      "column": 0,
      "severity": "warning",
      "message": "CRUD operations use predictable sequential IDs (e.g., flowId, sprint.id, deployment.id) without backend ownership verification.",
      "suggestion": "Verify resource ownership for each CRUD operation at the backend. Use UUIDs or encrypted IDs and check that the resource belongs to the current user before allowing access.",
      "codeSnippet": "this.convertToBaseConfig(config));",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/taskmaster/integrations/complete-safe-flow-integration.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756491679153,
  "version": "1.0.0",
  "fileHash": ""
}
