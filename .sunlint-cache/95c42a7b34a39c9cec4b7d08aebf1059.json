{
  "key": "95c42a7b34a39c9cec4b7d08aebf1059",
  "value": [
    {
      "rule": "C003",
      "line": 31,
      "column": 0,
      "severity": "warning",
      "message": "Variable '_resolve' uses uncommon abbreviation and single character; unclear purpose.",
      "suggestion": "Rename '_resolve' to 'unusedResolve' or 'noop' to clarify intent.",
      "codeSnippet": "wait: number",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/reactive/async-utils.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 22,
      "column": 0,
      "severity": "info",
      "message": "Function name 'createDelay' is a verb-noun combination, but could be more specific about the action (e.g., 'waitMilliseconds').",
      "suggestion": "Consider renaming to 'waitMilliseconds' or 'delayForMilliseconds' for clarity.",
      "codeSnippet": "cancel(): void;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/reactive/async-utils.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "C006",
      "line": 26,
      "column": 0,
      "severity": "info",
      "message": "Function name 'createTimeout' is a verb-noun combination, but could be more specific about the action (e.g., 'timeoutPromise').",
      "suggestion": "Consider renaming to 'timeoutPromise' or 'promiseWithTimeout' for clarity.",
      "codeSnippet": "/**",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/reactive/async-utils.ts",
      "category": "code_quality",
      "categoryName": "Code Quality",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S001",
      "line": 35,
      "column": 0,
      "severity": "warning",
      "message": "Access control error handling not present; if used for permission checks, must deny by default on errors.",
      "suggestion": "Ensure any access control logic using async utilities fails securely and denies access on errors.",
      "codeSnippet": "flush(): void;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/reactive/async-utils.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S002",
      "line": 35,
      "column": 0,
      "severity": "warning",
      "message": "No resource ownership verification for CRUD operations; if used in API handlers, must verify user ownership.",
      "suggestion": "Add backend resource ownership checks before performing CRUD operations using these utilities.",
      "codeSnippet": "flush(): void;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/reactive/async-utils.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    },
    {
      "rule": "S003",
      "line": 35,
      "column": 0,
      "severity": "warning",
      "message": "No allow list validation for dynamic URL redirects; if used for redirects, must validate URLs against an allow list.",
      "suggestion": "Implement allow list validation for any dynamic URL redirects using async utilities.",
      "codeSnippet": "flush(): void;",
      "filePath": "/home/mhugo/code/zenflow/packages/services/coordination/src/workflows/utilities/reactive/async-utils.ts",
      "category": "security",
      "categoryName": "Security",
      "analysisMode": "medium",
      "confidence": 0.85
    }
  ],
  "timestamp": 1756492635542,
  "version": "1.0.0",
  "fileHash": ""
}
