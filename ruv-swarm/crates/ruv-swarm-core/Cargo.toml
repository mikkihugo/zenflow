[package]
name = "ruv-swarm-core"
version = "1.0.6"
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
description = "Core orchestration and agent traits for RUV Swarm"

[features]
default = ["std"]
std = ["thiserror", "tokio", "tracing", "dashmap", "serde/std", "futures/std"]
no_std = ["no-std-compat", "heapless", "serde/alloc", "futures/alloc"]
wasm = ["getrandom", "getrandom/js"]
minimal = []  # Minimal feature set for size optimization

[dependencies]
# Core dependencies
async-trait = { workspace = true }
thiserror = { workspace = true, optional = true }
anyhow = { workspace = true }

# Async runtime - only with std
tokio = { workspace = true, optional = true }
futures = { workspace = true, default-features = false }
pin-project = { workspace = true }

# Collections
dashmap = { workspace = true, optional = true }
parking_lot = { workspace = true }

# No-std support
no-std-compat = { workspace = true, optional = true }
heapless = { workspace = true, optional = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Logging
tracing = { workspace = true, optional = true }

# Random number generation
rand = { workspace = true }
getrandom = { workspace = true, optional = true }

[dev-dependencies]
tokio = { workspace = true, features = ["test-util", "rt", "macros"] }
criterion = { workspace = true }
proptest = { workspace = true }
tracing-subscriber = { workspace = true }

[[bench]]
name = "swarm_benchmarks"
harness = false

[[example]]
name = "basic_swarm"
path = "../../examples/basic_swarm.rs"