strict digraph "dependency-cruiser output"{
    rankdir="LR" splines="true" overlap="false" nodesep="0.16" ranksep="0.18" fontname="Helvetica-bold" fontsize="9" style="rounded,bold,filled" fillcolor="#ffffff" compound="true"
    node [shape="box" style="rounded, filled" height="0.2" color="black" fillcolor="#ffffcc" fontcolor="black" fontname="Helvetica" fontsize="9"]
    edge [arrowhead="normal" arrowsize="0.6" penwidth="2.0" color="#00000033" fontname="Helvetica" fontsize="9"]

    subgraph "cluster_src" {label="src" subgraph "cluster_src/ai-linter" {label="ai-linter" "src/ai-linter/ai-rule-generator.ts" [label=<ai-rule-generator.ts> tooltip="ai-rule-generator.ts" URL="src/ai-linter/ai-rule-generator.ts" fillcolor="#ddfeff"] } }
    "src/ai-linter/ai-rule-generator.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/ai-linter/ai-rule-generator.ts" -> "src/ai-linter/types/ai-linter-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/ai-linter/ai-rule-generator.ts" -> "src/ai-linter/types/biome-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/ai-linter" {label="ai-linter" "src/ai-linter/claude-biome-bridge.ts" [label=<claude-biome-bridge.ts> tooltip="claude-biome-bridge.ts" URL="src/ai-linter/claude-biome-bridge.ts" fillcolor="#ddfeff"] } }
    "src/ai-linter/claude-biome-bridge.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/ai-linter/claude-biome-bridge.ts" -> "src/ai-linter/types/ai-linter-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/ai-linter/claude-biome-bridge.ts" -> "src/ai-linter/types/biome-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/ai-linter" {label="ai-linter" subgraph "cluster_src/ai-linter/types" {label="types" "src/ai-linter/types/ai-linter-types.ts" [label=<ai-linter-types.ts> tooltip="ai-linter-types.ts" URL="src/ai-linter/types/ai-linter-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/ai-linter" {label="ai-linter" subgraph "cluster_src/ai-linter/types" {label="types" "src/ai-linter/types/biome-types.ts" [label=<biome-types.ts> tooltip="biome-types.ts" URL="src/ai-linter/types/biome-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/bindings" {label="bindings" "src/bindings/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/bindings/index.ts" fillcolor="#ddfeff"] } }
    "src/bindings/index.ts" -> "src/bindings/wasm-binding-interface.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/bindings" {label="bindings" "src/bindings/wasm-binding-interface.ts" [label=<wasm-binding-interface.ts> tooltip="wasm-binding-interface.ts" URL="src/bindings/wasm-binding-interface.ts" fillcolor="#ddfeff"] } }
    "src/bindings/wasm-binding-interface.ts" -> "src/config/logging-config.ts"
    "src/bindings/wasm-binding-interface.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/bindings/wasm-binding-interface.ts" -> "src/neural/public-api.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" "src/claude-zen-core.ts" [label=<claude-zen-core.ts> tooltip="claude-zen-core.ts" URL="src/claude-zen-core.ts" fillcolor="#ddfeff"] }
    "src/claude-zen-core.ts" -> "src/config/logging-config.ts"
    "src/claude-zen-core.ts" -> "src/coordination/manager.ts"
    "src/claude-zen-core.ts" -> "src/coordination/orchestrator.ts"
    "src/claude-zen-core.ts" -> "src/di/index.ts"
    "src/claude-zen-core.ts" -> "src/integration/multi-system-coordinator.ts"
    "src/claude-zen-core.ts" -> "src/intelligence/adaptive-learning/learning-coordinator.ts"
    subgraph "cluster_src" {label="src" "src/claude-zen-integrated.ts" [label=<claude-zen-integrated.ts> tooltip="claude-zen-integrated.ts" URL="src/claude-zen-integrated.ts" fillcolor="#ddfeff"] }
    "src/claude-zen-integrated.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" "src/comprehensive-sparc-test.ts" [label=<comprehensive-sparc-test.ts> tooltip="comprehensive-sparc-test.ts" URL="src/comprehensive-sparc-test.ts" fillcolor="#ddfeff"] }
    "src/comprehensive-sparc-test.ts" -> "src/config/logging-config.ts"
    "src/comprehensive-sparc-test.ts" -> "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" [style="dashed"]
    "src/comprehensive-sparc-test.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/comprehensive-sparc-test.ts" -> "src/interfaces/mcp/tools/sparc-integration-tools.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/default-repo-config.ts" [label=<default-repo-config.ts> tooltip="default-repo-config.ts" URL="src/config/default-repo-config.ts" fillcolor="#ddfeff"] } }
    "src/config/default-repo-config.ts" -> "src/core/init.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/default-repo-config.ts" -> "src/config/memory-optimization.ts"
    "src/config/default-repo-config.ts" -> "src/config/system-info.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/defaults.ts" [label=<defaults.ts> tooltip="defaults.ts" URL="src/config/defaults.ts" fillcolor="#ddfeff"] } }
    "src/config/defaults.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/health-checker.ts" [label=<health-checker.ts> tooltip="health-checker.ts" URL="src/config/health-checker.ts" fillcolor="#ddfeff"] } }
    "src/config/health-checker.ts" -> "src/config/default-repo-config.ts"
    "src/config/health-checker.ts" -> "src/config/manager.ts"
    "src/config/health-checker.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/health-checker.ts" -> "src/config/validator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/config/index.ts" fillcolor="#ddfeff"] } }
    "src/config/index.ts" -> "src/config/default-repo-config.ts" [arrowhead="inv"]
    "src/config/index.ts" -> "src/config/defaults.ts" [arrowhead="inv"]
    "src/config/index.ts" -> "src/config/health-checker.ts" [arrowhead="inv"]
    "src/config/index.ts" -> "src/config/loader.ts" [arrowhead="inv"]
    "src/config/index.ts" -> "src/config/manager.ts"
    "src/config/index.ts" -> "src/config/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/index.ts" -> "src/config/startup-validator.ts" [arrowhead="inv"]
    "src/config/index.ts" -> "src/config/startup-validator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/index.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/index.ts" -> "src/config/validator.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/llm-providers.config.ts" [label=<llm-providers.config.ts> tooltip="llm-providers.config.ts" URL="src/config/llm-providers.config.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/loader.ts" [label=<loader.ts> tooltip="loader.ts" URL="src/config/loader.ts" fillcolor="#ddfeff"] } }
    "src/config/loader.ts" -> "src/config/defaults.ts"
    "src/config/loader.ts" -> "src/config/logging-config.ts"
    "src/config/loader.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/loader.ts" -> "src/config/validator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/logging-config.ts" [label=<logging-config.ts> tooltip="logging-config.ts" URL="src/config/logging-config.ts" fillcolor="#ddfeff"] } }
    "src/config/logging-config.ts" -> "src/core/bootstrap-logger.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/manager.ts" [label=<manager.ts> tooltip="manager.ts" URL="src/config/manager.ts" fillcolor="#ddfeff"] } }
    "src/config/manager.ts" -> "src/config/defaults.ts"
    "src/config/manager.ts" -> "src/config/loader.ts"
    "src/config/manager.ts" -> "src/config/logging-config.ts"
    "src/config/manager.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/config/manager.ts" -> "src/config/validator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/memory-optimization.ts" [label=<memory-optimization.ts> tooltip="memory-optimization.ts" URL="src/config/memory-optimization.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/startup-validator.ts" [label=<startup-validator.ts> tooltip="startup-validator.ts" URL="src/config/startup-validator.ts" fillcolor="#ddfeff"] } }
    "src/config/startup-validator.ts" -> "src/config/health-checker.ts"
    "src/config/startup-validator.ts" -> "src/config/logging-config.ts"
    "src/config/startup-validator.ts" -> "src/config/manager.ts"
    "src/config/startup-validator.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/system-info.ts" [label=<system-info.ts> tooltip="system-info.ts" URL="src/config/system-info.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/config/types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/config" {label="config" "src/config/validator.ts" [label=<validator.ts> tooltip="validator.ts" URL="src/config/validator.ts" fillcolor="#ddfeff"] } }
    "src/config/validator.ts" -> "src/config/defaults.ts"
    "src/config/validator.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/agent-registry.ts" [label=<agent-registry.ts> tooltip="agent-registry.ts" URL="src/coordination/agents/agent-registry.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/agent-registry.ts" -> "src/memory/core/memory-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/agent-registry.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/agent.js" [label=<agent.js> tooltip="agent.js" URL="src/coordination/agents/agent.js" ] } } }
    "src/coordination/agents/agent.js" -> "src/coordination/swarm/core/utils.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/agent.ts" [label=<agent.ts> tooltip="agent.ts" URL="src/coordination/agents/agent.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/agent.ts" -> "src/config/logging-config.ts"
    "src/coordination/agents/agent.ts" -> "src/coordination/swarm/core/utils.ts"
    "src/coordination/agents/agent.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/composite-system.ts" [label=<composite-system.ts> tooltip="composite-system.ts" URL="src/coordination/agents/composite-system.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/composite-system.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/dspy-agent-integration.ts" [label=<dspy-agent-integration.ts> tooltip="dspy-agent-integration.ts" URL="src/coordination/agents/dspy-agent-integration.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/memory/memory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/neural/dspy-wrapper.ts"
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/neural/dspy-wrapper.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/dspy-agent-integration.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/gap-analysis.ts" [label=<gap-analysis.ts> tooltip="gap-analysis.ts" URL="src/coordination/agents/gap-analysis.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/gap-analysis.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/agents/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/index.ts" -> "src/coordination/agents/agent-registry.ts" [arrowhead="inv"]
    "src/coordination/agents/index.ts" -> "src/coordination/agents/agent.ts" [arrowhead="inv"]
    "src/coordination/agents/index.ts" -> "src/coordination/agents/gap-analysis.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/agents" {label="agents" "src/coordination/agents/queen-commander.ts" [label=<queen-commander.ts> tooltip="queen-commander.ts" URL="src/coordination/agents/queen-commander.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/agents/queen-commander.ts" -> "src/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/queen-commander.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/queen-commander.ts" -> "src/memory/core/memory-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/agents/queen-commander.ts" -> "src/coordination/swarm/core/utils.ts"
    "src/coordination/agents/queen-commander.ts" -> "src/coordination/types/queen-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/ai-deception-detector.ts" [label=<ai-deception-detector.ts> tooltip="ai-deception-detector.ts" URL="src/coordination/ai-safety/ai-deception-detector.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/ai-safety/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/index.ts" -> "src/coordination/ai-safety/ai-deception-detector.ts" [arrowhead="inv"]
    "src/coordination/ai-safety/index.ts" -> "src/coordination/ai-safety/ai-deception-detector.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/ai-safety/index.ts" -> "src/coordination/ai-safety/safety-orchestrator.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/log-based-deception-detector.ts" [label=<log-based-deception-detector.ts> tooltip="log-based-deception-detector.ts" URL="src/coordination/ai-safety/log-based-deception-detector.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/log-based-deception-detector.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/neural-deception-detector.ts" [label=<neural-deception-detector.ts> tooltip="neural-deception-detector.ts" URL="src/coordination/ai-safety/neural-deception-detector.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/neural-deception-detector.ts" -> "src/config/logging-config.ts"
    "src/coordination/ai-safety/neural-deception-detector.ts" -> "src/coordination/ai-safety/log-based-deception-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/safety-integration.ts" [label=<safety-integration.ts> tooltip="safety-integration.ts" URL="src/coordination/ai-safety/safety-integration.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/safety-integration.ts" -> "src/coordination/ai-safety/ai-deception-detector.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/ai-safety/safety-integration.ts" -> "src/coordination/ai-safety/safety-orchestrator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/safety-orchestrator.ts" [label=<safety-orchestrator.ts> tooltip="safety-orchestrator.ts" URL="src/coordination/ai-safety/safety-orchestrator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/safety-orchestrator.ts" -> "src/coordination/ai-safety/ai-deception-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/simple-test-deception-detection.ts" [label=<simple-test-deception-detection.ts> tooltip="simple-test-deception-detection.ts" URL="src/coordination/ai-safety/simple-test-deception-detection.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/simple-test-deception-detection.ts" -> "src/coordination/ai-safety/ai-deception-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/test-deception-detection.ts" [label=<test-deception-detection.ts> tooltip="test-deception-detection.ts" URL="src/coordination/ai-safety/test-deception-detection.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/test-deception-detection.ts" -> "src/coordination/ai-safety/ai-deception-detector.ts"
    "src/coordination/ai-safety/test-deception-detection.ts" -> "src/coordination/ai-safety/safety-orchestrator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/test-log-deception-detection.ts" [label=<test-log-deception-detection.ts> tooltip="test-log-deception-detection.ts" URL="src/coordination/ai-safety/test-log-deception-detection.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/test-log-deception-detection.ts" -> "src/coordination/ai-safety/log-based-deception-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/ai-safety" {label="ai-safety" "src/coordination/ai-safety/test-neural-deception-detection.ts" [label=<test-neural-deception-detection.ts> tooltip="test-neural-deception-detection.ts" URL="src/coordination/ai-safety/test-neural-deception-detection.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/ai-safety/test-neural-deception-detection.ts" -> "src/coordination/ai-safety/neural-deception-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/api.ts" [label=<api.ts> tooltip="api.ts" URL="src/coordination/api.ts" fillcolor="#ddfeff"] } }
    "src/coordination/api.ts" -> "src/coordination/schemas.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/batch" {label="batch" "src/coordination/batch/batch-engine.ts" [label=<batch-engine.ts> tooltip="batch-engine.ts" URL="src/coordination/batch/batch-engine.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/batch/batch-engine.ts" -> "src/config/logging-config.ts"
    "src/coordination/batch/batch-engine.ts" -> "src/coordination/batch/performance-monitor.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/batch" {label="batch" "src/coordination/batch/file-batch.ts" [label=<file-batch.ts> tooltip="file-batch.ts" URL="src/coordination/batch/file-batch.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/batch/file-batch.ts" -> "src/config/logging-config.ts"
    "src/coordination/batch/file-batch.ts" -> "src/coordination/batch/batch-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/batch" {label="batch" "src/coordination/batch/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/batch/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/batch/index.ts" -> "src/coordination/batch/batch-engine.ts"
    "src/coordination/batch/index.ts" -> "src/coordination/batch/batch-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/batch/index.ts" -> "src/coordination/batch/file-batch.ts"
    "src/coordination/batch/index.ts" -> "src/coordination/batch/file-batch.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/batch/index.ts" -> "src/coordination/batch/performance-monitor.ts"
    "src/coordination/batch/index.ts" -> "src/coordination/batch/performance-monitor.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/batch/index.ts" -> "src/coordination/batch/swarm-batch.ts"
    "src/coordination/batch/index.ts" -> "src/coordination/batch/swarm-batch.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/batch" {label="batch" "src/coordination/batch/performance-monitor.ts" [label=<performance-monitor.ts> tooltip="performance-monitor.ts" URL="src/coordination/batch/performance-monitor.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/batch/performance-monitor.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/batch" {label="batch" "src/coordination/batch/swarm-batch.ts" [label=<swarm-batch.ts> tooltip="swarm-batch.ts" URL="src/coordination/batch/swarm-batch.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/batch/swarm-batch.ts" -> "src/config/logging-config.ts"
    "src/coordination/batch/swarm-batch.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/batch/swarm-batch.ts" -> "src/coordination/batch/batch-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/collective-cube-sync.ts" [label=<collective-cube-sync.ts> tooltip="collective-cube-sync.ts" URL="src/coordination/collective-cube-sync.ts" fillcolor="#ddfeff"] } }
    "src/coordination/collective-cube-sync.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/collective-cube-sync.ts" -> "src/coordination/collective-fact-integration.ts"
    "src/coordination/collective-cube-sync.ts" -> "src/coordination/collective-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/collective-cube-sync.ts" -> "src/coordination/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/collective-fact-integration.ts" [label=<collective-fact-integration.ts> tooltip="collective-fact-integration.ts" URL="src/coordination/collective-fact-integration.ts" fillcolor="#ddfeff"] } }
    "src/coordination/collective-fact-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/collective-fact-integration.ts" -> "src/knowledge/types/fact-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/collective-fact-integration.ts" -> "src/coordination/collective-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/collective-fact-integration.ts" -> "src/coordination/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/collective-knowledge-bridge.ts" [label=<collective-knowledge-bridge.ts> tooltip="collective-knowledge-bridge.ts" URL="src/coordination/collective-knowledge-bridge.ts" fillcolor="#ddfeff"] } }
    "src/coordination/collective-knowledge-bridge.ts" -> "src/config/logging-config.ts"
    "src/coordination/collective-knowledge-bridge.ts" -> "src/memory/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/collective-neural-hub.ts" [label=<collective-neural-hub.ts> tooltip="collective-neural-hub.ts" URL="src/coordination/collective-neural-hub.ts" fillcolor="#ddfeff"] } }
    "src/coordination/collective-neural-hub.ts" -> "src/config/logging-config.ts"
    "src/coordination/collective-neural-hub.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/collective-neural-hub.ts" -> "src/coordination/collective-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/collective-neural-hub.ts" -> "src/coordination/cubes/dev-cube-matron.ts"
    "src/coordination/collective-neural-hub.ts" -> "src/coordination/cubes/ops-cube-matron.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/collective-types.ts" [label=<collective-types.ts> tooltip="collective-types.ts" URL="src/coordination/collective-types.ts" fillcolor="#ddfeff"] } }
    "src/coordination/collective-types.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/core" {label="core" "src/coordination/core/event-bus.ts" [label=<event-bus.ts> tooltip="event-bus.ts" URL="src/coordination/core/event-bus.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/cubes" {label="cubes" "src/coordination/cubes/dev-cube-matron.ts" [label=<dev-cube-matron.ts> tooltip="dev-cube-matron.ts" URL="src/coordination/cubes/dev-cube-matron.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/cubes/dev-cube-matron.ts" -> "src/config/logging-config.ts"
    "src/coordination/cubes/dev-cube-matron.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/cubes/dev-cube-matron.ts" -> "src/coordination/collective-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/cubes" {label="cubes" "src/coordination/cubes/ops-cube-matron.ts" [label=<ops-cube-matron.ts> tooltip="ops-cube-matron.ts" URL="src/coordination/cubes/ops-cube-matron.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/cubes/ops-cube-matron.ts" -> "src/config/logging-config.ts"
    "src/coordination/cubes/ops-cube-matron.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/cubes/ops-cube-matron.ts" -> "src/coordination/collective-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/database-sparc-bridge.ts" [label=<database-sparc-bridge.ts> tooltip="database-sparc-bridge.ts" URL="src/coordination/database-sparc-bridge.ts" fillcolor="#ddfeff"] } }
    "src/coordination/database-sparc-bridge.ts" -> "src/config/logging-config.ts"
    "src/coordination/database-sparc-bridge.ts" -> "src/core/database-driven-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/database-sparc-bridge.ts" -> "src/core/helpers.ts"
    "src/coordination/database-sparc-bridge.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/database-sparc-bridge.ts" -> "src/database/managers/document-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/database-sparc-bridge.ts" -> "src/coordination/swarm/core/sparc-swarm-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/diagnostics" {label="diagnostics" "src/coordination/diagnostics/cli-diagnostics.ts" [label=<cli-diagnostics.ts> tooltip="cli-diagnostics.ts" URL="src/coordination/diagnostics/cli-diagnostics.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/diagnostics/cli-diagnostics.ts" -> "src/coordination/diagnostics/diagnostics.ts"
    "src/coordination/diagnostics/cli-diagnostics.ts" -> "src/coordination/diagnostics/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/diagnostics" {label="diagnostics" "src/coordination/diagnostics/diagnostics.ts" [label=<diagnostics.ts> tooltip="diagnostics.ts" URL="src/coordination/diagnostics/diagnostics.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/diagnostics/diagnostics.ts" -> "src/coordination/diagnostics/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/diagnostics" {label="diagnostics" "src/coordination/diagnostics/health-monitor.ts" [label=<health-monitor.ts> tooltip="health-monitor.ts" URL="src/coordination/diagnostics/health-monitor.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/diagnostics/health-monitor.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/diagnostics" {label="diagnostics" "src/coordination/diagnostics/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/diagnostics/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/diagnostics/index.ts" -> "src/coordination/diagnostics/cli-diagnostics.ts" [arrowhead="inv"]
    "src/coordination/diagnostics/index.ts" -> "src/coordination/diagnostics/diagnostics.ts" [arrowhead="inv"]
    "src/coordination/diagnostics/index.ts" -> "src/coordination/diagnostics/health-monitor.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/diagnostics" {label="diagnostics" "src/coordination/diagnostics/logging-config.ts" [label=<logging-config.ts> tooltip="logging-config.ts" URL="src/coordination/diagnostics/logging-config.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/diagnostics/logging-config.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/auto-swarm-factory.ts" [label=<auto-swarm-factory.ts> tooltip="auto-swarm-factory.ts" URL="src/coordination/discovery/auto-swarm-factory.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/auto-swarm-factory.ts" -> "src/config/logging-config.ts"
    "src/coordination/discovery/auto-swarm-factory.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/auto-swarm-factory.ts" -> "src/memory/memory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/auto-swarm-factory.ts" -> "src/coordination/collective-cube-sync.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/auto-swarm-factory.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/domain-discovery-bridge.ts" [label=<domain-discovery-bridge.ts> tooltip="domain-discovery-bridge.ts" URL="src/coordination/discovery/domain-discovery-bridge.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/config/logging-config.ts"
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/core/document-processor.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/knowledge/intelligence-coordination-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/knowledge/project-context-analyzer.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/tools/domain-splitting/analyzers/domain-analyzer.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/coordination/discovery/neural-domain-mapper.ts"
    "src/coordination/discovery/domain-discovery-bridge.ts" -> "src/coordination/discovery/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/knowledge-enhanced-discovery.ts" [label=<knowledge-enhanced-discovery.ts> tooltip="knowledge-enhanced-discovery.ts" URL="src/coordination/discovery/knowledge-enhanced-discovery.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/knowledge-enhanced-discovery.ts" -> "src/config/logging-config.ts"
    "src/coordination/discovery/knowledge-enhanced-discovery.ts" -> "src/interfaces/tui/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/knowledge-enhanced-discovery.ts" -> "src/memory/memory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/knowledge-enhanced-discovery.ts" -> "src/coordination/swarm/knowledge-sync.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/neural-domain-mapper.ts" [label=<neural-domain-mapper.ts> tooltip="neural-domain-mapper.ts" URL="src/coordination/discovery/neural-domain-mapper.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/neural-domain-mapper.ts" -> "src/neural/models/presets/gnn.js"
    "src/coordination/discovery/neural-domain-mapper.ts" -> "src/neural/wasm/wasm-neural-accelerator.ts" [xlabel="neural-wasm-isolation" tooltip="neural-wasm-isolation" fontcolor="orange" color="orange"]
    "src/coordination/discovery/neural-domain-mapper.ts" -> "src/coordination/services/llm-integration.service.ts"
    "src/coordination/discovery/neural-domain-mapper.ts" -> "src/coordination/discovery/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/progressive-confidence-builder.ts" [label=<progressive-confidence-builder.ts> tooltip="progressive-confidence-builder.ts" URL="src/coordination/discovery/progressive-confidence-builder.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/progressive-confidence-builder.ts" -> "src/config/logging-config.ts"
    "src/coordination/discovery/progressive-confidence-builder.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/progressive-confidence-builder.ts" -> "src/memory/memory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/discovery/progressive-confidence-builder.ts" -> "src/coordination/collective-fact-integration.ts"
    "src/coordination/discovery/progressive-confidence-builder.ts" -> "src/coordination/discovery/domain-discovery-bridge.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/test-bazel-integration.ts" [label=<test-bazel-integration.ts> tooltip="test-bazel-integration.ts" URL="src/coordination/discovery/test-bazel-integration.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/test-bazel-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/discovery/test-bazel-integration.ts" -> "src/knowledge/project-context-analyzer.ts"
    "src/coordination/discovery/test-bazel-integration.ts" -> "src/coordination/discovery/neural-domain-mapper.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/test-domain-discovery.ts" [label=<test-domain-discovery.ts> tooltip="test-domain-discovery.ts" URL="src/coordination/discovery/test-domain-discovery.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/discovery/test-domain-discovery.ts" -> "src/config/logging-config.ts"
    "src/coordination/discovery/test-domain-discovery.ts" -> "src/coordination/core/event-bus.ts"
    "src/coordination/discovery/test-domain-discovery.ts" -> "src/coordination/discovery/domain-discovery-bridge.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/discovery" {label="discovery" "src/coordination/discovery/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/coordination/discovery/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/ephemeral-swarm-lifecycle.ts" [label=<ephemeral-swarm-lifecycle.ts> tooltip="ephemeral-swarm-lifecycle.ts" URL="src/coordination/ephemeral-swarm-lifecycle.ts" fillcolor="#ddfeff"] } }
    "src/coordination/ephemeral-swarm-lifecycle.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/ephemeral-swarm-lifecycle.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/examples" {label="examples" "src/coordination/examples/sparc-swarm-integration-example.ts" [label=<sparc-swarm-integration-example.ts> tooltip="sparc-swarm-integration-example.ts" URL="src/coordination/examples/sparc-swarm-integration-example.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/config/logging-config.ts"
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/core/database-driven-system.ts"
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/core/workflow-engine.ts"
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/database/managers/document-manager.ts"
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/coordination/database-sparc-bridge.ts"
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/coordination/swarm/core/sparc-swarm-coordinator.ts"
    "src/coordination/examples/sparc-swarm-integration-example.ts" -> "src/coordination/task-coordinator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/auto-agent-assignment.ts" [label=<auto-agent-assignment.ts> tooltip="auto-agent-assignment.ts" URL="src/coordination/hooks/auto-agent-assignment.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/auto-agent-assignment.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/hooks/auto-agent-assignment.ts" -> "src/coordination/hooks/hook-system-core.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/hook-manager.ts" [label=<hook-manager.ts> tooltip="hook-manager.ts" URL="src/coordination/hooks/hook-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/hook-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/hooks/hook-manager.ts" -> "src/coordination/hooks/hook-system-core.ts"
    "src/coordination/hooks/hook-manager.ts" -> "src/coordination/hooks/hook-system-core.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/hook-system-core.ts" [label=<hook-system-core.ts> tooltip="hook-system-core.ts" URL="src/coordination/hooks/hook-system-core.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/hook-system-core.ts" -> "src/coordination/hooks/hook-system.ts" [arrowhead="inv"]
    "src/coordination/hooks/hook-system-core.ts" -> "src/coordination/hooks/hook-system.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/hook-system.ts" [label=<hook-system.ts> tooltip="hook-system.ts" URL="src/coordination/hooks/hook-system.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/hook-system.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/hooks/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/index.ts" -> "src/coordination/hooks/auto-agent-assignment.ts" [arrowhead="inv"]
    "src/coordination/hooks/index.ts" -> "src/coordination/hooks/hook-manager.ts"
    "src/coordination/hooks/index.ts" -> "src/coordination/hooks/hook-system-core.ts" [arrowhead="inv"]
    "src/coordination/hooks/index.ts" -> "src/coordination/hooks/performance-tracker.ts" [arrowhead="inv"]
    "src/coordination/hooks/index.ts" -> "src/coordination/hooks/safety-validator.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/performance-tracker.ts" [label=<performance-tracker.ts> tooltip="performance-tracker.ts" URL="src/coordination/hooks/performance-tracker.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/performance-tracker.ts" -> "src/config/logging-config.ts"
    "src/coordination/hooks/performance-tracker.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/hooks/performance-tracker.ts" -> "src/coordination/hooks/hook-system-core.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/hooks" {label="hooks" "src/coordination/hooks/safety-validator.ts" [label=<safety-validator.ts> tooltip="safety-validator.ts" URL="src/coordination/hooks/safety-validator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/hooks/safety-validator.ts" -> "src/coordination/hooks/hook-system-core.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/index.ts" fillcolor="#ddfeff"] } }
    "src/coordination/index.ts" -> "src/coordination/diagnostics/index.ts" [arrowhead="inv"]
    "src/coordination/index.ts" -> "src/coordination/orchestrator.ts" [arrowhead="inv"]
    "src/coordination/index.ts" -> "src/coordination/public-api.ts" [arrowhead="inv"]
    "src/coordination/index.ts" -> "src/coordination/strategies/ruv-swarm.strategy.ts" [arrowhead="inv"]
    "src/coordination/index.ts" -> "src/coordination/swarm/sparc/index.ts" [arrowhead="inv"]
    "src/coordination/index.ts" -> "src/coordination/types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/kanban" {label="kanban" "src/coordination/kanban/bottleneck-detector.ts" [label=<bottleneck-detector.ts> tooltip="bottleneck-detector.ts" URL="src/coordination/kanban/bottleneck-detector.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/config/logging-config.ts"
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/bottleneck-detector.ts" -> "src/coordination/kanban/flow-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/kanban" {label="kanban" "src/coordination/kanban/flow-integration-manager.ts" [label=<flow-integration-manager.ts> tooltip="flow-integration-manager.ts" URL="src/coordination/kanban/flow-integration-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/kanban/flow-integration-manager.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-integration-manager.ts" -> "src/coordination/kanban/bottleneck-detector.ts"
    "src/coordination/kanban/flow-integration-manager.ts" -> "src/coordination/kanban/flow-manager.ts"
    "src/coordination/kanban/flow-integration-manager.ts" -> "src/coordination/kanban/metrics-tracker.ts"
    "src/coordination/kanban/flow-integration-manager.ts" -> "src/coordination/kanban/resource-manager.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/kanban" {label="kanban" "src/coordination/kanban/flow-manager.ts" [label=<flow-manager.ts> tooltip="flow-manager.ts" URL="src/coordination/kanban/flow-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/kanban/flow-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/kanban/flow-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/kanban/flow-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-manager.ts" -> "src/coordination/orchestration/multi-level-orchestration-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-manager.ts" -> "src/coordination/orchestration/portfolio-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-manager.ts" -> "src/coordination/orchestration/program-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/flow-manager.ts" -> "src/coordination/orchestration/swarm-execution-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/kanban" {label="kanban" "src/coordination/kanban/metrics-tracker.ts" [label=<metrics-tracker.ts> tooltip="metrics-tracker.ts" URL="src/coordination/kanban/metrics-tracker.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/kanban/metrics-tracker.ts" -> "src/config/logging-config.ts"
    "src/coordination/kanban/metrics-tracker.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/metrics-tracker.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/metrics-tracker.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/kanban/metrics-tracker.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/metrics-tracker.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/kanban/metrics-tracker.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/metrics-tracker.ts" -> "src/coordination/kanban/bottleneck-detector.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/kanban/metrics-tracker.ts" -> "src/coordination/kanban/flow-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/kanban" {label="kanban" "src/coordination/kanban/resource-manager.ts" [label=<resource-manager.ts> tooltip="resource-manager.ts" URL="src/coordination/kanban/resource-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/kanban/resource-manager.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/algorithms" {label="algorithms" "src/coordination/load-balancing/algorithms/adaptive-learning.ts" [label=<adaptive-learning.ts> tooltip="adaptive-learning.ts" URL="src/coordination/load-balancing/algorithms/adaptive-learning.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/algorithms/adaptive-learning.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/algorithms/adaptive-learning.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/algorithms" {label="algorithms" "src/coordination/load-balancing/algorithms/least-connections.ts" [label=<least-connections.ts> tooltip="least-connections.ts" URL="src/coordination/load-balancing/algorithms/least-connections.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/algorithms/least-connections.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/algorithms" {label="algorithms" "src/coordination/load-balancing/algorithms/ml-predictive.ts" [label=<ml-predictive.ts> tooltip="ml-predictive.ts" URL="src/coordination/load-balancing/algorithms/ml-predictive.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/algorithms/ml-predictive.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/algorithms/ml-predictive.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/algorithms" {label="algorithms" "src/coordination/load-balancing/algorithms/resource-aware.ts" [label=<resource-aware.ts> tooltip="resource-aware.ts" URL="src/coordination/load-balancing/algorithms/resource-aware.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/algorithms/resource-aware.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/algorithms/resource-aware.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/algorithms" {label="algorithms" "src/coordination/load-balancing/algorithms/weighted-round-robin.ts" [label=<weighted-round-robin.ts> tooltip="weighted-round-robin.ts" URL="src/coordination/load-balancing/algorithms/weighted-round-robin.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/algorithms/weighted-round-robin.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/algorithms/weighted-round-robin.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/capacity" {label="capacity" "src/coordination/load-balancing/capacity/agent-capacity-manager.ts" [label=<agent-capacity-manager.ts> tooltip="agent-capacity-manager.ts" URL="src/coordination/load-balancing/capacity/agent-capacity-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/capacity/agent-capacity-manager.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/capacity/agent-capacity-manager.ts" -> "src/coordination/load-balancing/capacity/capacity-predictor.ts"
    "src/coordination/load-balancing/capacity/agent-capacity-manager.ts" -> "src/coordination/load-balancing/capacity/resource-monitor.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/capacity" {label="capacity" "src/coordination/load-balancing/capacity/capacity-predictor.ts" [label=<capacity-predictor.ts> tooltip="capacity-predictor.ts" URL="src/coordination/load-balancing/capacity/capacity-predictor.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/capacity" {label="capacity" "src/coordination/load-balancing/capacity/resource-monitor.ts" [label=<resource-monitor.ts> tooltip="resource-monitor.ts" URL="src/coordination/load-balancing/capacity/resource-monitor.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/capacity/resource-monitor.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" "src/coordination/load-balancing/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/load-balancing/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/algorithms/adaptive-learning.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/algorithms/least-connections.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/algorithms/ml-predictive.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/algorithms/resource-aware.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/algorithms/weighted-round-robin.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/capacity/agent-capacity-manager.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/capacity/capacity-predictor.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/capacity/resource-monitor.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/load-balancing-manager.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/optimization/network-latency-optimizer.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/routing/failover-manager.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/routing/task-agent-matcher.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/strategies/auto-scaling-strategy.ts" [arrowhead="inv"]
    "src/coordination/load-balancing/index.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" "src/coordination/load-balancing/interfaces.ts" [label=<interfaces.ts> tooltip="interfaces.ts" URL="src/coordination/load-balancing/interfaces.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/load-balancing/interfaces.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" "src/coordination/load-balancing/load-balancing-manager.ts" [label=<load-balancing-manager.ts> tooltip="load-balancing-manager.ts" URL="src/coordination/load-balancing/load-balancing-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/algorithms/adaptive-learning.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/algorithms/least-connections.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/algorithms/ml-predictive.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/algorithms/resource-aware.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/algorithms/weighted-round-robin.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/capacity/agent-capacity-manager.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/optimization/emergency-protocol-handler.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/routing/health-checker.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/routing/intelligent-routing-engine.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/strategies/auto-scaling-strategy.ts"
    "src/coordination/load-balancing/load-balancing-manager.ts" -> "src/coordination/load-balancing/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/optimization" {label="optimization" "src/coordination/load-balancing/optimization/emergency-protocol-handler.ts" [label=<emergency-protocol-handler.ts> tooltip="emergency-protocol-handler.ts" URL="src/coordination/load-balancing/optimization/emergency-protocol-handler.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/optimization/emergency-protocol-handler.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/optimization" {label="optimization" "src/coordination/load-balancing/optimization/network-latency-optimizer.ts" [label=<network-latency-optimizer.ts> tooltip="network-latency-optimizer.ts" URL="src/coordination/load-balancing/optimization/network-latency-optimizer.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/optimization/network-latency-optimizer.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/routing" {label="routing" "src/coordination/load-balancing/routing/failover-manager.ts" [label=<failover-manager.ts> tooltip="failover-manager.ts" URL="src/coordination/load-balancing/routing/failover-manager.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/routing" {label="routing" "src/coordination/load-balancing/routing/health-checker.ts" [label=<health-checker.ts> tooltip="health-checker.ts" URL="src/coordination/load-balancing/routing/health-checker.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/routing" {label="routing" "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" [label=<intelligent-routing-engine.ts> tooltip="intelligent-routing-engine.ts" URL="src/coordination/load-balancing/routing/intelligent-routing-engine.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" -> "src/coordination/load-balancing/optimization/network-latency-optimizer.ts"
    "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" -> "src/coordination/load-balancing/routing/failover-manager.ts"
    "src/coordination/load-balancing/routing/intelligent-routing-engine.ts" -> "src/coordination/load-balancing/routing/task-agent-matcher.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/routing" {label="routing" "src/coordination/load-balancing/routing/task-agent-matcher.ts" [label=<task-agent-matcher.ts> tooltip="task-agent-matcher.ts" URL="src/coordination/load-balancing/routing/task-agent-matcher.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/routing/task-agent-matcher.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/load-balancing/routing/task-agent-matcher.ts" -> "src/coordination/load-balancing/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" subgraph "cluster_src/coordination/load-balancing/strategies" {label="strategies" "src/coordination/load-balancing/strategies/auto-scaling-strategy.ts" [label=<auto-scaling-strategy.ts> tooltip="auto-scaling-strategy.ts" URL="src/coordination/load-balancing/strategies/auto-scaling-strategy.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/load-balancing/strategies/auto-scaling-strategy.ts" -> "src/coordination/load-balancing/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/load-balancing" {label="load-balancing" "src/coordination/load-balancing/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/coordination/load-balancing/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/manager.ts" [label=<manager.ts> tooltip="manager.ts" URL="src/coordination/manager.ts" fillcolor="#ddfeff"] } }
    "src/coordination/manager.ts" -> "src/di/index.ts"
    "src/coordination/manager.ts" -> "src/di/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/mcp" {label="mcp" "src/coordination/mcp/dspy-swarm-mcp-tools.ts" [label=<dspy-swarm-mcp-tools.ts> tooltip="dspy-swarm-mcp-tools.ts" URL="src/coordination/mcp/dspy-swarm-mcp-tools.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/mcp/dspy-swarm-mcp-tools.ts" -> "src/config/logging-config.ts"
    "src/coordination/mcp/dspy-swarm-mcp-tools.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/mcp/dspy-swarm-mcp-tools.ts" -> "src/coordination/swarm/dspy-swarm-coordinator.ts"
    "src/coordination/mcp/dspy-swarm-mcp-tools.ts" -> "src/coordination/swarm/dspy-swarm-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/mcp/dspy-swarm-mcp-tools.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/multi-level-orchestration-manager.ts" [label=<multi-level-orchestration-manager.ts> tooltip="multi-level-orchestration-manager.ts" URL="src/coordination/orchestration/multi-level-orchestration-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/multi-level-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/parallel-workflow-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/portfolio-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/product-workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/program-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/swarm-execution-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-orchestration-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/multi-level-types.ts" [label=<multi-level-types.ts> tooltip="multi-level-types.ts" URL="src/coordination/orchestration/multi-level-types.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/multi-level-types.ts" -> "src/core/domain-boundary-validator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-types.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-types.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-types.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-types.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/multi-level-types.ts" -> "src/coordination/workflows/workflow-gate-request.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/parallel-workflow-manager.ts" [label=<parallel-workflow-manager.ts> tooltip="parallel-workflow-manager.ts" URL="src/coordination/orchestration/parallel-workflow-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/parallel-workflow-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/parallel-workflow-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/parallel-workflow-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/parallel-workflow-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/parallel-workflow-manager.ts" -> "src/coordination/orchestration/multi-level-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/portfolio-orchestrator.ts" [label=<portfolio-orchestrator.ts> tooltip="portfolio-orchestrator.ts" URL="src/coordination/orchestration/portfolio-orchestrator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/coordination/orchestration/multi-level-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/orchestration/portfolio-orchestrator.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/product-workflow-engine.ts" [label=<product-workflow-engine.ts> tooltip="product-workflow-engine.ts" URL="src/coordination/orchestration/product-workflow-engine.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/database/managers/document-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/interfaces/agui/workflow-agui-adapter.ts"
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/coordination/swarm/sparc/core/sparc-engine.ts"
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/coordination/workflows/workflow-gate-request.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/product-workflow-engine.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/program-orchestrator.ts" [label=<program-orchestrator.ts> tooltip="program-orchestrator.ts" URL="src/coordination/orchestration/program-orchestrator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/coordination/orchestration/multi-level-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/orchestration/program-orchestrator.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/swarm-execution-orchestrator.ts" [label=<swarm-execution-orchestrator.ts> tooltip="swarm-execution-orchestrator.ts" URL="src/coordination/orchestration/swarm-execution-orchestrator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/agents/agent.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/collective-cube-sync.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/swarm/sparc/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/orchestration/multi-level-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/orchestration/swarm-execution-orchestrator.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/orchestration" {label="orchestration" "src/coordination/orchestration/workflow-gates.ts" [label=<workflow-gates.ts> tooltip="workflow-gates.ts" URL="src/coordination/orchestration/workflow-gates.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/orchestration/workflow-gates.ts" -> "src/config/logging-config.ts"
    "src/coordination/orchestration/workflow-gates.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestration/workflow-gates.ts" -> "src/core/domain-boundary-validator.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/coordination/orchestration/workflow-gates.ts" -> "src/core/type-safe-event-system.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/coordination/orchestration/workflow-gates.ts" -> "src/workflows/types.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/coordination/orchestration/workflow-gates.ts" -> "src/coordination/workflows/workflow-gate-request.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/orchestrator.ts" [label=<orchestrator.ts> tooltip="orchestrator.ts" URL="src/coordination/orchestrator.ts" fillcolor="#ddfeff"] } }
    "src/coordination/orchestrator.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestrator.ts" -> "src/di/tokens/core-tokens.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestrator.ts" -> "src/di/tokens/swarm-tokens.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/orchestrator.ts" -> "src/coordination/strategies/ruv-swarm.strategy.ts"
    "src/coordination/orchestrator.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/persistent-learning-system.ts" [label=<persistent-learning-system.ts> tooltip="persistent-learning-system.ts" URL="src/coordination/persistent-learning-system.ts" fillcolor="#ddfeff"] } }
    "src/coordination/persistent-learning-system.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/persistent-learning-system.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/protocols" {label="protocols" subgraph "cluster_src/coordination/protocols/communication" {label="communication" "src/coordination/protocols/communication/communication-protocols.ts" [label=<communication-protocols.ts> tooltip="communication-protocols.ts" URL="src/coordination/protocols/communication/communication-protocols.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/protocols/communication/communication-protocols.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/communication/communication-protocols.ts" -> "src/coordination/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/protocols" {label="protocols" "src/coordination/protocols/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/protocols/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/protocols/index.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/index.ts" -> "src/coordination/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/index.ts" -> "src/coordination/protocols/communication/communication-protocols.ts"
    "src/coordination/protocols/index.ts" -> "src/coordination/protocols/lifecycle/agent-lifecycle-manager.ts"
    "src/coordination/protocols/index.ts" -> "src/coordination/protocols/optimization/performance-optimizer.ts"
    "src/coordination/protocols/index.ts" -> "src/coordination/protocols/patterns/coordination-patterns.ts"
    "src/coordination/protocols/index.ts" -> "src/coordination/protocols/topology/topology-manager.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/protocols" {label="protocols" subgraph "cluster_src/coordination/protocols/lifecycle" {label="lifecycle" "src/coordination/protocols/lifecycle/agent-lifecycle-manager.ts" [label=<agent-lifecycle-manager.ts> tooltip="agent-lifecycle-manager.ts" URL="src/coordination/protocols/lifecycle/agent-lifecycle-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/protocols/lifecycle/agent-lifecycle-manager.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/lifecycle/agent-lifecycle-manager.ts" -> "src/coordination/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/protocols" {label="protocols" subgraph "cluster_src/coordination/protocols/optimization" {label="optimization" "src/coordination/protocols/optimization/performance-optimizer.ts" [label=<performance-optimizer.ts> tooltip="performance-optimizer.ts" URL="src/coordination/protocols/optimization/performance-optimizer.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/protocols/optimization/performance-optimizer.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/optimization/performance-optimizer.ts" -> "src/coordination/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/protocols" {label="protocols" subgraph "cluster_src/coordination/protocols/patterns" {label="patterns" "src/coordination/protocols/patterns/coordination-patterns.ts" [label=<coordination-patterns.ts> tooltip="coordination-patterns.ts" URL="src/coordination/protocols/patterns/coordination-patterns.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/protocols/patterns/coordination-patterns.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/patterns/coordination-patterns.ts" -> "src/coordination/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/protocols" {label="protocols" subgraph "cluster_src/coordination/protocols/topology" {label="topology" "src/coordination/protocols/topology/topology-manager.ts" [label=<topology-manager.ts> tooltip="topology-manager.ts" URL="src/coordination/protocols/topology/topology-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/protocols/topology/topology-manager.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/protocols/topology/topology-manager.ts" -> "src/coordination/core/event-bus.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/public-api.ts" [label=<public-api.ts> tooltip="public-api.ts" URL="src/coordination/public-api.ts" fillcolor="#ddfeff"] } }
    "src/coordination/public-api.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [style="dashed"]
    "src/coordination/public-api.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/architecture-runway-manager.ts" [label=<architecture-runway-manager.ts> tooltip="architecture-runway-manager.ts" URL="src/coordination/safe/architecture-runway-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/coordination/safe/program-increment-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/architecture-runway-manager.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/continuous-delivery-pipeline.ts" [label=<continuous-delivery-pipeline.ts> tooltip="continuous-delivery-pipeline.ts" URL="src/coordination/safe/continuous-delivery-pipeline.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/coordination/orchestration/swarm-execution-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/continuous-delivery-pipeline.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/enterprise-architecture-manager.ts" [label=<enterprise-architecture-manager.ts> tooltip="enterprise-architecture-manager.ts" URL="src/coordination/safe/enterprise-architecture-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/coordination/safe/architecture-runway-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/coordination/safe/program-increment-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/coordination/safe/system-solution-architecture-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/enterprise-architecture-manager.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/safe/index.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/portfolio-manager.ts" [label=<portfolio-manager.ts> tooltip="portfolio-manager.ts" URL="src/coordination/safe/portfolio-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/portfolio-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/portfolio-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/portfolio-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/coordination/orchestration/portfolio-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/safe/portfolio-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/coordination/safe/program-increment-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/portfolio-manager.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/program-increment-manager.ts" [label=<program-increment-manager.ts> tooltip="program-increment-manager.ts" URL="src/coordination/safe/program-increment-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/program-increment-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/program-increment-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/program-increment-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/program-increment-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/program-increment-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/program-increment-manager.ts" -> "src/coordination/orchestration/program-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/program-increment-manager.ts" -> "src/coordination/orchestration/swarm-execution-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/program-increment-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/safe/program-increment-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/program-increment-manager.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/safe-events-manager.ts" [label=<safe-events-manager.ts> tooltip="safe-events-manager.ts" URL="src/coordination/safe/safe-events-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/safe-events-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/safe-events-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/safe-events-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/safe/safe-events-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/coordination/safe/portfolio-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/coordination/safe/program-increment-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/safe-events-manager.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/system-solution-architecture-manager.ts" [label=<system-solution-architecture-manager.ts> tooltip="system-solution-architecture-manager.ts" URL="src/coordination/safe/system-solution-architecture-manager.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/coordination/orchestration/workflow-gates.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/coordination/safe/architecture-runway-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/coordination/safe/program-increment-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/system-solution-architecture-manager.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/value-stream-mapper.ts" [label=<value-stream-mapper.ts> tooltip="value-stream-mapper.ts" URL="src/coordination/safe/value-stream-mapper.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/value-stream-mapper.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/value-stream-mapper.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/value-stream-mapper.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/coordination/orchestration/multi-level-orchestration-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/coordination/orchestration/portfolio-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/coordination/orchestration/program-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/coordination/orchestration/swarm-execution-orchestrator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-mapper.ts" -> "src/coordination/safe/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/safe" {label="safe" "src/coordination/safe/value-stream-optimization-engine.ts" [label=<value-stream-optimization-engine.ts> tooltip="value-stream-optimization-engine.ts" URL="src/coordination/safe/value-stream-optimization-engine.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/safe/value-stream-optimization-engine.ts" -> "src/config/logging-config.ts"
    "src/coordination/safe/value-stream-optimization-engine.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-optimization-engine.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-optimization-engine.ts" -> "src/core/type-safe-event-system.ts"
    "src/coordination/safe/value-stream-optimization-engine.ts" -> "src/core/type-safe-event-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/safe/value-stream-optimization-engine.ts" -> "src/coordination/safe/value-stream-mapper.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/schemas.ts" [label=<schemas.ts> tooltip="schemas.ts" URL="src/coordination/schemas.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/services" {label="services" "src/coordination/services/document-task-vision-coordinator.ts" [label=<document-task-vision-coordinator.ts> tooltip="document-task-vision-coordinator.ts" URL="src/coordination/services/document-task-vision-coordinator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/services/document-task-vision-coordinator.ts" -> "src/core/logger.ts"
    "src/coordination/services/document-task-vision-coordinator.ts" -> "src/database/entities/document-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/services/document-task-vision-coordinator.ts" -> "src/database/managers/document-manager.ts"
    "src/coordination/services/document-task-vision-coordinator.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/services/document-task-vision-coordinator.ts" -> "src/coordination/services/strategic-vision-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/services" {label="services" "src/coordination/services/llm-integration.service.ts" [label=<llm-integration.service.ts> tooltip="llm-integration.service.ts" URL="src/coordination/services/llm-integration.service.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/services/llm-integration.service.ts" -> "src/config/llm-providers.config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/services" {label="services" "src/coordination/services/llm-stats-service.ts" [label=<llm-stats-service.ts> tooltip="llm-stats-service.ts" URL="src/coordination/services/llm-stats-service.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/services/llm-stats-service.ts" -> "src/config/llm-providers.config.ts"
    "src/coordination/services/llm-stats-service.ts" -> "src/core/logger.ts"
    "src/coordination/services/llm-stats-service.ts" -> "src/coordination/services/llm-integration.service.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/services" {label="services" subgraph "cluster_src/coordination/services/providers" {label="providers" "src/coordination/services/providers/claude-code-handler.ts" [label=<claude-code-handler.ts> tooltip="claude-code-handler.ts" URL="src/coordination/services/providers/claude-code-handler.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/services/providers/claude-code-handler.ts" -> "src/integrations/claude-code/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/services" {label="services" subgraph "cluster_src/coordination/services/providers" {label="providers" "src/coordination/services/providers/gemini-handler.ts" [label=<gemini-handler.ts> tooltip="no-orphans" URL="src/coordination/services/providers/gemini-handler.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/services" {label="services" "src/coordination/services/strategic-vision-service.ts" [label=<strategic-vision-service.ts> tooltip="strategic-vision-service.ts" URL="src/coordination/services/strategic-vision-service.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/services/strategic-vision-service.ts" -> "src/core/logger.ts"
    "src/coordination/services/strategic-vision-service.ts" -> "src/database/entities/document-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/services/strategic-vision-service.ts" -> "src/database/managers/document-manager.ts"
    "src/coordination/services/strategic-vision-service.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/shared-types.ts" [label=<shared-types.ts> tooltip="shared-types.ts" URL="src/coordination/shared-types.ts" fillcolor="#ddfeff"] } }
    "src/coordination/shared-types.ts" -> "src/knowledge/types/fact-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/shared-types.ts" -> "src/coordination/collective-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/sparc_integration_summary.ts" [label=<sparc_integration_summary.ts> tooltip="no-orphans" URL="src/coordination/sparc_integration_summary.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/strategies" {label="strategies" "src/coordination/strategies/ruv-swarm.strategy.ts" [label=<ruv-swarm.strategy.ts> tooltip="ruv-swarm.strategy.ts" URL="src/coordination/strategies/ruv-swarm.strategy.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/strategies/ruv-swarm.strategy.ts" -> "src/config/logging-config.ts"
    "src/coordination/strategies/ruv-swarm.strategy.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/strategies/ruv-swarm.strategy.ts" -> "src/coordination/swarm/core/index.ts"
    "src/coordination/strategies/ruv-swarm.strategy.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/sub-agent-generator.ts" [label=<sub-agent-generator.ts> tooltip="sub-agent-generator.ts" URL="src/coordination/sub-agent-generator.ts" fillcolor="#ddfeff"] } }
    "src/coordination/sub-agent-generator.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/swarm-synchronization.ts" [label=<swarm-synchronization.ts> tooltip="swarm-synchronization.ts" URL="src/coordination/swarm-synchronization.ts" fillcolor="#ddfeff"] } }
    "src/coordination/swarm-synchronization.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm-synchronization.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/chaos-engineering" {label="chaos-engineering" "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" [label=<chaos-engineering.ts> tooltip="chaos-engineering.ts" URL="src/coordination/swarm/chaos-engineering/chaos-engineering.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/core/errors.ts"
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/coordination/diagnostics/health-monitor.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/coordination/swarm/connection-management/connection-state-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/coordination/swarm/core/errors.ts"
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/coordination/swarm/core/recovery-workflows.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" -> "src/coordination/swarm/core/utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/cognitive-patterns" {label="cognitive-patterns" "src/coordination/swarm/cognitive-patterns/cognitive-pattern-evolution.ts" [label=<cognitive-pattern-evolution.ts> tooltip="cognitive-pattern-evolution.ts" URL="src/coordination/swarm/cognitive-patterns/cognitive-pattern-evolution.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/connection-management" {label="connection-management" "src/coordination/swarm/connection-management/connection-state-manager.ts" [label=<connection-state-manager.ts> tooltip="connection-state-manager.ts" URL="src/coordination/swarm/connection-management/connection-state-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/connection-management/connection-state-manager.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/agent-adapter.ts" [label=<agent-adapter.ts> tooltip="agent-adapter.ts" URL="src/coordination/swarm/core/agent-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/agent-adapter.ts" -> "src/types/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/base-swarm.ts" [label=<base-swarm.ts> tooltip="base-swarm.ts" URL="src/coordination/swarm/core/base-swarm.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/base-swarm.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/base-swarm.ts" -> "src/wasm-loader.cjs"
    "src/coordination/swarm/core/base-swarm.ts" -> "src/coordination/agents/agent.ts"
    "src/coordination/swarm/core/base-swarm.ts" -> "src/coordination/swarm/core/singleton-container.ts"
    "src/coordination/swarm/core/base-swarm.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/base-swarm.ts" -> "src/coordination/swarm/core/utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/claude-integration" {label="claude-integration" "src/coordination/swarm/core/claude-integration/advanced-commands.ts" [label=<advanced-commands.ts> tooltip="advanced-commands.ts" URL="src/coordination/swarm/core/claude-integration/advanced-commands.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/claude-integration" {label="claude-integration" "src/coordination/swarm/core/claude-integration/core.ts" [label=<core.ts> tooltip="core.ts" URL="src/coordination/swarm/core/claude-integration/core.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/claude-integration" {label="claude-integration" "src/coordination/swarm/core/claude-integration/docs.ts" [label=<docs.ts> tooltip="docs.ts" URL="src/coordination/swarm/core/claude-integration/docs.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/core/claude-integration/docs.ts" -> "src/coordination/swarm/core/claude-integration/advanced-commands.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/claude-integration" {label="claude-integration" "src/coordination/swarm/core/claude-integration/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/swarm/core/claude-integration/index.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/core/claude-integration/index.ts" -> "src/coordination/swarm/core/logging-config.ts"
    "src/coordination/swarm/core/claude-integration/index.ts" -> "src/coordination/swarm/core/claude-integration/core.ts"
    "src/coordination/swarm/core/claude-integration/index.ts" -> "src/coordination/swarm/core/claude-integration/docs.ts"
    "src/coordination/swarm/core/claude-integration/index.ts" -> "src/coordination/swarm/core/claude-integration/remote.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/claude-integration" {label="claude-integration" "src/coordination/swarm/core/claude-integration/remote.ts" [label=<remote.ts> tooltip="remote.ts" URL="src/coordination/swarm/core/claude-integration/remote.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/daa-service.ts" [label=<daa-service.ts> tooltip="daa-service.ts" URL="src/coordination/swarm/core/daa-service.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/errors.ts" [label=<errors.ts> tooltip="errors.ts" URL="src/coordination/swarm/core/errors.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/exports.ts" [label=<exports.ts> tooltip="exports.ts" URL="src/coordination/swarm/core/exports.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/base-swarm.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/daa-service.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/logger.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/performance-benchmarks.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/performance.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/recovery-integration.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/schemas.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/session-integration.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/session-manager.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/session-utils.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/singleton-container.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/topology-manager.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/exports.ts" -> "src/coordination/swarm/core/utils.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/hooks" {label="hooks" "src/coordination/swarm/core/hooks/cli.ts" [label=<cli.ts> tooltip="cli.ts" URL="src/coordination/swarm/core/hooks/cli.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/core/hooks/cli.ts" -> "src/coordination/swarm/core/hooks/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/hooks" {label="hooks" "src/coordination/swarm/core/hooks/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/swarm/core/hooks/index.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/core/hooks/index.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/hooks/index.ts" -> "src/database/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/swarm/core/index.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/index.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/index.ts" -> "src/database/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/index.ts" -> "src/neural/core/neural-network-manager.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/neural/wasm/wasm-loader.ts" [xlabel="neural-wasm-isolation" tooltip="neural-wasm-isolation" fontcolor="orange" color="orange"]
    "src/coordination/swarm/core/index.ts" -> "src/neural/wasm/wasm-loader2.ts" [xlabel="neural-wasm-isolation" tooltip="neural-wasm-isolation" arrowhead="inv" fontcolor="orange" color="orange"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/agents/agent.ts"
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/mcp/mcp-daa-tools.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/agent-adapter.ts"
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/base-swarm.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/errors.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/hooks/index.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/logger.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/logging-config.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/monitoring-dashboard.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/performance-benchmarks.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/performance.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/recovery-integration.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/recovery-workflows.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/schemas.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/session-integration.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/session-manager.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/session-utils.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/singleton-container.ts"
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/topology-manager.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="inv"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/index.ts" -> "src/coordination/swarm/core/utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/logger.ts" [label=<logger.ts> tooltip="logger.ts" URL="src/coordination/swarm/core/logger.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/logger.ts" -> "src/config/index.ts"
    "src/coordination/swarm/core/logger.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/logging-config.ts" [label=<logging-config.ts> tooltip="logging-config.ts" URL="src/coordination/swarm/core/logging-config.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/logging-config.ts" -> "src/coordination/swarm/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/monitoring-dashboard.ts" [label=<monitoring-dashboard.ts> tooltip="monitoring-dashboard.ts" URL="src/coordination/swarm/core/monitoring-dashboard.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/monitoring-dashboard.ts" -> "src/coordination/swarm/core/errors.ts"
    "src/coordination/swarm/core/monitoring-dashboard.ts" -> "src/coordination/swarm/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/performance-benchmarks.ts" [label=<performance-benchmarks.ts> tooltip="performance-benchmarks.ts" URL="src/coordination/swarm/core/performance-benchmarks.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/performance-benchmarks.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/performance-benchmarks.ts" -> "src/neural/wasm/wasm-loader.ts" [xlabel="neural-wasm-isolation" tooltip="neural-wasm-isolation" fontcolor="orange" color="orange"]
    "src/coordination/swarm/core/performance-benchmarks.ts" -> "src/coordination/swarm/core/base-swarm.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/performance.ts" [label=<performance.ts> tooltip="performance.ts" URL="src/coordination/swarm/core/performance.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/performance.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/performance.ts" -> "src/coordination/swarm/core/base-swarm.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/recovery-integration.ts" [label=<recovery-integration.ts> tooltip="recovery-integration.ts" URL="src/coordination/swarm/core/recovery-integration.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/diagnostics/health-monitor.ts"
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/swarm/chaos-engineering/chaos-engineering.ts"
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/swarm/connection-management/connection-state-manager.ts"
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/swarm/core/errors.ts"
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/swarm/core/logger.ts"
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/swarm/core/monitoring-dashboard.ts"
    "src/coordination/swarm/core/recovery-integration.ts" -> "src/coordination/swarm/core/recovery-workflows.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/recovery-workflows.ts" [label=<recovery-workflows.ts> tooltip="recovery-workflows.ts" URL="src/coordination/swarm/core/recovery-workflows.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/recovery-workflows.ts" -> "src/coordination/swarm/core/errors.ts"
    "src/coordination/swarm/core/recovery-workflows.ts" -> "src/coordination/swarm/core/logger.ts"
    "src/coordination/swarm/core/recovery-workflows.ts" -> "src/coordination/swarm/core/utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/schemas.ts" [label=<schemas.ts> tooltip="schemas.ts" URL="src/coordination/swarm/core/schemas.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/schemas.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/schemas.ts" -> "src/coordination/swarm/core/errors.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/security" {label="security" "src/coordination/swarm/core/security/command-sanitizer.ts" [label=<command-sanitizer.ts> tooltip="command-sanitizer.ts" URL="src/coordination/swarm/core/security/command-sanitizer.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" subgraph "cluster_src/coordination/swarm/core/security" {label="security" "src/coordination/swarm/core/security/security-tests.ts" [label=<security-tests.ts> tooltip="security-tests.ts" URL="src/coordination/swarm/core/security/security-tests.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/core/security/security-tests.ts" -> "src/coordination/swarm/core/security/command-sanitizer.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/session-example.ts" [label=<session-example.ts> tooltip="session-example.ts" URL="src/coordination/swarm/core/session-example.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/session-example.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/session-example.ts" -> "src/coordination/swarm/core/session-integration.ts"
    "src/coordination/swarm/core/session-example.ts" -> "src/coordination/swarm/core/session-integration.ts"
    "src/coordination/swarm/core/session-example.ts" -> "src/coordination/swarm/core/session-manager.ts"
    "src/coordination/swarm/core/session-example.ts" -> "src/coordination/swarm/core/session-utils.ts"
    "src/coordination/swarm/core/session-example.ts" -> "src/coordination/swarm/core/session-utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/session-integration.ts" [label=<session-integration.ts> tooltip="session-integration.ts" URL="src/coordination/swarm/core/session-integration.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/session-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/session-integration.ts" -> "src/coordination/swarm/core/base-swarm.ts"
    "src/coordination/swarm/core/session-integration.ts" -> "src/coordination/swarm/core/session-manager.ts"
    "src/coordination/swarm/core/session-integration.ts" -> "src/coordination/swarm/core/session-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/session-integration.ts" -> "src/coordination/swarm/core/session-utils.ts"
    "src/coordination/swarm/core/session-integration.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/session-manager.ts" [label=<session-manager.ts> tooltip="session-manager.ts" URL="src/coordination/swarm/core/session-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/session-manager.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/session-manager.ts" -> "src/database/index.ts"
    "src/coordination/swarm/core/session-manager.ts" -> "src/database/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/session-manager.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/session-manager.ts" -> "src/coordination/swarm/core/utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/session-utils.ts" [label=<session-utils.ts> tooltip="session-utils.ts" URL="src/coordination/swarm/core/session-utils.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/session-utils.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/session-utils.ts" -> "src/coordination/swarm/core/session-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/session-utils.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/singleton-container.ts" [label=<singleton-container.ts> tooltip="singleton-container.ts" URL="src/coordination/swarm/core/singleton-container.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/singleton-container.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/sparc-swarm-coordinator.ts" [label=<sparc-swarm-coordinator.ts> tooltip="sparc-swarm-coordinator.ts" URL="src/coordination/swarm/core/sparc-swarm-coordinator.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/sparc-swarm-coordinator.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/core/sparc-swarm-coordinator.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/sparc-swarm-coordinator.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/sparc-swarm-coordinator.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/core/sparc-swarm-coordinator.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/strategy.ts" [label=<strategy.ts> tooltip="strategy.ts" URL="src/coordination/swarm/core/strategy.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/swarm-coordinator.ts" [label=<swarm-coordinator.ts> tooltip="swarm-coordinator.ts" URL="src/coordination/swarm/core/swarm-coordinator.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/topology-manager.ts" [label=<topology-manager.ts> tooltip="topology-manager.ts" URL="src/coordination/swarm/core/topology-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/topology-manager.ts" -> "src/coordination/protocols/topology/topology-manager.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/types.js" [label=<types.js> tooltip="no-orphans" URL="src/coordination/swarm/core/types.js" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/coordination/swarm/core/types.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/utils.js" [label=<utils.js> tooltip="utils.js" URL="src/coordination/swarm/core/utils.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/core" {label="core" "src/coordination/swarm/core/utils.ts" [label=<utils.ts> tooltip="utils.ts" URL="src/coordination/swarm/core/utils.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/core/utils.ts" -> "src/coordination/swarm/core/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" "src/coordination/swarm/dspy-agent-programs.ts" [label=<dspy-agent-programs.ts> tooltip="dspy-agent-programs.ts" URL="src/coordination/swarm/dspy-agent-programs.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/swarm/dspy-agent-programs.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" "src/coordination/swarm/dspy-swarm-coordinator.ts" [label=<dspy-swarm-coordinator.ts> tooltip="dspy-swarm-coordinator.ts" URL="src/coordination/swarm/dspy-swarm-coordinator.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/swarm/dspy-swarm-coordinator.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/dspy-swarm-coordinator.ts" -> "src/neural/dspy-wrapper.ts"
    "src/coordination/swarm/dspy-swarm-coordinator.ts" -> "src/neural/dspy-wrapper.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/dspy-swarm-coordinator.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/dspy-swarm-coordinator.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" "src/coordination/swarm/dspy-swarm-intelligence.ts" [label=<dspy-swarm-intelligence.ts> tooltip="dspy-swarm-intelligence.ts" URL="src/coordination/swarm/dspy-swarm-intelligence.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/swarm/dspy-swarm-intelligence.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/dspy-swarm-intelligence.ts" -> "src/neural/dspy-wrapper.ts"
    "src/coordination/swarm/dspy-swarm-intelligence.ts" -> "src/neural/dspy-wrapper.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/dspy-swarm-intelligence.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/dspy-swarm-intelligence.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" "src/coordination/swarm/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/swarm/index.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/swarm/index.ts" -> "src/coordination/swarm/chaos-engineering/chaos-engineering.ts" [arrowhead="inv"]
    "src/coordination/swarm/index.ts" -> "src/coordination/swarm/cognitive-patterns/cognitive-pattern-evolution.ts" [arrowhead="inv"]
    "src/coordination/swarm/index.ts" -> "src/coordination/swarm/connection-management/connection-state-manager.ts" [arrowhead="inv"]
    "src/coordination/swarm/index.ts" -> "src/coordination/swarm/core/index.ts" [arrowhead="inv"]
    "src/coordination/swarm/index.ts" -> "src/coordination/swarm/sparc/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" "src/coordination/swarm/knowledge-sync.ts" [label=<knowledge-sync.ts> tooltip="knowledge-sync.ts" URL="src/coordination/swarm/knowledge-sync.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/swarm/knowledge-sync.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/knowledge-sync.ts" -> "src/coordination/collective-knowledge-bridge.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" subgraph "cluster_src/coordination/swarm/mcp/auto-generator" {label="auto-generator" "src/coordination/swarm/mcp/auto-generator/cli.ts" [label=<cli.ts> tooltip="cli.ts" URL="src/coordination/swarm/mcp/auto-generator/cli.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/mcp/auto-generator/cli.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/mcp/auto-generator/cli.ts" -> "src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts"
    "src/coordination/swarm/mcp/auto-generator/cli.ts" -> "src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" subgraph "cluster_src/coordination/swarm/mcp/auto-generator" {label="auto-generator" "src/coordination/swarm/mcp/auto-generator/example.ts" [label=<example.ts> tooltip="example.ts" URL="src/coordination/swarm/mcp/auto-generator/example.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/mcp/auto-generator/example.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/mcp/auto-generator/example.ts" -> "src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" subgraph "cluster_src/coordination/swarm/mcp/auto-generator" {label="auto-generator" "src/coordination/swarm/mcp/auto-generator/execute-conversion.ts" [label=<execute-conversion.ts> tooltip="execute-conversion.ts" URL="src/coordination/swarm/mcp/auto-generator/execute-conversion.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/mcp/auto-generator/execute-conversion.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/mcp/auto-generator/execute-conversion.ts" -> "src/coordination/swarm/mcp/auto-generator/mcp-to-api-converter.ts"
    "src/coordination/swarm/mcp/auto-generator/execute-conversion.ts" -> "src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" subgraph "cluster_src/coordination/swarm/mcp/auto-generator" {label="auto-generator" "src/coordination/swarm/mcp/auto-generator/mcp-integration.ts" [label=<mcp-integration.ts> tooltip="mcp-integration.ts" URL="src/coordination/swarm/mcp/auto-generator/mcp-integration.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/mcp/auto-generator/mcp-integration.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" subgraph "cluster_src/coordination/swarm/mcp/auto-generator" {label="auto-generator" "src/coordination/swarm/mcp/auto-generator/mcp-to-api-converter.ts" [label=<mcp-to-api-converter.ts> tooltip="mcp-to-api-converter.ts" URL="src/coordination/swarm/mcp/auto-generator/mcp-to-api-converter.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/mcp/auto-generator/mcp-to-api-converter.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" subgraph "cluster_src/coordination/swarm/mcp/auto-generator" {label="auto-generator" "src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts" [label=<openapi-mcp-generator.ts> tooltip="openapi-mcp-generator.ts" URL="src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/mcp/auto-generator/openapi-mcp-generator.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/batch-tools.ts" [label=<batch-tools.ts> tooltip="batch-tools.ts" URL="src/coordination/swarm/mcp/batch-tools.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/batch-tools.ts" -> "src/coordination/swarm/mcp/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/collective-tools.ts" [label=<collective-tools.ts> tooltip="collective-tools.ts" URL="src/coordination/swarm/mcp/collective-tools.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/collective-tools.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/error-handler.ts" [label=<error-handler.ts> tooltip="error-handler.ts" URL="src/coordination/swarm/mcp/error-handler.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/error-handler.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/mcp-daa-tools.ts" [label=<mcp-daa-tools.ts> tooltip="mcp-daa-tools.ts" URL="src/coordination/swarm/mcp/mcp-daa-tools.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/mcp-daa-tools.ts" -> "src/coordination/swarm/core/daa-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/mcp-server.ts" [label=<mcp-server.ts> tooltip="mcp-server.ts" URL="src/coordination/swarm/mcp/mcp-server.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/mcp-server.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/mcp/mcp-server.ts" -> "src/coordination/mcp/dspy-swarm-mcp-tools.ts"
    "src/coordination/swarm/mcp/mcp-server.ts" -> "src/coordination/swarm/mcp/collective-tools.ts"
    "src/coordination/swarm/mcp/mcp-server.ts" -> "src/coordination/swarm/mcp/swarm-tools.ts"
    "src/coordination/swarm/mcp/mcp-server.ts" -> "src/coordination/swarm/mcp/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/mcp-tool-registry.ts" [label=<mcp-tool-registry.ts> tooltip="mcp-tool-registry.ts" URL="src/coordination/swarm/mcp/mcp-tool-registry.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/mcp-tool-registry.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/mcp/mcp-tool-registry.ts" -> "src/interfaces/mcp/mcp-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/mcp/mcp-tool-registry.ts" -> "src/coordination/swarm/index.ts"
    "src/coordination/swarm/mcp/mcp-tool-registry.ts" -> "src/coordination/swarm/mcp/error-handler.ts"
    "src/coordination/swarm/mcp/mcp-tool-registry.ts" -> "src/coordination/swarm/mcp/mcp-daa-tools.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/swarm-tools.ts" [label=<swarm-tools.ts> tooltip="swarm-tools.ts" URL="src/coordination/swarm/mcp/swarm-tools.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/swarm-tools.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/mcp" {label="mcp" "src/coordination/swarm/mcp/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/coordination/swarm/mcp/types.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/mcp/types.ts" -> "src/coordination/swarm/mcp/mcp-daa-tools.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/cli" {label="cli" "src/coordination/swarm/sparc/cli/architecture-commands.ts" [label=<architecture-commands.ts> tooltip="architecture-commands.ts" URL="src/coordination/swarm/sparc/cli/architecture-commands.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/cli/architecture-commands.ts" -> "src/coordination/swarm/sparc/mcp/architecture-tools.ts"
    "src/coordination/swarm/sparc/cli/architecture-commands.ts" -> "src/coordination/swarm/sparc/phases/architecture/database-driven-architecture-engine.ts"
    "src/coordination/swarm/sparc/cli/architecture-commands.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/cli" {label="cli" "src/coordination/swarm/sparc/cli/test-cli.ts" [label=<test-cli.ts> tooltip="test-cli.ts" URL="src/coordination/swarm/sparc/cli/test-cli.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/cli/test-cli.ts" -> "src/coordination/swarm/sparc/phases/architecture/database-driven-architecture-engine.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/core" {label="core" "src/coordination/swarm/sparc/core/sparc-engine.ts" [label=<sparc-engine.ts> tooltip="sparc-engine.ts" URL="src/coordination/swarm/sparc/core/sparc-engine.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/core/document-driven-system.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/core/memory-system.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/core/workflow-engine.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/api.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/task-coordinator.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/integrations/project-management-integration.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/phases/architecture/architecture-engine.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/phases/completion/completion-engine.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/phases/refinement/refinement-engine.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/phases/specification/specification-engine.ts"
    "src/coordination/swarm/sparc/core/sparc-engine.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/core" {label="core" "src/coordination/swarm/sparc/core/template-engine.ts" [label=<template-engine.ts> tooltip="template-engine.ts" URL="src/coordination/swarm/sparc/core/template-engine.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/core/template-engine.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/core/template-engine.ts" -> "src/coordination/swarm/sparc/templates/memory-systems-template.ts"
    "src/coordination/swarm/sparc/core/template-engine.ts" -> "src/coordination/swarm/sparc/templates/neural-networks-template.ts"
    "src/coordination/swarm/sparc/core/template-engine.ts" -> "src/coordination/swarm/sparc/templates/rest-api-template.ts"
    "src/coordination/swarm/sparc/core/template-engine.ts" -> "src/coordination/swarm/sparc/templates/swarm-coordination-template.ts"
    "src/coordination/swarm/sparc/core/template-engine.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/database" {label="database" "src/coordination/swarm/sparc/database/architecture-storage.ts" [label=<architecture-storage.ts> tooltip="architecture-storage.ts" URL="src/coordination/swarm/sparc/database/architecture-storage.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/database/architecture-storage.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" "src/coordination/swarm/sparc/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/coordination/swarm/sparc/index.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/sparc/index.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/core/sparc-engine.ts"
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" [arrowhead="inv"]
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/integrations/project-management-integration.ts" [arrowhead="inv"]
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/integrations/roadmap-integration.ts" [arrowhead="inv"]
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/phases/specification/specification-engine.ts" [arrowhead="inv"]
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/templates/swarm-coordination-template.ts" [arrowhead="inv"]
    "src/coordination/swarm/sparc/index.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/integrations" {label="integrations" "src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" [label=<mcp-sparc-tools.ts> tooltip="mcp-sparc-tools.ts" URL="src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" -> "src/coordination/swarm/sparc/core/sparc-engine.ts"
    "src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" -> "src/coordination/swarm/sparc/integrations/project-management-integration.ts"
    "src/coordination/swarm/sparc/integrations/mcp-sparc-tools.ts" -> "src/coordination/swarm/sparc/integrations/roadmap-integration.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/integrations" {label="integrations" "src/coordination/swarm/sparc/integrations/project-management-integration.ts" [label=<project-management-integration.ts> tooltip="project-management-integration.ts" URL="src/coordination/swarm/sparc/integrations/project-management-integration.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/core/document-driven-system.ts"
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/core/memory-system.ts"
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/core/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/coordination/api.ts"
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/coordination/task-coordinator.ts"
    "src/coordination/swarm/sparc/integrations/project-management-integration.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/integrations" {label="integrations" "src/coordination/swarm/sparc/integrations/roadmap-integration.ts" [label=<roadmap-integration.ts> tooltip="roadmap-integration.ts" URL="src/coordination/swarm/sparc/integrations/roadmap-integration.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/integrations/roadmap-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/integrations/roadmap-integration.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/integrations" {label="integrations" "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" [label=<swarm-coordination-integration.ts> tooltip="swarm-coordination-integration.ts" URL="src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" -> "src/coordination/api.ts"
    "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" -> "src/coordination/task-coordinator.ts"
    "src/coordination/swarm/sparc/integrations/swarm-coordination-integration.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/mcp" {label="mcp" "src/coordination/swarm/sparc/mcp/architecture-tools.ts" [label=<architecture-tools.ts> tooltip="architecture-tools.ts" URL="src/coordination/swarm/sparc/mcp/architecture-tools.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/mcp/architecture-tools.ts" -> "src/coordination/swarm/sparc/database/architecture-storage.ts"
    "src/coordination/swarm/sparc/mcp/architecture-tools.ts" -> "src/coordination/swarm/sparc/phases/architecture/database-driven-architecture-engine.ts"
    "src/coordination/swarm/sparc/mcp/architecture-tools.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/phases" {label="phases" subgraph "cluster_src/coordination/swarm/sparc/phases/architecture" {label="architecture" "src/coordination/swarm/sparc/phases/architecture/architecture-engine.ts" [label=<architecture-engine.ts> tooltip="architecture-engine.ts" URL="src/coordination/swarm/sparc/phases/architecture/architecture-engine.ts" fillcolor="#ddfeff"] } } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/phases" {label="phases" subgraph "cluster_src/coordination/swarm/sparc/phases/architecture" {label="architecture" "src/coordination/swarm/sparc/phases/architecture/database-driven-architecture-engine.ts" [label=<database-driven-architecture-engine.ts> tooltip="database-driven-architecture-engine.ts" URL="src/coordination/swarm/sparc/phases/architecture/database-driven-architecture-engine.ts" fillcolor="#ddfeff"] } } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/phases" {label="phases" subgraph "cluster_src/coordination/swarm/sparc/phases/completion" {label="completion" "src/coordination/swarm/sparc/phases/completion/completion-engine.ts" [label=<completion-engine.ts> tooltip="completion-engine.ts" URL="src/coordination/swarm/sparc/phases/completion/completion-engine.ts" fillcolor="#ddfeff"] } } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/phases" {label="phases" subgraph "cluster_src/coordination/swarm/sparc/phases/pseudocode" {label="pseudocode" "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" [label=<pseudocode-engine.ts> tooltip="pseudocode-engine.ts" URL="src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" fillcolor="#ddfeff"] } } } } } }
    "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/phases" {label="phases" subgraph "cluster_src/coordination/swarm/sparc/phases/refinement" {label="refinement" "src/coordination/swarm/sparc/phases/refinement/refinement-engine.ts" [label=<refinement-engine.ts> tooltip="refinement-engine.ts" URL="src/coordination/swarm/sparc/phases/refinement/refinement-engine.ts" fillcolor="#ddfeff"] } } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/phases" {label="phases" subgraph "cluster_src/coordination/swarm/sparc/phases/specification" {label="specification" "src/coordination/swarm/sparc/phases/specification/specification-engine.ts" [label=<specification-engine.ts> tooltip="specification-engine.ts" URL="src/coordination/swarm/sparc/phases/specification/specification-engine.ts" fillcolor="#ddfeff"] } } } } } }
    "src/coordination/swarm/sparc/phases/specification/specification-engine.ts" -> "src/coordination/swarm/sparc/core/template-engine.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/templates" {label="templates" "src/coordination/swarm/sparc/templates/memory-systems-template.ts" [label=<memory-systems-template.ts> tooltip="memory-systems-template.ts" URL="src/coordination/swarm/sparc/templates/memory-systems-template.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/templates/memory-systems-template.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/templates" {label="templates" "src/coordination/swarm/sparc/templates/neural-networks-template.ts" [label=<neural-networks-template.ts> tooltip="neural-networks-template.ts" URL="src/coordination/swarm/sparc/templates/neural-networks-template.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/templates/neural-networks-template.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/templates" {label="templates" "src/coordination/swarm/sparc/templates/rest-api-template.ts" [label=<rest-api-template.ts> tooltip="rest-api-template.ts" URL="src/coordination/swarm/sparc/templates/rest-api-template.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/templates/rest-api-template.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/templates" {label="templates" "src/coordination/swarm/sparc/templates/swarm-coordination-template.ts" [label=<swarm-coordination-template.ts> tooltip="swarm-coordination-template.ts" URL="src/coordination/swarm/sparc/templates/swarm-coordination-template.ts" fillcolor="#ddfeff"] } } } } }
    "src/coordination/swarm/sparc/templates/swarm-coordination-template.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" "src/coordination/swarm/sparc/test-template-engine.ts" [label=<test-template-engine.ts> tooltip="test-template-engine.ts" URL="src/coordination/swarm/sparc/test-template-engine.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/sparc/test-template-engine.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/sparc/test-template-engine.ts" -> "src/coordination/swarm/sparc/core/template-engine.ts"
    "src/coordination/swarm/sparc/test-template-engine.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/types" {label="types" "src/coordination/swarm/sparc/types/performance-types.ts" [label=<performance-types.ts> tooltip="no-orphans" URL="src/coordination/swarm/sparc/types/performance-types.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/sparc" {label="sparc" subgraph "cluster_src/coordination/swarm/sparc/types" {label="types" "src/coordination/swarm/sparc/types/sparc-types.ts" [label=<sparc-types.ts> tooltip="sparc-types.ts" URL="src/coordination/swarm/sparc/types/sparc-types.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/storage" {label="storage" "src/coordination/swarm/storage/backup-manager.ts" [label=<backup-manager.ts> tooltip="backup-manager.ts" URL="src/coordination/swarm/storage/backup-manager.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/storage" {label="storage" "src/coordination/swarm/storage/swarm-database-manager.ts" [label=<swarm-database-manager.ts> tooltip="swarm-database-manager.ts" URL="src/coordination/swarm/storage/swarm-database-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/storage/swarm-database-manager.ts" -> "src/database/factory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/storage/swarm-database-manager.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/swarm/storage/swarm-database-manager.ts" -> "src/di/decorators/injectable.ts"
    "src/coordination/swarm/storage/swarm-database-manager.ts" -> "src/di/tokens/core-tokens.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/storage" {label="storage" "src/coordination/swarm/storage/swarm-maintenance.ts" [label=<swarm-maintenance.ts> tooltip="swarm-maintenance.ts" URL="src/coordination/swarm/storage/swarm-maintenance.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/storage/swarm-maintenance.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/swarm" {label="swarm" subgraph "cluster_src/coordination/swarm/storage" {label="storage" "src/coordination/swarm/storage/swarm-providers.ts" [label=<swarm-providers.ts> tooltip="swarm-providers.ts" URL="src/coordination/swarm/storage/swarm-providers.ts" fillcolor="#ddfeff"] } } } }
    "src/coordination/swarm/storage/swarm-providers.ts" -> "src/config/logging-config.ts"
    "src/coordination/swarm/storage/swarm-providers.ts" -> "src/database/factory.ts"
    "src/coordination/swarm/storage/swarm-providers.ts" -> "src/database/providers/database-providers.ts"
    "src/coordination/swarm/storage/swarm-providers.ts" -> "src/coordination/swarm/storage/backup-manager.ts"
    "src/coordination/swarm/storage/swarm-providers.ts" -> "src/coordination/swarm/storage/swarm-database-manager.ts"
    "src/coordination/swarm/storage/swarm-providers.ts" -> "src/coordination/swarm/storage/swarm-maintenance.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/task-coordinator.ts" [label=<task-coordinator.ts> tooltip="task-coordinator.ts" URL="src/coordination/task-coordinator.ts" fillcolor="#ddfeff"] } }
    "src/coordination/task-coordinator.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/task-coordinator.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/task-coordinator.ts" -> "src/coordination/database-sparc-bridge.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/task-coordinator.ts" -> "src/coordination/sub-agent-generator.ts"
    "src/coordination/task-coordinator.ts" -> "src/coordination/swarm/core/sparc-swarm-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" "src/coordination/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/coordination/types.ts" fillcolor="#ddfeff"] } }
    "src/coordination/types.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/types.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/types" {label="types" "src/coordination/types/queen-types.ts" [label=<queen-types.ts> tooltip="queen-types.ts" URL="src/coordination/types/queen-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/workflows" {label="workflows" "src/coordination/workflows/dead-code-workflow.ts" [label=<dead-code-workflow.ts> tooltip="dead-code-workflow.ts" URL="src/coordination/workflows/dead-code-workflow.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/workflows/dead-code-workflow.ts" -> "src/config/logging-config.ts"
    "src/coordination/workflows/dead-code-workflow.ts" -> "src/core/automated-dead-code-manager.ts"
    "src/coordination/workflows/dead-code-workflow.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/workflows/dead-code-workflow.ts" -> "src/types/workflow-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/workflows/dead-code-workflow.ts" -> "src/workflows/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/coordination" {label="coordination" subgraph "cluster_src/coordination/workflows" {label="workflows" "src/coordination/workflows/workflow-gate-request.ts" [label=<workflow-gate-request.ts> tooltip="workflow-gate-request.ts" URL="src/coordination/workflows/workflow-gate-request.ts" fillcolor="#ddfeff"] } } }
    "src/coordination/workflows/workflow-gate-request.ts" -> "src/config/logging-config.ts"
    "src/coordination/workflows/workflow-gate-request.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/coordination/workflows/workflow-gate-request.ts" -> "src/coordination/discovery/progressive-confidence-builder.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/coordination/workflows/workflow-gate-request.ts" -> "src/core/domain-boundary-validator.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/coordination/workflows/workflow-gate-request.ts" -> "src/core/type-safe-event-system.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/coordination/workflows/workflow-gate-request.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/adr-creation-workflow.ts" [label=<adr-creation-workflow.ts> tooltip="adr-creation-workflow.ts" URL="src/core/adr-creation-workflow.ts" fillcolor="#ddfeff"] } }
    "src/core/adr-creation-workflow.ts" -> "src/config/logging-config.ts"
    "src/core/adr-creation-workflow.ts" -> "src/core/document-processor.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/adr-creation-workflow.ts" -> "src/core/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/application-coordinator.ts" [label=<application-coordinator.ts> tooltip="application-coordinator.ts" URL="src/core/application-coordinator.ts" fillcolor="#ddfeff"] } }
    "src/core/application-coordinator.ts" -> "src/config/logging-config.ts"
    "src/core/application-coordinator.ts" -> "src/memory/index.ts"
    "src/core/application-coordinator.ts" -> "src/core/document-driven-system.ts"
    "src/core/application-coordinator.ts" -> "src/core/documentation-linker.ts"
    "src/core/application-coordinator.ts" -> "src/core/export-manager.ts"
    "src/core/application-coordinator.ts" -> "src/core/interface-launcher.ts"
    "src/core/application-coordinator.ts" -> "src/core/memory-system.ts"
    "src/core/application-coordinator.ts" -> "src/core/workflow-engine.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/automated-dead-code-manager.ts" [label=<automated-dead-code-manager.ts> tooltip="automated-dead-code-manager.ts" URL="src/core/automated-dead-code-manager.ts" fillcolor="#ddfeff"] } }
    "src/core/automated-dead-code-manager.ts" -> "src/config/logging-config.ts"
    "src/core/automated-dead-code-manager.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/automated-dead-code-manager.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/bootstrap-logger.ts" [label=<bootstrap-logger.ts> tooltip="bootstrap-logger.ts" URL="src/core/bootstrap-logger.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/core-system.ts" [label=<core-system.ts> tooltip="core-system.ts" URL="src/core/core-system.ts" fillcolor="#ddfeff"] } }
    "src/core/core-system.ts" -> "src/config/logging-config.ts"
    "src/core/core-system.ts" -> "src/core/document-processor.ts"
    "src/core/core-system.ts" -> "src/core/documentation-manager.ts"
    "src/core/core-system.ts" -> "src/core/export-manager.ts"
    "src/core/core-system.ts" -> "src/core/interface-manager.ts"
    "src/core/core-system.ts" -> "src/core/memory-system.ts"
    "src/core/core-system.ts" -> "src/core/workflow-engine.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/database-driven-system.ts" [label=<database-driven-system.ts> tooltip="database-driven-system.ts" URL="src/core/database-driven-system.ts" fillcolor="#ddfeff"] } }
    "src/core/database-driven-system.ts" -> "src/config/logging-config.ts"
    "src/core/database-driven-system.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/database-driven-system.ts" -> "src/database/managers/document-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/database-driven-system.ts" -> "src/types/workflow-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/database-driven-system.ts" -> "src/core/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/di-container.ts" [label=<di-container.ts> tooltip="di-container.ts" URL="src/core/di-container.ts" fillcolor="#ddfeff"] } }
    "src/core/di-container.ts" -> "src/config/logging-config.ts"
    "src/core/di-container.ts" -> "src/di/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/document-driven-system.ts" [label=<document-driven-system.ts> tooltip="document-driven-system.ts" URL="src/core/document-driven-system.ts" fillcolor="#ddfeff"] } }
    "src/core/document-driven-system.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/document-processor.ts" [label=<document-processor.ts> tooltip="document-processor.ts" URL="src/core/document-processor.ts" fillcolor="#ddfeff"] } }
    "src/core/document-processor.ts" -> "src/config/logging-config.ts"
    "src/core/document-processor.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/document-processor.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/document-processor.ts" -> "src/core/workflow-engine.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/documentation-linker.ts" [label=<documentation-linker.ts> tooltip="documentation-linker.ts" URL="src/core/documentation-linker.ts" fillcolor="#ddfeff"] } }
    "src/core/documentation-linker.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/documentation-manager.ts" [label=<documentation-manager.ts> tooltip="documentation-manager.ts" URL="src/core/documentation-manager.ts" fillcolor="#ddfeff"] } }
    "src/core/documentation-manager.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/domain-boundary-validator.ts" [label=<domain-boundary-validator.ts> tooltip="domain-boundary-validator.ts" URL="src/core/domain-boundary-validator.ts" fillcolor="#ddfeff"] } }
    "src/core/domain-boundary-validator.ts" -> "src/config/logging-config.ts"
    "src/core/domain-boundary-validator.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/domain-boundary-validator.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/domain-boundary-validator.ts" -> "src/workflows/types.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/dspy-enhanced-operations.ts" [label=<dspy-enhanced-operations.ts> tooltip="dspy-enhanced-operations.ts" URL="src/core/dspy-enhanced-operations.ts" fillcolor="#ddfeff"] } }
    "src/core/dspy-enhanced-operations.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/dspy-integration-manager.ts" [label=<dspy-integration-manager.ts> tooltip="dspy-integration-manager.ts" URL="src/core/dspy-integration-manager.ts" fillcolor="#ddfeff"] } }
    "src/core/dspy-integration-manager.ts" -> "src/config/logging-config.ts"
    "src/core/dspy-integration-manager.ts" -> "src/coordination/swarm/dspy-swarm-intelligence.ts"
    "src/core/dspy-integration-manager.ts" -> "src/interfaces/mcp/dspy-enhanced-tools.ts"
    "src/core/dspy-integration-manager.ts" -> "src/neural/dspy-wrapper.ts"
    "src/core/dspy-integration-manager.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/dspy-integration-manager.ts" -> "src/core/dspy-enhanced-operations.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/error-monitoring.ts" [label=<error-monitoring.ts> tooltip="error-monitoring.ts" URL="src/core/error-monitoring.ts" fillcolor="#ddfeff"] } }
    "src/core/error-monitoring.ts" -> "src/config/logging-config.ts"
    "src/core/error-monitoring.ts" -> "src/core/errors.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/error-recovery.ts" [label=<error-recovery.ts> tooltip="error-recovery.ts" URL="src/core/error-recovery.ts" fillcolor="#ddfeff"] } }
    "src/core/error-recovery.ts" -> "src/config/logging-config.ts"
    "src/core/error-recovery.ts" -> "src/core/errors.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/error-system-integration.ts" [label=<error-system-integration.ts> tooltip="error-system-integration.ts" URL="src/core/error-system-integration.ts" fillcolor="#ddfeff"] } }
    "src/core/error-system-integration.ts" -> "src/config/logging-config.ts"
    "src/core/error-system-integration.ts" -> "src/coordination/swarm/mcp/error-handler.ts"
    "src/core/error-system-integration.ts" -> "src/core/error-monitoring.ts"
    "src/core/error-system-integration.ts" -> "src/core/error-recovery.ts"
    "src/core/error-system-integration.ts" -> "src/core/errors.ts"
    "src/core/error-system-integration.ts" -> "src/core/system-resilience.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/errors.ts" [label=<errors.ts> tooltip="errors.ts" URL="src/core/errors.ts" fillcolor="#ddfeff"] } }
    "src/core/errors.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/event-bus.ts" [label=<event-bus.ts> tooltip="event-bus.ts" URL="src/core/event-bus.ts" fillcolor="#ddfeff"] } }
    "src/core/event-bus.ts" -> "src/config/logging-config.ts"
    "src/core/event-bus.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/event-bus.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/export-manager.ts" [label=<export-manager.ts> tooltip="export-manager.ts" URL="src/core/export-manager.ts" fillcolor="#ddfeff"] } }
    "src/core/export-manager.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/exporters.ts" [label=<exporters.ts> tooltip="exporters.ts" URL="src/core/exporters.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/facade.ts" [label=<facade.ts> tooltip="facade.ts" URL="src/core/facade.ts" fillcolor="#ddfeff"] } }
    "src/core/facade.ts" -> "src/interfaces/events/factories.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/facade.ts" -> "src/interfaces/mcp/command-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/facade.ts" -> "src/types/event-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/helpers.ts" [label=<helpers.ts> tooltip="helpers.ts" URL="src/core/helpers.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/core/index.ts" fillcolor="#ddfeff"] } }
    "src/core/index.ts" -> "src/types/workflow-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/application-coordinator.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/core-system.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/core-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/document-driven-system.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/document-processor.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/document-processor.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/documentation-linker.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/documentation-linker.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/documentation-manager.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/documentation-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/errors.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/event-bus.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/export-manager.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/export-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/exporters.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/exporters.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/helpers.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/interface-manager.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/interface-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/interface-mode-detector.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/logger.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/memory-system.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/index.ts" -> "src/core/orchestrator-provider.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/orchestrator.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/product-flow-system.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/type-guards.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/types.ts" [arrowhead="inv"]
    "src/core/index.ts" -> "src/core/workflow-engine.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/init.ts" [label=<init.ts> tooltip="init.ts" URL="src/core/init.ts" fillcolor="#ddfeff"] } }
    "src/core/init.ts" -> "src/config/memory-optimization.ts" [style="dashed"]
    "src/core/init.ts" -> "src/config/system-info.ts" [style="dashed"]
    "src/core/init.ts" -> "src/core/logger.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/interface-launcher.ts" [label=<interface-launcher.ts> tooltip="interface-launcher.ts" URL="src/core/interface-launcher.ts" fillcolor="#ddfeff"] } }
    "src/core/interface-launcher.ts" -> "src/config/defaults.ts"
    "src/core/interface-launcher.ts" -> "src/config/logging-config.ts"
    "src/core/interface-launcher.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/interface-launcher.ts" -> "src/interfaces/web/web-interface.ts" [style="dashed"]
    "src/core/interface-launcher.ts" -> "src/core/interface-mode-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/interface-manager.ts" [label=<interface-manager.ts> tooltip="interface-manager.ts" URL="src/core/interface-manager.ts" fillcolor="#ddfeff"] } }
    "src/core/interface-manager.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/interface-mode-detector.ts" [label=<interface-mode-detector.ts> tooltip="interface-mode-detector.ts" URL="src/core/interface-mode-detector.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" subgraph "cluster_src/core/interfaces" {label="interfaces" "src/core/interfaces/base-interfaces.ts" [label=<base-interfaces.ts> tooltip="base-interfaces.ts" URL="src/core/interfaces/base-interfaces.ts" fillcolor="#ddfeff"] } } }
    "src/core/interfaces/base-interfaces.ts" -> "src/di/tokens/core-tokens.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" subgraph "cluster_src/core/interfaces" {label="interfaces" "src/core/interfaces/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/core/interfaces/index.ts" fillcolor="#ddfeff"] } } }
    "src/core/interfaces/index.ts" -> "src/bindings/wasm-binding-interface.ts" [arrowhead="inv"]
    "src/core/interfaces/index.ts" -> "src/coordination/swarm/core/types.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="inv" fontcolor="orange" color="orange"]
    "src/core/interfaces/index.ts" -> "src/coordination/types.ts" [arrowhead="inv"]
    "src/core/interfaces/index.ts" -> "src/database/providers/database-providers.ts" [arrowhead="inv"]
    "src/core/interfaces/index.ts" -> "src/memory/memory.ts" [arrowhead="inv"]
    "src/core/interfaces/index.ts" -> "src/types/event-types.ts" [arrowhead="inv"]
    "src/core/interfaces/index.ts" -> "src/core/memory-system.ts" [arrowhead="inv"]
    "src/core/interfaces/index.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/logger.ts" [label=<logger.ts> tooltip="logger.ts" URL="src/core/logger.ts" fillcolor="#ddfeff"] } }
    "src/core/logger.ts" -> "src/core/bootstrap-logger.ts"
    "src/core/logger.ts" -> "src/core/bootstrap-logger.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/memory-coordinator.ts" [label=<memory-coordinator.ts> tooltip="memory-coordinator.ts" URL="src/core/memory-coordinator.ts" fillcolor="#ddfeff"] } }
    "src/core/memory-coordinator.ts" -> "src/config/logging-config.ts"
    "src/core/memory-coordinator.ts" -> "src/database/index.ts"
    "src/core/memory-coordinator.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/memory-system.ts" [label=<memory-system.ts> tooltip="memory-system.ts" URL="src/core/memory-system.ts" fillcolor="#ddfeff"] } }
    "src/core/memory-system.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/orchestrator-provider.ts" [label=<orchestrator-provider.ts> tooltip="orchestrator-provider.ts" URL="src/core/orchestrator-provider.ts" fillcolor="#ddfeff"] } }
    "src/core/orchestrator-provider.ts" -> "src/config/index.ts"
    "src/core/orchestrator-provider.ts" -> "src/config/logging-config.ts"
    "src/core/orchestrator-provider.ts" -> "src/coordination/manager.ts" [style="dashed"]
    "src/core/orchestrator-provider.ts" -> "src/interfaces/mcp/index.ts"
    "src/core/orchestrator-provider.ts" -> "src/interfaces/terminal/index.ts"
    "src/core/orchestrator-provider.ts" -> "src/memory/index.ts"
    "src/core/orchestrator-provider.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/orchestrator-provider.ts" -> "src/core/event-bus.ts"
    "src/core/orchestrator-provider.ts" -> "src/core/orchestrator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/orchestrator.ts" [label=<orchestrator.ts> tooltip="orchestrator.ts" URL="src/core/orchestrator.ts" fillcolor="#ddfeff"] } }
    "src/core/orchestrator.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/pattern-integration.ts" [label=<pattern-integration.ts> tooltip="pattern-integration.ts" URL="src/core/pattern-integration.ts" fillcolor="#ddfeff"] } }
    "src/core/pattern-integration.ts" -> "src/coordination/agents/composite-system.ts"
    "src/core/pattern-integration.ts" -> "src/coordination/swarm/core/strategy.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" fontcolor="orange" color="orange"]
    "src/core/pattern-integration.ts" -> "src/core/facade.ts"
    "src/core/pattern-integration.ts" -> "src/core/logger.ts"
    "src/core/pattern-integration.ts" -> "src/database/factory.ts" [style="dashed"]
    "src/core/pattern-integration.ts" -> "src/di/container/di-container.ts" [style="dashed"]
    "src/core/pattern-integration.ts" -> "src/di/tokens/core-tokens.ts" [style="dashed"]
    "src/core/pattern-integration.ts" -> "src/integration/adapter-system.ts"
    "src/core/pattern-integration.ts" -> "src/interfaces/events/observer-system.ts"
    "src/core/pattern-integration.ts" -> "src/interfaces/mcp/command-system.ts"
    "src/core/pattern-integration.ts" -> "src/core/memory-coordinator.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/process-lifecycle.ts" [label=<process-lifecycle.ts> tooltip="process-lifecycle.ts" URL="src/core/process-lifecycle.ts" fillcolor="#ddfeff"] } }
    "src/core/process-lifecycle.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/product-flow-system.ts" [label=<product-flow-system.ts> tooltip="product-flow-system.ts" URL="src/core/product-flow-system.ts" fillcolor="#ddfeff"] } }
    "src/core/product-flow-system.ts" -> "src/config/logging-config.ts"
    "src/core/product-flow-system.ts" -> "src/core/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/system-resilience.ts" [label=<system-resilience.ts> tooltip="system-resilience.ts" URL="src/core/system-resilience.ts" fillcolor="#ddfeff"] } }
    "src/core/system-resilience.ts" -> "src/config/logging-config.ts"
    "src/core/system-resilience.ts" -> "src/core/error-monitoring.ts"
    "src/core/system-resilience.ts" -> "src/core/errors.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/type-guards.ts" [label=<type-guards.ts> tooltip="type-guards.ts" URL="src/core/type-guards.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/type-safe-event-system.ts" [label=<type-safe-event-system.ts> tooltip="type-safe-event-system.ts" URL="src/core/type-safe-event-system.ts" fillcolor="#ddfeff"] } }
    "src/core/type-safe-event-system.ts" -> "src/config/logging-config.ts"
    "src/core/type-safe-event-system.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/type-safe-event-system.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/core/type-safe-event-system.ts" -> "src/workflows/types.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/core/type-safe-event-system.ts" -> "src/core/domain-boundary-validator.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/core/type-safe-event-system.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/core/types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/unified-memory-system.ts" [label=<unified-memory-system.ts> tooltip="no-orphans" URL="src/core/unified-memory-system.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/verify-domain-boundary-validator.ts" [label=<verify-domain-boundary-validator.ts> tooltip="verify-domain-boundary-validator.ts" URL="src/core/verify-domain-boundary-validator.ts" fillcolor="#ddfeff"] } }
    "src/core/verify-domain-boundary-validator.ts" -> "src/core/domain-boundary-validator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/core" {label="core" "src/core/workflow-engine.ts" [label=<workflow-engine.ts> tooltip="workflow-engine.ts" URL="src/core/workflow-engine.ts" fillcolor="#ddfeff"] } }
    "src/core/workflow-engine.ts" -> "src/workflows/workflow-engine.ts" [arrowhead="inv"]
    "src/core/workflow-engine.ts" -> "src/workflows/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" "src/database/base.dao.ts" [label=<base.dao.ts> tooltip="base.dao.ts" URL="src/database/base.dao.ts" fillcolor="#ddfeff"] } }
    "src/database/base.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/base.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/controllers" {label="controllers" "src/database/controllers/database-controller.ts" [label=<database-controller.ts> tooltip="database-controller.ts" URL="src/database/controllers/database-controller.ts" fillcolor="#ddfeff"] } } }
    "src/database/controllers/database-controller.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/controllers/database-controller.ts" -> "src/di/decorators/inject.ts"
    "src/database/controllers/database-controller.ts" -> "src/di/decorators/injectable.ts"
    "src/database/controllers/database-controller.ts" -> "src/di/tokens/core-tokens.ts"
    "src/database/controllers/database-controller.ts" -> "src/database/providers/database-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/core" {label="core" "src/database/core/dao-factory.ts" [label=<dao-factory.ts> tooltip="dao-factory.ts" URL="src/database/core/dao-factory.ts" fillcolor="#ddfeff"] } } }
    "src/database/core/dao-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/core/dao-factory.ts" -> "src/database/base.dao.ts"
    "src/database/core/dao-factory.ts" -> "src/database/dao/coordination.dao.ts"
    "src/database/core/dao-factory.ts" -> "src/database/dao/graph.dao.ts"
    "src/database/core/dao-factory.ts" -> "src/database/dao/memory.dao.ts"
    "src/database/core/dao-factory.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/dao" {label="dao" "src/database/dao/coordination.dao.ts" [label=<coordination.dao.ts> tooltip="coordination.dao.ts" URL="src/database/dao/coordination.dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/dao/coordination.dao.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/dao/coordination.dao.ts" -> "src/database/base.dao.ts"
    "src/database/dao/coordination.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/dao" {label="dao" "src/database/dao/graph.dao.ts" [label=<graph.dao.ts> tooltip="graph.dao.ts" URL="src/database/dao/graph.dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/dao/graph.dao.ts" -> "src/database/base.dao.ts"
    "src/database/dao/graph.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/dao/graph.dao.ts" -> "src/database/providers/database-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/dao" {label="dao" "src/database/dao/memory.dao.ts" [label=<memory.dao.ts> tooltip="memory.dao.ts" URL="src/database/dao/memory.dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/dao/memory.dao.ts" -> "src/database/base.dao.ts"
    "src/database/dao/memory.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/dao" {label="dao" "src/database/dao/relational.dao.ts" [label=<relational.dao.ts> tooltip="relational.dao.ts" URL="src/database/dao/relational.dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/dao/relational.dao.ts" -> "src/database/base.dao.ts"
    "src/database/dao/relational.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/dao" {label="dao" "src/database/dao/vector.dao.ts" [label=<vector.dao.ts> tooltip="vector.dao.ts" URL="src/database/dao/vector.dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/dao/vector.dao.ts" -> "src/database/base.dao.ts"
    "src/database/dao/vector.dao.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/dao/vector.dao.ts" -> "src/database/providers/database-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/daos" {label="daos" "src/database/daos/coordination-dao.ts" [label=<coordination-dao.ts> tooltip="coordination-dao.ts" URL="src/database/daos/coordination-dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/daos/coordination-dao.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/daos/coordination-dao.ts" -> "src/database/dao/coordination.dao.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/daos" {label="daos" "src/database/daos/graph-dao.ts" [label=<graph-dao.ts> tooltip="graph-dao.ts" URL="src/database/daos/graph-dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/daos/graph-dao.ts" -> "src/database/dao/graph.dao.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/daos" {label="daos" "src/database/daos/memory-dao.ts" [label=<memory-dao.ts> tooltip="memory-dao.ts" URL="src/database/daos/memory-dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/daos/memory-dao.ts" -> "src/database/dao/memory.dao.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/daos" {label="daos" "src/database/daos/relational-dao.ts" [label=<relational-dao.ts> tooltip="relational-dao.ts" URL="src/database/daos/relational-dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/daos/relational-dao.ts" -> "src/database/dao/relational.dao.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/daos" {label="daos" "src/database/daos/vector-dao.ts" [label=<vector-dao.ts> tooltip="vector-dao.ts" URL="src/database/daos/vector-dao.ts" fillcolor="#ddfeff"] } } }
    "src/database/daos/vector-dao.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/daos/vector-dao.ts" -> "src/database/base.dao.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/entities" {label="entities" "src/database/entities/document-entities.ts" [label=<document-entities.ts> tooltip="document-entities.ts" URL="src/database/entities/document-entities.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/entities" {label="entities" "src/database/entities/product-entities.ts" [label=<product-entities.ts> tooltip="product-entities.ts" URL="src/database/entities/product-entities.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/error-handling" {label="error-handling" "src/database/error-handling/database-errors.ts" [label=<database-errors.ts> tooltip="database-errors.ts" URL="src/database/error-handling/database-errors.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" "src/database/factory.ts" [label=<factory.ts> tooltip="factory.ts" URL="src/database/factory.ts" fillcolor="#ddfeff"] } }
    "src/database/factory.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/factory.ts" -> "src/database/dao/coordination.dao.ts" [style="dashed"]
    "src/database/factory.ts" -> "src/database/dao/graph.dao.ts" [style="dashed"]
    "src/database/factory.ts" -> "src/database/dao/memory.dao.ts" [style="dashed"]
    "src/database/factory.ts" -> "src/database/dao/relational.dao.ts" [style="dashed"]
    "src/database/factory.ts" -> "src/database/dao/vector.dao.ts" [style="dashed"]
    "src/database/factory.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" "src/database/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/database/index.ts" fillcolor="#ddfeff"] } }
    "src/database/index.ts" -> "src/di/container/di-container.ts" [style="dashed"]
    "src/database/index.ts" -> "src/di/tokens/core-tokens.ts" [style="dashed"]
    "src/database/index.ts" -> "src/database/base.dao.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/core/dao-factory.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/dao/coordination.dao.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/dao/graph.dao.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/dao/memory.dao.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/dao/relational.dao.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/dao/vector.dao.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/factory.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/interfaces.ts" [arrowhead="inv"]
    "src/database/index.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/index.ts" -> "src/database/managers/document-manager.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/database/index.ts" -> "src/database/providers/database-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/index.ts" -> "src/database/types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" "src/database/interfaces.ts" [label=<interfaces.ts> tooltip="interfaces.ts" URL="src/database/interfaces.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/managers" {label="managers" "src/database/managers/adr-manager.ts" [label=<adr-manager.ts> tooltip="adr-manager.ts" URL="src/database/managers/adr-manager.ts" fillcolor="#ddfeff"] } } }
    "src/database/managers/adr-manager.ts" -> "src/database/entities/document-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/managers/adr-manager.ts" -> "src/database/managers/document-manager.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/managers" {label="managers" "src/database/managers/adr-proposal-system.ts" [label=<adr-proposal-system.ts> tooltip="adr-proposal-system.ts" URL="src/database/managers/adr-proposal-system.ts" fillcolor="#ddfeff"] } } }
    "src/database/managers/adr-proposal-system.ts" -> "src/database/entities/document-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/managers/adr-proposal-system.ts" -> "src/database/managers/adr-manager.ts"
    "src/database/managers/adr-proposal-system.ts" -> "src/database/managers/document-manager.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/managers" {label="managers" "src/database/managers/document-manager.ts" [label=<document-manager.ts> tooltip="document-manager.ts" URL="src/database/managers/document-manager.ts" fillcolor="#ddfeff"] } } }
    "src/database/managers/document-manager.ts" -> "src/core/logger.ts"
    "src/database/managers/document-manager.ts" -> "src/workflows/types.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/database/managers/document-manager.ts" -> "src/database/core/dao-factory.ts"
    "src/database/managers/document-manager.ts" -> "src/database/entities/document-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/managers/document-manager.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/mcp" {label="mcp" "src/database/mcp/database-tools.ts" [label=<database-tools.ts> tooltip="database-tools.ts" URL="src/database/mcp/database-tools.ts" fillcolor="#ddfeff"] } } }
    "src/database/mcp/database-tools.ts" -> "src/config/index.ts"
    "src/database/mcp/database-tools.ts" -> "src/config/logging-config.ts"
    "src/database/mcp/database-tools.ts" -> "src/interfaces/clients/index.ts"
    "src/database/mcp/database-tools.ts" -> "src/database/interfaces.ts"
    "src/database/mcp/database-tools.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/providers" {label="providers" "src/database/providers/database-providers.ts" [label=<database-providers.ts> tooltip="database-providers.ts" URL="src/database/providers/database-providers.ts" fillcolor="#ddfeff"] } } }
    "src/database/providers/database-providers.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="inv"]
    "src/database/providers/database-providers.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/providers/database-providers.ts" -> "src/di/decorators/injectable.ts"
    "src/database/providers/database-providers.ts" -> "src/di/tokens/core-tokens.ts"
    "src/database/providers/database-providers.ts" -> "src/utils/type-guards.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" subgraph "cluster_src/database/services" {label="services" "src/database/services/document-service-legacy.ts" [label=<document-service-legacy.ts> tooltip="document-service-legacy.ts" URL="src/database/services/document-service-legacy.ts" fillcolor="#ddfeff"] } } }
    "src/database/services/document-service-legacy.ts" -> "src/database/entities/document-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/database/services/document-service-legacy.ts" -> "src/database/index.ts"
    "src/database/services/document-service-legacy.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/database" {label="database" "src/database/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/database/types.ts" fillcolor="#ddfeff"] } }
    "src/database/types.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/container" {label="container" "src/di/container/di-container.ts" [label=<di-container.ts> tooltip="di-container.ts" URL="src/di/container/di-container.ts" fillcolor="#ddfeff"] } } }
    "src/di/container/di-container.ts" -> "src/config/logging-config.ts"
    "src/di/container/di-container.ts" -> "src/di/types/di-types.ts"
    "src/di/container/di-container.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/di/container/di-container.ts" -> "src/di/container/di-scope.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/container" {label="container" "src/di/container/di-scope.ts" [label=<di-scope.ts> tooltip="di-scope.ts" URL="src/di/container/di-scope.ts" fillcolor="#ddfeff"] } } }
    "src/di/container/di-scope.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/decorators" {label="decorators" "src/di/decorators/inject.ts" [label=<inject.ts> tooltip="inject.ts" URL="src/di/decorators/inject.ts" fillcolor="#ddfeff"] } } }
    "src/di/decorators/inject.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/di/decorators/inject.ts" -> "src/di/decorators/injectable.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/decorators" {label="decorators" "src/di/decorators/injectable.ts" [label=<injectable.ts> tooltip="injectable.ts" URL="src/di/decorators/injectable.ts" fillcolor="#ddfeff"] } } }
    "src/di/decorators/injectable.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/examples" {label="examples" "src/di/examples/complete-system-integration.ts" [label=<complete-system-integration.ts> tooltip="complete-system-integration.ts" URL="src/di/examples/complete-system-integration.ts" fillcolor="#ddfeff"] } } }
    "src/di/examples/complete-system-integration.ts" -> "src/di/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/examples" {label="examples" "src/di/examples/swarm-integration.ts" [label=<swarm-integration.ts> tooltip="swarm-integration.ts" URL="src/di/examples/swarm-integration.ts" fillcolor="#ddfeff"] } } }
    "src/di/examples/swarm-integration.ts" -> "src/di/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" "src/di/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/di/index.ts" fillcolor="#ddfeff"] } }
    "src/di/index.ts" -> "src/di/container/di-container.ts"
    "src/di/index.ts" -> "src/di/container/di-scope.ts"
    "src/di/index.ts" -> "src/di/decorators/inject.ts" [arrowhead="inv"]
    "src/di/index.ts" -> "src/di/decorators/injectable.ts" [arrowhead="inv"]
    "src/di/index.ts" -> "src/di/providers/factory-provider.ts"
    "src/di/index.ts" -> "src/di/providers/scoped-provider.ts"
    "src/di/index.ts" -> "src/di/providers/singleton-provider.ts"
    "src/di/index.ts" -> "src/di/providers/transient-provider.ts"
    "src/di/index.ts" -> "src/di/tokens/core-tokens.ts" [arrowhead="inv"]
    "src/di/index.ts" -> "src/di/tokens/core-tokens.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/di/index.ts" -> "src/di/tokens/neural-tokens.ts" [arrowhead="inv"]
    "src/di/index.ts" -> "src/di/tokens/neural-tokens.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/di/index.ts" -> "src/di/tokens/swarm-tokens.ts" [arrowhead="inv"]
    "src/di/index.ts" -> "src/di/tokens/swarm-tokens.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/di/index.ts" -> "src/di/tokens/token-factory.ts" [arrowhead="inv"]
    "src/di/index.ts" -> "src/di/types/di-types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/providers" {label="providers" "src/di/providers/factory-provider.ts" [label=<factory-provider.ts> tooltip="factory-provider.ts" URL="src/di/providers/factory-provider.ts" fillcolor="#ddfeff"] } } }
    "src/di/providers/factory-provider.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/providers" {label="providers" "src/di/providers/scoped-provider.ts" [label=<scoped-provider.ts> tooltip="scoped-provider.ts" URL="src/di/providers/scoped-provider.ts" fillcolor="#ddfeff"] } } }
    "src/di/providers/scoped-provider.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/providers" {label="providers" "src/di/providers/singleton-provider.ts" [label=<singleton-provider.ts> tooltip="singleton-provider.ts" URL="src/di/providers/singleton-provider.ts" fillcolor="#ddfeff"] } } }
    "src/di/providers/singleton-provider.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/providers" {label="providers" "src/di/providers/transient-provider.ts" [label=<transient-provider.ts> tooltip="transient-provider.ts" URL="src/di/providers/transient-provider.ts" fillcolor="#ddfeff"] } } }
    "src/di/providers/transient-provider.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/tokens" {label="tokens" "src/di/tokens/core-tokens.ts" [label=<core-tokens.ts> tooltip="core-tokens.ts" URL="src/di/tokens/core-tokens.ts" fillcolor="#ddfeff"] } } }
    "src/di/tokens/core-tokens.ts" -> "src/di/tokens/token-factory.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/tokens" {label="tokens" "src/di/tokens/neural-tokens.ts" [label=<neural-tokens.ts> tooltip="neural-tokens.ts" URL="src/di/tokens/neural-tokens.ts" fillcolor="#ddfeff"] } } }
    "src/di/tokens/neural-tokens.ts" -> "src/di/tokens/token-factory.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/tokens" {label="tokens" "src/di/tokens/swarm-tokens.ts" [label=<swarm-tokens.ts> tooltip="swarm-tokens.ts" URL="src/di/tokens/swarm-tokens.ts" fillcolor="#ddfeff"] } } }
    "src/di/tokens/swarm-tokens.ts" -> "src/di/tokens/token-factory.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/tokens" {label="tokens" "src/di/tokens/token-factory.ts" [label=<token-factory.ts> tooltip="token-factory.ts" URL="src/di/tokens/token-factory.ts" fillcolor="#ddfeff"] } } }
    "src/di/tokens/token-factory.ts" -> "src/di/types/di-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/di" {label="di" subgraph "cluster_src/di/types" {label="types" "src/di/types/di-types.ts" [label=<di-types.ts> tooltip="di-types.ts" URL="src/di/types/di-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" "src/eslint-swarm-coordinator.ts" [label=<eslint-swarm-coordinator.ts> tooltip="eslint-swarm-coordinator.ts" URL="src/eslint-swarm-coordinator.ts" fillcolor="#ddfeff"] }
    "src/eslint-swarm-coordinator.ts" -> "src/config/logging-config.ts"
    "src/eslint-swarm-coordinator.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/claude-zen-examples.ts" [label=<claude-zen-examples.ts> tooltip="claude-zen-examples.ts" URL="src/examples/claude-zen-examples.ts" fillcolor="#ddfeff"] } }
    "src/examples/claude-zen-examples.ts" -> "src/coordination/batch/index.ts"
    "src/examples/claude-zen-examples.ts" -> "src/coordination/swarm/mcp/batch-tools.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/domain-boundary-integration.ts" [label=<domain-boundary-integration.ts> tooltip="domain-boundary-integration.ts" URL="src/examples/domain-boundary-integration.ts" fillcolor="#ddfeff"] } }
    "src/examples/domain-boundary-integration.ts" -> "src/config/logging-config.ts"
    "src/examples/domain-boundary-integration.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/examples/domain-boundary-integration.ts" -> "src/core/domain-boundary-validator.ts"
    "src/examples/domain-boundary-integration.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/memory-migration-example.ts" [label=<memory-migration-example.ts> tooltip="memory-migration-example.ts" URL="src/examples/memory-migration-example.ts" fillcolor="#ddfeff"] } }
    "src/examples/memory-migration-example.ts" -> "src/memory/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/examples/memory-migration-example.ts" -> "src/utils/type-guards.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/product-workflow-gates-integration.ts" [label=<product-workflow-gates-integration.ts> tooltip="product-workflow-gates-integration.ts" URL="src/examples/product-workflow-gates-integration.ts" fillcolor="#ddfeff"] } }
    "src/examples/product-workflow-gates-integration.ts" -> "src/config/logging-config.ts"
    "src/examples/product-workflow-gates-integration.ts" -> "src/coordination/orchestration/product-workflow-engine.ts"
    "src/examples/product-workflow-gates-integration.ts" -> "src/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/examples/product-workflow-gates-integration.ts" -> "src/core/type-safe-event-system.ts"
    "src/examples/product-workflow-gates-integration.ts" -> "src/database/managers/document-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/examples/product-workflow-gates-integration.ts" -> "src/interfaces/agui/workflow-agui-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/type-safe-event-integration.ts" [label=<type-safe-event-integration.ts> tooltip="type-safe-event-integration.ts" URL="src/examples/type-safe-event-integration.ts" fillcolor="#ddfeff"] } }
    "src/examples/type-safe-event-integration.ts" -> "src/config/logging-config.ts"
    "src/examples/type-safe-event-integration.ts" -> "src/coordination/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/examples/type-safe-event-integration.ts" -> "src/core/domain-boundary-validator.ts"
    "src/examples/type-safe-event-integration.ts" -> "src/core/type-safe-event-system.ts"
    "src/examples/type-safe-event-integration.ts" -> "src/workflows/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/unified-di-integration.ts" [label=<unified-di-integration.ts> tooltip="unified-di-integration.ts" URL="src/examples/unified-di-integration.ts" fillcolor="#ddfeff"] } }
    "src/examples/unified-di-integration.ts" -> "src/coordination/swarm/storage/swarm-providers.ts"
    "src/examples/unified-di-integration.ts" -> "src/database/factory.ts"
    "src/examples/unified-di-integration.ts" -> "src/database/providers/database-providers.ts"
    "src/examples/unified-di-integration.ts" -> "src/di/container/di-container.ts"
    "src/examples/unified-di-integration.ts" -> "src/di/tokens/core-tokens.ts"
    "src/examples/unified-di-integration.ts" -> "src/memory/memory-integration.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/workflow-gate-integration.ts" [label=<workflow-gate-integration.ts> tooltip="workflow-gate-integration.ts" URL="src/examples/workflow-gate-integration.ts" fillcolor="#ddfeff"] } }
    "src/examples/workflow-gate-integration.ts" -> "src/config/logging-config.ts"
    "src/examples/workflow-gate-integration.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/examples/workflow-gate-integration.ts" -> "src/coordination/workflows/workflow-gate-request.ts"
    "src/examples/workflow-gate-integration.ts" -> "src/core/domain-boundary-validator.ts"
    "src/examples/workflow-gate-integration.ts" -> "src/core/type-safe-event-system.ts"
    "src/examples/workflow-gate-integration.ts" -> "src/workflows/workflow-engine.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/examples" {label="examples" "src/examples/workflow-gate-system-integration.ts" [label=<workflow-gate-system-integration.ts> tooltip="workflow-gate-system-integration.ts" URL="src/examples/workflow-gate-system-integration.ts" fillcolor="#ddfeff"] } }
    "src/examples/workflow-gate-system-integration.ts" -> "src/config/logging-config.ts"
    "src/examples/workflow-gate-system-integration.ts" -> "src/coordination/orchestration/workflow-gates.ts"
    "src/examples/workflow-gate-system-integration.ts" -> "src/coordination/workflows/workflow-gate-request.ts"
    "src/examples/workflow-gate-system-integration.ts" -> "src/core/type-safe-event-system.ts"
    "src/examples/workflow-gate-system-integration.ts" -> "src/interfaces/agui/agui-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/fact-integration" {label="fact-integration" "src/fact-integration/github-code-analyzer.ts" [label=<github-code-analyzer.ts> tooltip="github-code-analyzer.ts" URL="src/fact-integration/github-code-analyzer.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/fact-integration" {label="fact-integration" "src/fact-integration/rust-fact-bridge.ts" [label=<rust-fact-bridge.ts> tooltip="rust-fact-bridge.ts" URL="src/fact-integration/rust-fact-bridge.ts" fillcolor="#ddfeff"] } }
    "src/fact-integration/rust-fact-bridge.ts" -> "src/fact-integration/github-code-analyzer.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" "src/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/index.ts" fillcolor="#ddfeff"] }
    "src/index.ts" -> "src/bindings/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/config/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/coordination/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/coordination/public-api.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/coordination/swarm/mcp/mcp-server.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/coordination/swarm/mcp/mcp-tool-registry.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/coordination/swarm/mcp/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/index.ts" -> "src/coordination/swarm/sparc/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/core/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/core/logger.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/database/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/integration/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/interfaces/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/interfaces/mcp/http-mcp-server.ts" [style="dashed"]
    "src/index.ts" -> "src/interfaces/terminal/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/memory/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/neural/agents/neural-agent.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/neural/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/neural/neural-bridge.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/optimization/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/types/agent-types.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/types/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/utils/index.ts" [arrowhead="inv"]
    "src/index.ts" -> "src/workflows/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integration" {label="integration" "src/integration/adapter-system.ts" [label=<adapter-system.ts> tooltip="adapter-system.ts" URL="src/integration/adapter-system.ts" fillcolor="#ddfeff"] } }
    "src/integration/adapter-system.ts" -> "src/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integration" {label="integration" "src/integration/dspy-wrapper-architecture.ts" [label=<dspy-wrapper-architecture.ts> tooltip="dspy-wrapper-architecture.ts" URL="src/integration/dspy-wrapper-architecture.ts" fillcolor="#ddfeff"] } }
    "src/integration/dspy-wrapper-architecture.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integration" {label="integration" "src/integration/dspy-wrapper-types.ts" [label=<dspy-wrapper-types.ts> tooltip="no-orphans" URL="src/integration/dspy-wrapper-types.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integration" {label="integration" "src/integration/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/integration/index.ts" fillcolor="#ddfeff"] } }
    "src/integration/index.ts" -> "src/coordination/index.ts" [style="dashed"]
    "src/integration/index.ts" -> "src/core/logger.ts"
    "src/integration/index.ts" -> "src/database/index.ts" [style="dashed"]
    "src/integration/index.ts" -> "src/neural/index.ts" [style="dashed"]
    "src/integration/index.ts" -> "src/integration/multi-system-coordinator.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integration" {label="integration" "src/integration/memory-database-integration.ts" [label=<memory-database-integration.ts> tooltip="memory-database-integration.ts" URL="src/integration/memory-database-integration.ts" fillcolor="#ddfeff"] } }
    "src/integration/memory-database-integration.ts" -> "src/database/error-handling/database-errors.ts" [style="dashed"]
    "src/integration/memory-database-integration.ts" -> "src/database/index.ts"
    "src/integration/memory-database-integration.ts" -> "src/database/mcp/database-tools.ts" [style="dashed"]
    "src/integration/memory-database-integration.ts" -> "src/di/container/di-container.ts"
    "src/integration/memory-database-integration.ts" -> "src/di/tokens/core-tokens.ts"
    "src/integration/memory-database-integration.ts" -> "src/memory/error-handling/memory-errors.ts" [style="dashed"]
    "src/integration/memory-database-integration.ts" -> "src/memory/index.ts"
    "src/integration/memory-database-integration.ts" -> "src/memory/mcp/memory-tools.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integration" {label="integration" "src/integration/multi-system-coordinator.ts" [label=<multi-system-coordinator.ts> tooltip="multi-system-coordinator.ts" URL="src/integration/multi-system-coordinator.ts" fillcolor="#ddfeff"] } }
    "src/integration/multi-system-coordinator.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/integration/multi-system-coordinator.ts" -> "src/di/decorators/inject.ts"
    "src/integration/multi-system-coordinator.ts" -> "src/di/decorators/injectable.ts"
    "src/integration/multi-system-coordinator.ts" -> "src/di/tokens/core-tokens.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integrations" {label="integrations" subgraph "cluster_src/integrations/claude-code" {label="claude-code" "src/integrations/claude-code/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/integrations/claude-code/index.ts" fillcolor="#ddfeff"] } } }
    "src/integrations/claude-code/index.ts" -> "src/integrations/claude-code/message-filter.ts" [arrowhead="inv"]
    "src/integrations/claude-code/index.ts" -> "src/integrations/claude-code/run.ts" [arrowhead="inv"]
    "src/integrations/claude-code/index.ts" -> "src/integrations/claude-code/types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integrations" {label="integrations" subgraph "cluster_src/integrations/claude-code" {label="claude-code" "src/integrations/claude-code/message-filter.ts" [label=<message-filter.ts> tooltip="message-filter.ts" URL="src/integrations/claude-code/message-filter.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integrations" {label="integrations" subgraph "cluster_src/integrations/claude-code" {label="claude-code" "src/integrations/claude-code/run.ts" [label=<run.ts> tooltip="run.ts" URL="src/integrations/claude-code/run.ts" fillcolor="#ddfeff"] } } }
    "src/integrations/claude-code/run.ts" -> "src/integrations/claude-code/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/integrations" {label="integrations" subgraph "cluster_src/integrations/claude-code" {label="claude-code" "src/integrations/claude-code/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/integrations/claude-code/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/behavioral-optimization.ts" [label=<behavioral-optimization.ts> tooltip="behavioral-optimization.ts" URL="src/intelligence/adaptive-learning/behavioral-optimization.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/adaptive-learning/behavioral-optimization.ts" -> "src/intelligence/adaptive-learning/pattern-recognition-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/knowledge-evolution.ts" [label=<knowledge-evolution.ts> tooltip="knowledge-evolution.ts" URL="src/intelligence/adaptive-learning/knowledge-evolution.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/adaptive-learning/knowledge-evolution.ts" -> "src/intelligence/adaptive-learning/behavioral-optimization.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/intelligence/adaptive-learning/knowledge-evolution.ts" -> "src/intelligence/adaptive-learning/pattern-recognition-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/intelligence/adaptive-learning/knowledge-evolution.ts" -> "src/intelligence/adaptive-learning/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/learning-coordinator.ts" [label=<learning-coordinator.ts> tooltip="learning-coordinator.ts" URL="src/intelligence/adaptive-learning/learning-coordinator.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/adaptive-learning/learning-coordinator.ts" -> "src/di/index.ts"
    "src/intelligence/adaptive-learning/learning-coordinator.ts" -> "src/di/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/intelligence/adaptive-learning/learning-coordinator.ts" -> "src/intelligence/adaptive-learning/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/ml-integration.ts" [label=<ml-integration.ts> tooltip="ml-integration.ts" URL="src/intelligence/adaptive-learning/ml-integration.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/adaptive-learning/ml-integration.ts" -> "src/intelligence/adaptive-learning/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/pattern-recognition-engine.ts" [label=<pattern-recognition-engine.ts> tooltip="pattern-recognition-engine.ts" URL="src/intelligence/adaptive-learning/pattern-recognition-engine.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/adaptive-learning/pattern-recognition-engine.ts" -> "src/intelligence/adaptive-learning/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/performance-optimizer.ts" [label=<performance-optimizer.ts> tooltip="performance-optimizer.ts" URL="src/intelligence/adaptive-learning/performance-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/adaptive-learning/performance-optimizer.ts" -> "src/intelligence/adaptive-learning/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/adaptive-learning" {label="adaptive-learning" "src/intelligence/adaptive-learning/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/intelligence/adaptive-learning/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/conversation-framework" {label="conversation-framework" "src/intelligence/conversation-framework/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/intelligence/conversation-framework/index.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/conversation-framework/index.ts" -> "src/intelligence/conversation-framework/mcp-tools.ts" [arrowhead="inv"]
    "src/intelligence/conversation-framework/index.ts" -> "src/intelligence/conversation-framework/memory.ts" [arrowhead="inv"]
    "src/intelligence/conversation-framework/index.ts" -> "src/intelligence/conversation-framework/orchestrator.ts" [arrowhead="inv"]
    "src/intelligence/conversation-framework/index.ts" -> "src/intelligence/conversation-framework/types.ts" [arrowhead="inv"]
    "src/intelligence/conversation-framework/index.ts" -> "src/intelligence/conversation-framework/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/conversation-framework" {label="conversation-framework" "src/intelligence/conversation-framework/mcp-tools.ts" [label=<mcp-tools.ts> tooltip="mcp-tools.ts" URL="src/intelligence/conversation-framework/mcp-tools.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/conversation-framework/mcp-tools.ts" -> "src/intelligence/conversation-framework/memory.ts"
    "src/intelligence/conversation-framework/mcp-tools.ts" -> "src/intelligence/conversation-framework/orchestrator.ts"
    "src/intelligence/conversation-framework/mcp-tools.ts" -> "src/intelligence/conversation-framework/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/conversation-framework" {label="conversation-framework" "src/intelligence/conversation-framework/memory.ts" [label=<memory.ts> tooltip="memory.ts" URL="src/intelligence/conversation-framework/memory.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/conversation-framework/memory.ts" -> "src/config/logging-config.ts"
    "src/intelligence/conversation-framework/memory.ts" -> "src/memory/backends/factory.ts" [style="dashed"]
    "src/intelligence/conversation-framework/memory.ts" -> "src/intelligence/conversation-framework/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/conversation-framework" {label="conversation-framework" "src/intelligence/conversation-framework/orchestrator.ts" [label=<orchestrator.ts> tooltip="orchestrator.ts" URL="src/intelligence/conversation-framework/orchestrator.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/conversation-framework/orchestrator.ts" -> "src/intelligence/conversation-framework/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" subgraph "cluster_src/intelligence/conversation-framework" {label="conversation-framework" "src/intelligence/conversation-framework/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/intelligence/conversation-framework/types.ts" fillcolor="#ddfeff"] } } }
    "src/intelligence/conversation-framework/types.ts" -> "src/types/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" "src/intelligence/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/intelligence/index.ts" fillcolor="#ddfeff"] } }
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/behavioral-optimization.ts" [arrowhead="inv"]
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/knowledge-evolution.ts" [arrowhead="inv"]
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/learning-coordinator.ts" [arrowhead="inv"]
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/ml-integration.ts" [arrowhead="inv"]
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/pattern-recognition-engine.ts" [arrowhead="inv"]
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/performance-optimizer.ts" [arrowhead="inv"]
    "src/intelligence/index.ts" -> "src/intelligence/adaptive-learning/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/intelligence/index.ts" -> "src/intelligence/conversation-framework/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/intelligence" {label="intelligence" "src/intelligence/mcp-integration.ts" [label=<mcp-integration.ts> tooltip="mcp-integration.ts" URL="src/intelligence/mcp-integration.ts" fillcolor="#ddfeff"] } }
    "src/intelligence/mcp-integration.ts" -> "src/intelligence/conversation-framework/index.ts"
    "src/intelligence/mcp-integration.ts" -> "src/intelligence/conversation-framework/mcp-tools.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/agui" {label="agui" "src/interfaces/agui/agui-adapter.ts" [label=<agui-adapter.ts> tooltip="agui-adapter.ts" URL="src/interfaces/agui/agui-adapter.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/agui/agui-adapter.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/agui" {label="agui" "src/interfaces/agui/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/agui/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/agui/index.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="inv"]
    "src/interfaces/agui/index.ts" -> "src/interfaces/agui/agui-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/agui" {label="agui" "src/interfaces/agui/workflow-agui-adapter.ts" [label=<workflow-agui-adapter.ts> tooltip="workflow-agui-adapter.ts" URL="src/interfaces/agui/workflow-agui-adapter.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/agui/workflow-agui-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/agui/workflow-agui-adapter.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/agui/workflow-agui-adapter.ts" -> "src/coordination/workflows/workflow-gate-request.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/agui/workflow-agui-adapter.ts" -> "src/core/domain-boundary-validator.ts"
    "src/interfaces/agui/workflow-agui-adapter.ts" -> "src/core/type-safe-event-system.ts"
    "src/interfaces/agui/workflow-agui-adapter.ts" -> "src/interfaces/agui/agui-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" "src/interfaces/api/http/client.ts" [label=<client.ts> tooltip="client.ts" URL="src/interfaces/api/http/client.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/api/http/client.ts" -> "src/config/defaults.ts"
    "src/interfaces/api/http/client.ts" -> "src/coordination/schemas.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/client.ts" -> "src/interfaces/api/http/schemas/common.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/client.ts" -> "src/interfaces/api/http/schemas/neural.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/di" {label="di" "src/interfaces/api/http/di/database-container.ts" [label=<database-container.ts> tooltip="database-container.ts" URL="src/interfaces/api/http/di/database-container.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/di/database-container.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" "src/interfaces/api/http/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/api/http/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/api/http/index.ts" -> "src/config/defaults.ts"
    "src/interfaces/api/http/index.ts" -> "src/config/logging-config.ts"
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/client.ts"
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/client.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/middleware/auth.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/middleware/auth.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/middleware/errors.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/middleware/logging.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/schemas/index.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/schemas/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/server.ts"
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/server.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/v1/coordination.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/v1/database.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/v1/memory.ts" [arrowhead="inv"]
    "src/interfaces/api/http/index.ts" -> "src/interfaces/api/http/v1/neural.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/middleware" {label="middleware" "src/interfaces/api/http/middleware/auth.ts" [label=<auth.ts> tooltip="auth.ts" URL="src/interfaces/api/http/middleware/auth.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/middleware/auth.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/middleware" {label="middleware" "src/interfaces/api/http/middleware/errors.ts" [label=<errors.ts> tooltip="errors.ts" URL="src/interfaces/api/http/middleware/errors.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/middleware/errors.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/middleware" {label="middleware" "src/interfaces/api/http/middleware/logging.ts" [label=<logging.ts> tooltip="logging.ts" URL="src/interfaces/api/http/middleware/logging.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/middleware" {label="middleware" "src/interfaces/api/http/middleware/rate-limit.ts" [label=<rate-limit.ts> tooltip="rate-limit.ts" URL="src/interfaces/api/http/middleware/rate-limit.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/middleware/rate-limit.ts" -> "src/interfaces/api/http/middleware/auth.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/api/http/middleware/rate-limit.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/schemas" {label="schemas" "src/interfaces/api/http/schemas/common.ts" [label=<common.ts> tooltip="common.ts" URL="src/interfaces/api/http/schemas/common.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/schemas" {label="schemas" "src/interfaces/api/http/schemas/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/api/http/schemas/index.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/schemas/index.ts" -> "src/config/defaults.ts"
    "src/interfaces/api/http/schemas/index.ts" -> "src/interfaces/api/http/schemas/common.ts" [arrowhead="inv"]
    "src/interfaces/api/http/schemas/index.ts" -> "src/interfaces/api/http/schemas/neural.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/schemas" {label="schemas" "src/interfaces/api/http/schemas/neural.ts" [label=<neural.ts> tooltip="neural.ts" URL="src/interfaces/api/http/schemas/neural.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/schemas/neural.ts" -> "src/interfaces/api/http/schemas/common.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" "src/interfaces/api/http/server.ts" [label=<server.ts> tooltip="server.ts" URL="src/interfaces/api/http/server.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/api/http/server.ts" -> "src/config/defaults.ts"
    "src/interfaces/api/http/server.ts" -> "src/config/index.ts"
    "src/interfaces/api/http/server.ts" -> "src/config/logging-config.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/middleware/auth.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/middleware/errors.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/v1/coordination.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/v1/database.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/v1/memory.ts"
    "src/interfaces/api/http/server.ts" -> "src/interfaces/api/http/v1/neural.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/v1" {label="v1" "src/interfaces/api/http/v1/coordination.ts" [label=<coordination.ts> tooltip="coordination.ts" URL="src/interfaces/api/http/v1/coordination.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/v1/coordination.ts" -> "src/coordination/api.ts"
    "src/interfaces/api/http/v1/coordination.ts" -> "src/interfaces/api/http/middleware/errors.ts"
    "src/interfaces/api/http/v1/coordination.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/v1" {label="v1" "src/interfaces/api/http/v1/database.ts" [label=<database.ts> tooltip="database.ts" URL="src/interfaces/api/http/v1/database.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/v1/database.ts" -> "src/interfaces/api/http/di/database-container.ts"
    "src/interfaces/api/http/v1/database.ts" -> "src/interfaces/api/http/middleware/auth.ts"
    "src/interfaces/api/http/v1/database.ts" -> "src/interfaces/api/http/middleware/errors.ts"
    "src/interfaces/api/http/v1/database.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    "src/interfaces/api/http/v1/database.ts" -> "src/interfaces/api/http/middleware/rate-limit.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/v1" {label="v1" "src/interfaces/api/http/v1/memory.ts" [label=<memory.ts> tooltip="memory.ts" URL="src/interfaces/api/http/v1/memory.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/v1/memory.ts" -> "src/interfaces/api/http/middleware/errors.ts"
    "src/interfaces/api/http/v1/memory.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/http" {label="http" subgraph "cluster_src/interfaces/api/http/v1" {label="v1" "src/interfaces/api/http/v1/neural.ts" [label=<neural.ts> tooltip="neural.ts" URL="src/interfaces/api/http/v1/neural.ts" fillcolor="#ddfeff"] } } } } }
    "src/interfaces/api/http/v1/neural.ts" -> "src/neural/api.ts"
    "src/interfaces/api/http/v1/neural.ts" -> "src/interfaces/api/http/middleware/errors.ts"
    "src/interfaces/api/http/v1/neural.ts" -> "src/interfaces/api/http/middleware/logging.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" "src/interfaces/api/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/api/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/api/index.ts" -> "src/config/defaults.ts"
    "src/interfaces/api/index.ts" -> "src/interfaces/api/http/index.ts" [arrowhead="inv"]
    "src/interfaces/api/index.ts" -> "src/interfaces/api/websocket/client.ts"
    "src/interfaces/api/index.ts" -> "src/interfaces/api/websocket/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" "src/interfaces/api/safe-api-client.ts" [label=<safe-api-client.ts> tooltip="safe-api-client.ts" URL="src/interfaces/api/safe-api-client.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/websocket" {label="websocket" "src/interfaces/api/websocket/client.ts" [label=<client.ts> tooltip="client.ts" URL="src/interfaces/api/websocket/client.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/api" {label="api" subgraph "cluster_src/interfaces/api/websocket" {label="websocket" "src/interfaces/api/websocket/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/api/websocket/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/api/websocket/index.ts" -> "src/interfaces/api/websocket/client.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" subgraph "cluster_src/interfaces/cli.disabled/adapters" {label="adapters" "src/interfaces/cli.disabled/adapters/terminal-adapters.ts" [label=<terminal-adapters.ts> tooltip="terminal-adapters.ts" URL="src/interfaces/cli.disabled/adapters/terminal-adapters.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/cli.disabled/adapters/terminal-adapters.ts" -> "src/interfaces/shared/command-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/cli.disabled/adapters/terminal-adapters.ts" -> "src/interfaces/terminal/command-execution-renderer.tsx" [style="dashed"]
    "src/interfaces/cli.disabled/adapters/terminal-adapters.ts" -> "src/interfaces/terminal/interactive-terminal-application.tsx" [style="dashed"]
    "src/interfaces/cli.disabled/adapters/terminal-adapters.ts" -> "src/interfaces/terminal/utils/mode-detector.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" "src/interfaces/cli.disabled/advanced-cli-engine.ts" [label=<advanced-cli-engine.ts> tooltip="advanced-cli-engine.ts" URL="src/interfaces/cli.disabled/advanced-cli-engine.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/cli.disabled/advanced-cli-engine.ts" -> "src/interfaces/cli.disabled/types/advanced-cli-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" subgraph "cluster_src/interfaces/cli.disabled/commands" {label="commands" "src/interfaces/cli.disabled/commands/discover.ts" [label=<discover.ts> tooltip="no-orphans" URL="src/interfaces/cli.disabled/commands/discover.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" subgraph "cluster_src/interfaces/cli.disabled/commands" {label="commands" "src/interfaces/cli.disabled/commands/kanban.ts" [label=<kanban.ts> tooltip="kanban.ts" URL="src/interfaces/cli.disabled/commands/kanban.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/cli.disabled/commands/kanban.ts" -> "src/config/memory-optimization.ts"
    "src/interfaces/cli.disabled/commands/kanban.ts" -> "src/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" subgraph "cluster_src/interfaces/cli.disabled/commands" {label="commands" "src/interfaces/cli.disabled/commands/swarm.ts" [label=<swarm.ts> tooltip="swarm.ts" URL="src/interfaces/cli.disabled/commands/swarm.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/cli.disabled/commands/swarm.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" subgraph "cluster_src/interfaces/cli.disabled/commands" {label="commands" "src/interfaces/cli.disabled/commands/workflow.ts" [label=<workflow.ts> tooltip="workflow.ts" URL="src/interfaces/cli.disabled/commands/workflow.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/cli.disabled/commands/workflow.ts" -> "src/config/default-repo-config.ts"
    "src/interfaces/cli.disabled/commands/workflow.ts" -> "src/config/memory-optimization.ts"
    "src/interfaces/cli.disabled/commands/workflow.ts" -> "src/config/system-info.ts"
    "src/interfaces/cli.disabled/commands/workflow.ts" -> "src/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" "src/interfaces/cli.disabled/enhanced-terminal-router.tsx" [label=<enhanced-terminal-router.tsx> tooltip="enhanced-terminal-router.tsx" URL="src/interfaces/cli.disabled/enhanced-terminal-router.tsx" fillcolor="#bbfeff"] } } }
    "src/interfaces/cli.disabled/enhanced-terminal-router.tsx" -> "src/interfaces/shared/command-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/cli.disabled/enhanced-terminal-router.tsx" -> "src/interfaces/cli.disabled/adapters/terminal-adapters.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" "src/interfaces/cli.disabled/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/cli.disabled/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/cli.disabled/index.ts" -> "src/interfaces/cli.disabled/advanced-cli-engine.ts"
    "src/interfaces/cli.disabled/index.ts" -> "src/interfaces/cli.disabled/commands/kanban.ts" [arrowhead="inv"]
    "src/interfaces/cli.disabled/index.ts" -> "src/interfaces/cli.disabled/commands/workflow.ts" [arrowhead="inv"]
    "src/interfaces/cli.disabled/index.ts" -> "src/interfaces/cli.disabled/enhanced-terminal-router.tsx"
    "src/interfaces/cli.disabled/index.ts" -> "src/interfaces/cli.disabled/sparc-swarm-commands.ts" [arrowhead="inv"]
    "src/interfaces/cli.disabled/index.ts" -> "src/interfaces/cli.disabled/types/advanced-cli-types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" "src/interfaces/cli.disabled/sparc-swarm-commands.ts" [label=<sparc-swarm-commands.ts> tooltip="sparc-swarm-commands.ts" URL="src/interfaces/cli.disabled/sparc-swarm-commands.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/cli.disabled/sparc-swarm-commands.ts" -> "src/config/logging-config.ts"
    "src/interfaces/cli.disabled/sparc-swarm-commands.ts" -> "src/coordination/swarm/sparc/phases/architecture/architecture-engine.ts" [style="dashed"]
    "src/interfaces/cli.disabled/sparc-swarm-commands.ts" -> "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" [style="dashed"]
    "src/interfaces/cli.disabled/sparc-swarm-commands.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" "src/interfaces/cli.disabled/sparc-template-commands.ts" [label=<sparc-template-commands.ts> tooltip="sparc-template-commands.ts" URL="src/interfaces/cli.disabled/sparc-template-commands.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/cli.disabled/sparc-template-commands.ts" -> "src/config/logging-config.ts"
    "src/interfaces/cli.disabled/sparc-template-commands.ts" -> "src/coordination/swarm/sparc/core/template-engine.ts"
    "src/interfaces/cli.disabled/sparc-template-commands.ts" -> "src/coordination/swarm/sparc/phases/specification/specification-engine.ts"
    "src/interfaces/cli.disabled/sparc-template-commands.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" "src/interfaces/cli.disabled/test-sparc-cli.ts" [label=<test-sparc-cli.ts> tooltip="test-sparc-cli.ts" URL="src/interfaces/cli.disabled/test-sparc-cli.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/cli.disabled/test-sparc-cli.ts" -> "src/interfaces/cli.disabled/sparc-template-commands.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/cli.disabled" {label="cli.disabled" subgraph "cluster_src/interfaces/cli.disabled/types" {label="types" "src/interfaces/cli.disabled/types/advanced-cli-types.ts" [label=<advanced-cli-types.ts> tooltip="advanced-cli-types.ts" URL="src/interfaces/cli.disabled/types/advanced-cli-types.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/base-client-adapter.ts" [label=<base-client-adapter.ts> tooltip="base-client-adapter.ts" URL="src/interfaces/clients/adapters/base-client-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/base-client-adapter.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/enhanced-websocket-client.ts" [label=<enhanced-websocket-client.ts> tooltip="enhanced-websocket-client.ts" URL="src/interfaces/clients/adapters/enhanced-websocket-client.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/enhanced-websocket-client.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/enhanced-websocket-client.ts" -> "src/interfaces/clients/adapters/websocket-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/http-client-adapter.ts" [label=<http-client-adapter.ts> tooltip="http-client-adapter.ts" URL="src/interfaces/clients/adapters/http-client-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/http-client-adapter.ts" -> "src/interfaces/clients/core/interfaces.ts"
    "src/interfaces/clients/adapters/http-client-adapter.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/http-client-adapter.ts" -> "src/interfaces/clients/adapters/http-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/http-types.ts" [label=<http-types.ts> tooltip="http-types.ts" URL="src/interfaces/clients/adapters/http-types.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/http-types.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/clients/adapters/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/index.ts" -> "src/interfaces/clients/adapters/mcp-client-adapter.ts" [arrowhead="inv"]
    "src/interfaces/clients/adapters/index.ts" -> "src/interfaces/clients/adapters/mcp-integration-example.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/knowledge-client-adapter.ts" [label=<knowledge-client-adapter.ts> tooltip="knowledge-client-adapter.ts" URL="src/interfaces/clients/adapters/knowledge-client-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/knowledge-client-adapter.ts" -> "src/knowledge/knowledge-client.ts"
    "src/interfaces/clients/adapters/knowledge-client-adapter.ts" -> "src/interfaces/clients/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/knowledge-client-adapter.ts" -> "src/interfaces/clients/types.ts"
    "src/interfaces/clients/adapters/knowledge-client-adapter.ts" -> "src/interfaces/clients/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/mcp-client-adapter.ts" [label=<mcp-client-adapter.ts> tooltip="mcp-client-adapter.ts" URL="src/interfaces/clients/adapters/mcp-client-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/mcp-client-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/clients/adapters/mcp-client-adapter.ts" -> "src/interfaces/clients/core/interfaces.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/mcp-integration-example.ts" [label=<mcp-integration-example.ts> tooltip="mcp-integration-example.ts" URL="src/interfaces/clients/adapters/mcp-integration-example.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/mcp-integration-example.ts" -> "src/config/logging-config.ts"
    "src/interfaces/clients/adapters/mcp-integration-example.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/mcp-integration-example.ts" -> "src/interfaces/clients/adapters/mcp-client-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/websocket-client-adapter.ts" [label=<websocket-client-adapter.ts> tooltip="websocket-client-adapter.ts" URL="src/interfaces/clients/adapters/websocket-client-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/websocket-client-adapter.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/websocket-client-factory.ts" [label=<websocket-client-factory.ts> tooltip="websocket-client-factory.ts" URL="src/interfaces/clients/adapters/websocket-client-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/websocket-client-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/clients/adapters/websocket-client-factory.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/websocket-client-factory.ts" -> "src/interfaces/clients/adapters/enhanced-websocket-client.ts"
    "src/interfaces/clients/adapters/websocket-client-factory.ts" -> "src/interfaces/clients/adapters/websocket-client-adapter.ts"
    "src/interfaces/clients/adapters/websocket-client-factory.ts" -> "src/interfaces/clients/adapters/websocket-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/websocket-index.ts" [label=<websocket-index.ts> tooltip="websocket-index.ts" URL="src/interfaces/clients/adapters/websocket-index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/adapters/enhanced-websocket-client.ts" [arrowhead="inv"]
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/adapters/websocket-client-adapter.ts" [arrowhead="inv"]
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/adapters/websocket-client-factory.ts"
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/adapters/websocket-types.ts" [arrowhead="inv"]
    "src/interfaces/clients/adapters/websocket-index.ts" -> "src/interfaces/clients/adapters/websocket-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/adapters" {label="adapters" "src/interfaces/clients/adapters/websocket-types.ts" [label=<websocket-types.ts> tooltip="websocket-types.ts" URL="src/interfaces/clients/adapters/websocket-types.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/adapters/websocket-types.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/compatibility.ts" [label=<compatibility.ts> tooltip="compatibility.ts" URL="src/interfaces/clients/compatibility.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/compatibility.ts" -> "src/config/defaults.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/config/logging-config.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/knowledge/knowledge-client.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/api/http/client.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/api/websocket/client.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/mcp/external-mcp-client.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/clients/core/client-registry.ts"
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/clients/index.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/clients/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/compatibility.ts" -> "src/interfaces/clients/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/core" {label="core" "src/interfaces/clients/core/client-registry.ts" [label=<client-registry.ts> tooltip="client-registry.ts" URL="src/interfaces/clients/core/client-registry.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/core/client-registry.ts" -> "src/interfaces/clients/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/core" {label="core" "src/interfaces/clients/core/interfaces.ts" [label=<interfaces.ts> tooltip="interfaces.ts" URL="src/interfaces/clients/core/interfaces.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/core/interfaces.ts" -> "src/interfaces/clients/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/examples" {label="examples" "src/interfaces/clients/examples/http-client-usage.ts" [label=<http-client-usage.ts> tooltip="http-client-usage.ts" URL="src/interfaces/clients/examples/http-client-usage.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/examples/http-client-usage.ts" -> "src/interfaces/clients/index.ts"
    "src/interfaces/clients/examples/http-client-usage.ts" -> "src/interfaces/clients/wrappers/api-client-wrapper.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/examples" {label="examples" "src/interfaces/clients/examples/knowledge-client-example.ts" [label=<knowledge-client-example.ts> tooltip="knowledge-client-example.ts" URL="src/interfaces/clients/examples/knowledge-client-example.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/examples/knowledge-client-example.ts" -> "src/interfaces/clients/adapters/knowledge-client-adapter.ts"
    "src/interfaces/clients/examples/knowledge-client-example.ts" -> "src/interfaces/clients/factories.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/factories.ts" [label=<factories.ts> tooltip="factories.ts" URL="src/interfaces/clients/factories.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/factories.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/factories.ts" -> "src/interfaces/clients/adapters/websocket-client-factory.ts" [style="dashed"]
    "src/interfaces/clients/factories.ts" -> "src/interfaces/clients/factories/http-client-factory.ts" [style="dashed"]
    "src/interfaces/clients/factories.ts" -> "src/interfaces/clients/implementations/knowledge-client-factory.ts" [style="dashed"]
    "src/interfaces/clients/factories.ts" -> "src/interfaces/clients/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/factories.ts" -> "src/interfaces/clients/types.ts"
    "src/interfaces/clients/factories.ts" -> "src/interfaces/clients/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/factories" {label="factories" "src/interfaces/clients/factories/http-client-factory.ts" [label=<http-client-factory.ts> tooltip="http-client-factory.ts" URL="src/interfaces/clients/factories/http-client-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/factories/http-client-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/clients/factories/http-client-factory.ts" -> "src/interfaces/clients/adapters/http-client-adapter.ts"
    "src/interfaces/clients/factories/http-client-factory.ts" -> "src/interfaces/clients/adapters/http-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/factories/http-client-factory.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/implementations" {label="implementations" "src/interfaces/clients/implementations/knowledge-client-factory.ts" [label=<knowledge-client-factory.ts> tooltip="knowledge-client-factory.ts" URL="src/interfaces/clients/implementations/knowledge-client-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/implementations/knowledge-client-factory.ts" -> "src/interfaces/clients/adapters/knowledge-client-adapter.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/clients/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/index.ts" -> "src/config/logging-config.ts"
    "src/interfaces/clients/index.ts" -> "src/knowledge/knowledge-client.ts" [arrowhead="inv"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/api/http/client.ts" [arrowhead="inv"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/api/websocket/client.ts" [arrowhead="inv"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/mcp/external-mcp-client.ts" [arrowhead="inv"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/adapters/knowledge-client-adapter.ts" [arrowhead="inv"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/adapters/websocket-index.ts" [arrowhead="inv"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/compatibility.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/manager.ts"
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/registry.ts"
    "src/interfaces/clients/index.ts" -> "src/interfaces/clients/validation.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/interfaces.ts" [label=<interfaces.ts> tooltip="interfaces.ts" URL="src/interfaces/clients/interfaces.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/interfaces.ts" -> "src/types/protocol-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/manager.ts" [label=<manager.ts> tooltip="manager.ts" URL="src/interfaces/clients/manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/manager.ts" -> "src/interfaces/api/http/client.ts"
    "src/interfaces/clients/manager.ts" -> "src/interfaces/api/websocket/client.ts"
    "src/interfaces/clients/manager.ts" -> "src/interfaces/mcp/external-mcp-client.ts"
    "src/interfaces/clients/manager.ts" -> "src/interfaces/clients/registry.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/registry.ts" [label=<registry.ts> tooltip="registry.ts" URL="src/interfaces/clients/registry.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/registry.ts" -> "src/interfaces/api/http/client.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/registry.ts" -> "src/interfaces/api/websocket/client.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/registry.ts" -> "src/interfaces/mcp/external-mcp-client.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/interfaces/clients/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" "src/interfaces/clients/validation.ts" [label=<validation.ts> tooltip="validation.ts" URL="src/interfaces/clients/validation.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/clients/validation.ts" -> "src/interfaces/clients/compatibility.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/interfaces/clients/validation.ts" -> "src/interfaces/clients/index.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/clients" {label="clients" subgraph "cluster_src/interfaces/clients/wrappers" {label="wrappers" "src/interfaces/clients/wrappers/api-client-wrapper.ts" [label=<api-client-wrapper.ts> tooltip="api-client-wrapper.ts" URL="src/interfaces/clients/wrappers/api-client-wrapper.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/clients/wrappers/api-client-wrapper.ts" -> "src/config/index.ts"
    "src/interfaces/clients/wrappers/api-client-wrapper.ts" -> "src/coordination/schemas.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/wrappers/api-client-wrapper.ts" -> "src/interfaces/api/http/schemas/neural.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/clients/wrappers/api-client-wrapper.ts" -> "src/interfaces/clients/adapters/http-client-adapter.ts"
    "src/interfaces/clients/wrappers/api-client-wrapper.ts" -> "src/interfaces/clients/adapters/http-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/communication-event-adapter.ts" [label=<communication-event-adapter.ts> tooltip="communication-event-adapter.ts" URL="src/interfaces/events/adapters/communication-event-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/interfaces/clients/adapters/websocket-client-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/interfaces/mcp/http-mcp-server.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/interfaces/events/types.ts"
    "src/interfaces/events/adapters/communication-event-adapter.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/communication-event-factory.ts" [label=<communication-event-factory.ts> tooltip="communication-event-factory.ts" URL="src/interfaces/events/adapters/communication-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/communication-event-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/communication-event-factory.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/communication-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/communication-event-factory.ts" -> "src/interfaces/events/adapters/communication-event-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/coordination-event-adapter.ts" [label=<coordination-event-adapter.ts> tooltip="coordination-event-adapter.ts" URL="src/interfaces/events/adapters/coordination-event-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/coordination/orchestration/product-workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/coordination/swarm/core/sparc-swarm-coordinator.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="onormal" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/interfaces/events/types.ts"
    "src/interfaces/events/adapters/coordination-event-adapter.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/coordination-event-factory.ts" [label=<coordination-event-factory.ts> tooltip="coordination-event-factory.ts" URL="src/interfaces/events/adapters/coordination-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/coordination-event-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/coordination-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/coordination-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/adapters/coordination-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/coordination-event-factory.ts" -> "src/interfaces/events/adapters/coordination-event-adapter.ts"
    "src/interfaces/events/adapters/coordination-event-factory.ts" -> "src/interfaces/events/adapters/coordination-event-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/coordination-usage-example.ts" [label=<coordination-usage-example.ts> tooltip="coordination-usage-example.ts" URL="src/interfaces/events/adapters/coordination-usage-example.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/coordination-usage-example.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/coordination-usage-example.ts" -> "src/interfaces/events/adapters/coordination-event-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/database-event-factory.ts" [label=<database-event-factory.ts> tooltip="database-event-factory.ts" URL="src/interfaces/events/adapters/database-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/database-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/database-event-factory.ts" -> "src/interfaces/events/core/base-event-manager.ts"
    "src/interfaces/events/adapters/database-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/database-event-factory.ts" -> "src/interfaces/events/factories.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/events/adapters/database-event-factory.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/events/adapters/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="inv"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/types.ts" [arrowhead="inv"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/communication-event-adapter.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/communication-event-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/communication-event-factory.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/coordination-event-adapter.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/coordination-event-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/coordination-event-factory.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/monitoring-event-adapter.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/monitoring-event-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/monitoring-event-factory.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/system-event-adapter.ts"
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/system-event-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/index.ts" -> "src/interfaces/events/adapters/system-event-factory.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/interface-event-factory.ts" [label=<interface-event-factory.ts> tooltip="interface-event-factory.ts" URL="src/interfaces/events/adapters/interface-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/interface-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/interface-event-factory.ts" -> "src/interfaces/events/core/base-event-manager.ts"
    "src/interfaces/events/adapters/interface-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/interface-event-factory.ts" -> "src/interfaces/events/factories.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/events/adapters/interface-event-factory.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/memory-event-factory.ts" [label=<memory-event-factory.ts> tooltip="memory-event-factory.ts" URL="src/interfaces/events/adapters/memory-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/memory-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/memory-event-factory.ts" -> "src/interfaces/events/core/base-event-manager.ts"
    "src/interfaces/events/adapters/memory-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/memory-event-factory.ts" -> "src/interfaces/events/factories.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/events/adapters/memory-event-factory.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/monitoring-event-adapter.ts" [label=<monitoring-event-adapter.ts> tooltip="monitoring-event-adapter.ts" URL="src/interfaces/events/adapters/monitoring-event-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/monitoring-event-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/monitoring-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/adapters/monitoring-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/monitoring-event-adapter.ts" -> "src/interfaces/events/types.ts"
    "src/interfaces/events/adapters/monitoring-event-adapter.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/monitoring-event-factory.ts" [label=<monitoring-event-factory.ts> tooltip="monitoring-event-factory.ts" URL="src/interfaces/events/adapters/monitoring-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/monitoring-event-factory.ts" -> "src/interfaces/events/adapters/monitoring-event-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/monitoring-usage-example.ts" [label=<monitoring-usage-example.ts> tooltip="monitoring-usage-example.ts" URL="src/interfaces/events/adapters/monitoring-usage-example.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/monitoring-usage-example.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/monitoring-usage-example.ts" -> "src/interfaces/events/adapters/monitoring-event-adapter.ts"
    "src/interfaces/events/adapters/monitoring-usage-example.ts" -> "src/interfaces/events/adapters/monitoring-event-factory.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/neural-event-factory.ts" [label=<neural-event-factory.ts> tooltip="neural-event-factory.ts" URL="src/interfaces/events/adapters/neural-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/neural-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/neural-event-factory.ts" -> "src/interfaces/events/core/base-event-manager.ts"
    "src/interfaces/events/adapters/neural-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/neural-event-factory.ts" -> "src/interfaces/events/factories.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/events/adapters/neural-event-factory.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/system-event-adapter.ts" [label=<system-event-adapter.ts> tooltip="system-event-adapter.ts" URL="src/interfaces/events/adapters/system-event-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/system-event-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/system-event-adapter.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/system-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/adapters/system-event-adapter.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/system-event-adapter.ts" -> "src/interfaces/events/types.ts"
    "src/interfaces/events/adapters/system-event-adapter.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/system-event-factory.ts" [label=<system-event-factory.ts> tooltip="system-event-factory.ts" URL="src/interfaces/events/adapters/system-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/system-event-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/adapters/system-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/system-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/adapters/system-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/system-event-factory.ts" -> "src/interfaces/events/adapters/system-event-adapter.ts"
    "src/interfaces/events/adapters/system-event-factory.ts" -> "src/interfaces/events/adapters/system-event-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/adapters" {label="adapters" "src/interfaces/events/adapters/workflow-event-factory.ts" [label=<workflow-event-factory.ts> tooltip="workflow-event-factory.ts" URL="src/interfaces/events/adapters/workflow-event-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/adapters/workflow-event-factory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/workflow-event-factory.ts" -> "src/interfaces/events/core/base-event-manager.ts"
    "src/interfaces/events/adapters/workflow-event-factory.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/adapters/workflow-event-factory.ts" -> "src/interfaces/events/factories.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/events/adapters/workflow-event-factory.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/compatibility.ts" [label=<compatibility.ts> tooltip="compatibility.ts" URL="src/interfaces/events/compatibility.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/compatibility.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/compatibility.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/compatibility.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/compatibility.ts" -> "src/interfaces/events/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/core" {label="core" "src/interfaces/events/core/base-event-manager.ts" [label=<base-event-manager.ts> tooltip="base-event-manager.ts" URL="src/interfaces/events/core/base-event-manager.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/core/base-event-manager.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/core/base-event-manager.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/core" {label="core" "src/interfaces/events/core/interfaces.ts" [label=<interfaces.ts> tooltip="interfaces.ts" URL="src/interfaces/events/core/interfaces.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/core/interfaces.ts" -> "src/interfaces/events/observer-system.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/core" {label="core" "src/interfaces/events/core/uel-singleton.ts" [label=<uel-singleton.ts> tooltip="uel-singleton.ts" URL="src/interfaces/events/core/uel-singleton.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/core/uel-singleton.ts" -> "src/di/container/di-container.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/di/providers/singleton-provider.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/di/tokens/core-tokens.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/compatibility.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/compatibility.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/factories.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/factories.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/manager.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/registry.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/system-integrations.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/validation.ts" [style="dashed"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/validation.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/core/uel-singleton.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" subgraph "cluster_src/interfaces/events/examples" {label="examples" "src/interfaces/events/examples/complete-integration-example.ts" [label=<complete-integration-example.ts> tooltip="complete-integration-example.ts" URL="src/interfaces/events/examples/complete-integration-example.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/events/examples/complete-integration-example.ts" -> "src/interfaces/events/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/factories.ts" [label=<factories.ts> tooltip="factories.ts" URL="src/interfaces/events/factories.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/factories.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/factories.ts" -> "src/di/container/di-container.ts" [style="dashed"]
    "src/interfaces/events/factories.ts" -> "src/di/decorators/injectable.ts"
    "src/interfaces/events/factories.ts" -> "src/di/tokens/core-tokens.ts"
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/communication-event-factory.ts" [style="dashed"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/coordination-event-factory.ts" [style="dashed"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/database-event-factory.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/interface-event-factory.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/memory-event-factory.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/monitoring-event-factory.ts" [style="dashed"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/neural-event-factory.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/system-event-factory.ts" [style="dashed"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/adapters/workflow-event-factory.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/types.ts"
    "src/interfaces/events/factories.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/events/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/index.ts" -> "src/config/logging-config.ts"
    "src/interfaces/events/index.ts" -> "src/interfaces/events/adapters/index.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/adapters/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/compatibility.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/compatibility.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/core/uel-singleton.ts"
    "src/interfaces/events/index.ts" -> "src/interfaces/events/factories.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/factories.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/manager.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/observer-system.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/registry.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/system-integrations.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/system-integrations.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/types.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/validation.ts" [arrowhead="inv"]
    "src/interfaces/events/index.ts" -> "src/interfaces/events/validation.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/manager.ts" [label=<manager.ts> tooltip="manager.ts" URL="src/interfaces/events/manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/manager.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/manager.ts" -> "src/di/decorators/injectable.ts"
    "src/interfaces/events/manager.ts" -> "src/di/tokens/core-tokens.ts"
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/adapters/communication-event-factory.ts" [style="dashed"]
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/adapters/coordination-event-factory.ts" [style="dashed"]
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/adapters/monitoring-event-factory.ts" [style="dashed"]
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/adapters/system-event-factory.ts" [style="dashed"]
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/factories.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/registry.ts"
    "src/interfaces/events/manager.ts" -> "src/interfaces/events/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/observer-system.ts" [label=<observer-system.ts> tooltip="observer-system.ts" URL="src/interfaces/events/observer-system.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/observer-system.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/registry.ts" [label=<registry.ts> tooltip="registry.ts" URL="src/interfaces/events/registry.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/registry.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/registry.ts" -> "src/di/decorators/injectable.ts"
    "src/interfaces/events/registry.ts" -> "src/di/tokens/core-tokens.ts"
    "src/interfaces/events/registry.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/registry.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/registry.ts" -> "src/interfaces/events/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/system-integrations.ts" [label=<system-integrations.ts> tooltip="system-integrations.ts" URL="src/interfaces/events/system-integrations.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/system-integrations.ts" -> "src/interfaces/events/compatibility.ts"
    "src/interfaces/events/system-integrations.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/system-integrations.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/system-integrations.ts" -> "src/interfaces/events/core/uel-singleton.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" style="dashed" fontcolor="orange" color="orange"]
    "src/interfaces/events/system-integrations.ts" -> "src/interfaces/events/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/system-integrations.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/interfaces/events/types.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/types.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/events" {label="events" "src/interfaces/events/validation.ts" [label=<validation.ts> tooltip="validation.ts" URL="src/interfaces/events/validation.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/events/validation.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/validation.ts" -> "src/interfaces/events/core/interfaces.ts"
    "src/interfaces/events/validation.ts" -> "src/interfaces/events/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/validation.ts" -> "src/interfaces/events/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/events/validation.ts" -> "src/interfaces/events/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" "src/interfaces/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/index.ts" fillcolor="#ddfeff"] } }
    "src/interfaces/index.ts" -> "src/interfaces/api/index.ts" [arrowhead="inv"]
    "src/interfaces/index.ts" -> "src/interfaces/mcp/index.ts" [arrowhead="inv"]
    "src/interfaces/index.ts" -> "src/interfaces/terminal/index.ts" [arrowhead="inv"]
    "src/interfaces/index.ts" -> "src/interfaces/web/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp-stdio" {label="mcp-stdio" "src/interfaces/mcp-stdio/swarm-server.ts" [label=<swarm-server.ts> tooltip="swarm-server.ts" URL="src/interfaces/mcp-stdio/swarm-server.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp-stdio/swarm-server.ts" -> "src/config/logging-config.ts"
    "src/interfaces/mcp-stdio/swarm-server.ts" -> "src/services/coordination/swarm-service.ts"
    "src/interfaces/mcp-stdio/swarm-server.ts" -> "src/types/swarm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/command-system.ts" [label=<command-system.ts> tooltip="command-system.ts" URL="src/interfaces/mcp/command-system.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/dspy-enhanced-tools.ts" [label=<dspy-enhanced-tools.ts> tooltip="dspy-enhanced-tools.ts" URL="src/interfaces/mcp/dspy-enhanced-tools.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/dspy-enhanced-tools.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/external-mcp-client.ts" [label=<external-mcp-client.ts> tooltip="external-mcp-client.ts" URL="src/interfaces/mcp/external-mcp-client.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/http-mcp-server.ts" [label=<http-mcp-server.ts> tooltip="http-mcp-server.ts" URL="src/interfaces/mcp/http-mcp-server.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/http-mcp-server.ts" -> "src/config/index.ts"
    "src/interfaces/mcp/http-mcp-server.ts" -> "src/config/logging-config.ts"
    "src/interfaces/mcp/http-mcp-server.ts" -> "src/interfaces/mcp/mcp-tools.ts"
    "src/interfaces/mcp/http-mcp-server.ts" -> "src/interfaces/mcp/mcp-tools.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/mcp/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/http-mcp-server.ts" [arrowhead="inv"]
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/mcp-interface.ts" [arrowhead="inv"]
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/mcp-logger.ts" [arrowhead="inv"]
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/request-handler.ts" [arrowhead="inv"]
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/start-server.ts" [arrowhead="inv"]
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/tool-registry.ts" [arrowhead="inv"]
    "src/interfaces/mcp/index.ts" -> "src/interfaces/mcp/validate-external-config.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/mcp-interface.ts" [label=<mcp-interface.ts> tooltip="mcp-interface.ts" URL="src/interfaces/mcp/mcp-interface.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/mcp-interface.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/mcp-logger.ts" [label=<mcp-logger.ts> tooltip="mcp-logger.ts" URL="src/interfaces/mcp/mcp-logger.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/mcp-tools.ts" [label=<mcp-tools.ts> tooltip="mcp-tools.ts" URL="src/interfaces/mcp/mcp-tools.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/mcp-tools.ts" -> "src/coordination/swarm/mcp/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/mcp/mcp-tools.ts" -> "src/memory/core/memory-coordinator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/mcp-types.ts" [label=<mcp-types.ts> tooltip="mcp-types.ts" URL="src/interfaces/mcp/mcp-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/request-handler.ts" [label=<request-handler.ts> tooltip="request-handler.ts" URL="src/interfaces/mcp/request-handler.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/request-handler.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/start-server.ts" [label=<start-server.ts> tooltip="start-server.ts" URL="src/interfaces/mcp/start-server.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/start-server.ts" -> "src/config/index.ts"
    "src/interfaces/mcp/start-server.ts" -> "src/config/logging-config.ts"
    "src/interfaces/mcp/start-server.ts" -> "src/interfaces/mcp/http-mcp-server.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/test-external-servers.ts" [label=<test-external-servers.ts> tooltip="test-external-servers.ts" URL="src/interfaces/mcp/test-external-servers.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/test-external-servers.ts" -> "src/config/logging-config.ts"
    "src/interfaces/mcp/test-external-servers.ts" -> "src/interfaces/mcp/external-mcp-client.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/tool-registry.ts" [label=<tool-registry.ts> tooltip="tool-registry.ts" URL="src/interfaces/mcp/tool-registry.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/coordination-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/github-integration-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/memory-neural-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/monitoring-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/orchestration-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/sparc-integration-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/tools/system-tools.ts"
    "src/interfaces/mcp/tool-registry.ts" -> "src/interfaces/mcp/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/coordination-tools.ts" [label=<coordination-tools.ts> tooltip="coordination-tools.ts" URL="src/interfaces/mcp/tools/coordination-tools.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/github-integration-tools.ts" [label=<github-integration-tools.ts> tooltip="github-integration-tools.ts" URL="src/interfaces/mcp/tools/github-integration-tools.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/memory-neural-tools.ts" [label=<memory-neural-tools.ts> tooltip="memory-neural-tools.ts" URL="src/interfaces/mcp/tools/memory-neural-tools.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/monitoring-tools.ts" [label=<monitoring-tools.ts> tooltip="monitoring-tools.ts" URL="src/interfaces/mcp/tools/monitoring-tools.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/orchestration-tools.ts" [label=<orchestration-tools.ts> tooltip="orchestration-tools.ts" URL="src/interfaces/mcp/tools/orchestration-tools.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/sparc-integration-tools.ts" [label=<sparc-integration-tools.ts> tooltip="sparc-integration-tools.ts" URL="src/interfaces/mcp/tools/sparc-integration-tools.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/mcp/tools/sparc-integration-tools.ts" -> "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" [style="dashed"]
    "src/interfaces/mcp/tools/sparc-integration-tools.ts" -> "src/interfaces/mcp/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" subgraph "cluster_src/interfaces/mcp/tools" {label="tools" "src/interfaces/mcp/tools/system-tools.ts" [label=<system-tools.ts> tooltip="system-tools.ts" URL="src/interfaces/mcp/tools/system-tools.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/interfaces/mcp/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/validate-external-config.ts" [label=<validate-external-config.ts> tooltip="validate-external-config.ts" URL="src/interfaces/mcp/validate-external-config.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/validate-external-config.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/mcp" {label="mcp" "src/interfaces/mcp/workflow-tools.ts" [label=<workflow-tools.ts> tooltip="workflow-tools.ts" URL="src/interfaces/mcp/workflow-tools.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/mcp/workflow-tools.ts" -> "src/config/default-repo-config.ts"
    "src/interfaces/mcp/workflow-tools.ts" -> "src/config/memory-optimization.ts"
    "src/interfaces/mcp/workflow-tools.ts" -> "src/config/system-info.ts"
    "src/interfaces/mcp/workflow-tools.ts" -> "src/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" "src/interfaces/server.ts" [label=<server.ts> tooltip="server.ts" URL="src/interfaces/server.ts" fillcolor="#ddfeff"] } }
    "src/interfaces/server.ts" -> "src/config/index.ts"
    "src/interfaces/server.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/server.ts" -> "src/utils/logging-config.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/coordination-service-adapter.ts" [label=<coordination-service-adapter.ts> tooltip="coordination-service-adapter.ts" URL="src/interfaces/services/adapters/coordination-service-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/coordination/swarm/core/daa-service.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/coordination/swarm/core/session-integration.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/coordination/swarm/core/session-manager.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="onormal" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="onormal" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/coordination/swarm/core/types.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="onormal" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/coordination-service-adapter.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/coordination-service-factory.ts" [label=<coordination-service-factory.ts> tooltip="coordination-service-factory.ts" URL="src/interfaces/services/adapters/coordination-service-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/coordination-service-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/coordination-service-factory.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-factory.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-factory.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/coordination-service-factory.ts" -> "src/interfaces/services/adapters/coordination-service-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/coordination-service-helpers.ts" [label=<coordination-service-helpers.ts> tooltip="coordination-service-helpers.ts" URL="src/interfaces/services/adapters/coordination-service-helpers.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/coordination-service-helpers.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/coordination-service-helpers.ts" -> "src/coordination/swarm/core/session-manager.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="onormal" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-helpers.ts" -> "src/coordination/swarm/core/swarm-coordinator.ts" [xlabel="coordination-layer-access" tooltip="coordination-layer-access" arrowhead="onormal" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/interfaces/services/adapters/coordination-service-helpers.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-helpers.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/coordination-service-helpers.ts" -> "src/interfaces/services/adapters/coordination-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/data-service-adapter.ts" [label=<data-service-adapter.ts> tooltip="data-service-adapter.ts" URL="src/interfaces/services/adapters/data-service-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/database/managers/document-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/database/services/document-service-legacy.ts"
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/interfaces/web/web-data-service.ts"
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/interfaces/web/web-data-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/types/workflow-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/data-service-adapter.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/data-service-factory.ts" [label=<data-service-factory.ts> tooltip="data-service-factory.ts" URL="src/interfaces/services/adapters/data-service-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/data-service-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/data-service-factory.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-factory.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/adapters/data-service-factory.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/data-service-factory.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/data-service-factory.ts" -> "src/interfaces/services/adapters/data-service-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/data-service-helpers.ts" [label=<data-service-helpers.ts> tooltip="data-service-helpers.ts" URL="src/interfaces/services/adapters/data-service-helpers.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/data-service-helpers.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/data-service-helpers.ts" -> "src/interfaces/services/adapters/data-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/services/adapters/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/factories.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/coordination-service-adapter.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/coordination-service-factory.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/coordination-service-helpers.ts" [arrowhead="inv"]
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/data-service-adapter.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/data-service-factory.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/data-service-helpers.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/data-service-helpers.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/infrastructure-service-adapter.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/infrastructure-service-factory.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/infrastructure-service-helpers.ts" [arrowhead="inv"]
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/integration-service-adapter.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/integration-service-factory.ts"
    "src/interfaces/services/adapters/index.ts" -> "src/interfaces/services/adapters/integration-service-helpers.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/infrastructure-service-adapter.ts" [label=<infrastructure-service-adapter.ts> tooltip="infrastructure-service-adapter.ts" URL="src/interfaces/services/adapters/infrastructure-service-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/core/facade.ts"
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/core/pattern-integration.ts"
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/infrastructure-service-adapter.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/infrastructure-service-factory.ts" [label=<infrastructure-service-factory.ts> tooltip="infrastructure-service-factory.ts" URL="src/interfaces/services/adapters/infrastructure-service-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/infrastructure-service-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/infrastructure-service-factory.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/infrastructure-service-factory.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/infrastructure-service-factory.ts" -> "src/interfaces/services/adapters/infrastructure-service-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/infrastructure-service-helpers.ts" [label=<infrastructure-service-helpers.ts> tooltip="infrastructure-service-helpers.ts" URL="src/interfaces/services/adapters/infrastructure-service-helpers.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/infrastructure-service-helpers.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/infrastructure-service-helpers.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/infrastructure-service-helpers.ts" -> "src/interfaces/services/adapters/infrastructure-service-adapter.ts"
    "src/interfaces/services/adapters/infrastructure-service-helpers.ts" -> "src/interfaces/services/adapters/infrastructure-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/infrastructure-service-helpers.ts" -> "src/interfaces/services/adapters/infrastructure-service-factory.ts"
    "src/interfaces/services/adapters/infrastructure-service-helpers.ts" -> "src/interfaces/services/adapters/infrastructure-service-factory.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/integration-service-adapter.ts" [label=<integration-service-adapter.ts> tooltip="integration-service-adapter.ts" URL="src/interfaces/services/adapters/integration-service-adapter.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/config/index.ts"
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/coordination/swarm/sparc/database/architecture-storage.ts"
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/coordination/swarm/sparc/types/sparc-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/database/factory.ts" [style="dashed"]
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/integration/adapter-system.ts"
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/integration/adapter-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/utils/type-guards.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/interfaces/api/safe-api-client.ts"
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/adapters/integration-service-adapter.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/integration-service-factory.ts" [label=<integration-service-factory.ts> tooltip="integration-service-factory.ts" URL="src/interfaces/services/adapters/integration-service-factory.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/integration-service-factory.ts" -> "src/config/index.ts"
    "src/interfaces/services/adapters/integration-service-factory.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/integration-service-factory.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-factory.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-factory.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-factory.ts" -> "src/interfaces/services/adapters/integration-service-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/adapters" {label="adapters" "src/interfaces/services/adapters/integration-service-helpers.ts" [label=<integration-service-helpers.ts> tooltip="integration-service-helpers.ts" URL="src/interfaces/services/adapters/integration-service-helpers.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/adapters/integration-service-helpers.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/adapters/integration-service-helpers.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/adapters/integration-service-helpers.ts" -> "src/interfaces/services/adapters/integration-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/compatibility.ts" [label=<compatibility.ts> tooltip="compatibility.ts" URL="src/interfaces/services/compatibility.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/compatibility.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/compatibility.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/compatibility.ts" -> "src/interfaces/services/manager.ts"
    "src/interfaces/services/compatibility.ts" -> "src/interfaces/services/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/core" {label="core" "src/interfaces/services/core/interfaces.ts" [label=<interfaces.ts> tooltip="interfaces.ts" URL="src/interfaces/services/core/interfaces.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/factories.ts" [label=<factories.ts> tooltip="factories.ts" URL="src/interfaces/services/factories.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/factories.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/adapters/coordination-service-adapter.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/adapters/data-service-adapter.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/coordination-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/database-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/generic-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/memory-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/monitoring-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/neural-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/implementations/web-service.ts" [style="dashed"]
    "src/interfaces/services/factories.ts" -> "src/interfaces/services/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/base-service.ts" [label=<base-service.ts> tooltip="base-service.ts" URL="src/interfaces/services/implementations/base-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/base-service.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/implementations/base-service.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/base-service.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/implementations/base-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/coordination-service.ts" [label=<coordination-service.ts> tooltip="coordination-service.ts" URL="src/interfaces/services/implementations/coordination-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/coordination-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/coordination-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/coordination-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/data-service.ts" [label=<data-service.ts> tooltip="data-service.ts" URL="src/interfaces/services/implementations/data-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/data-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/data-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/data-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/database-service.ts" [label=<database-service.ts> tooltip="database-service.ts" URL="src/interfaces/services/implementations/database-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/database-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/database-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/database-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/generic-service.ts" [label=<generic-service.ts> tooltip="generic-service.ts" URL="src/interfaces/services/implementations/generic-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/generic-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/generic-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/memory-service.ts" [label=<memory-service.ts> tooltip="memory-service.ts" URL="src/interfaces/services/implementations/memory-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/memory-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/memory-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/memory-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/monitoring-service.ts" [label=<monitoring-service.ts> tooltip="monitoring-service.ts" URL="src/interfaces/services/implementations/monitoring-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/monitoring-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/monitoring-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/monitoring-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/neural-service.ts" [label=<neural-service.ts> tooltip="neural-service.ts" URL="src/interfaces/services/implementations/neural-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/neural-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/neural-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/neural-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/implementations" {label="implementations" "src/interfaces/services/implementations/web-service.ts" [label=<web-service.ts> tooltip="web-service.ts" URL="src/interfaces/services/implementations/web-service.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/implementations/web-service.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/web-service.ts" -> "src/interfaces/services/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/implementations/web-service.ts" -> "src/interfaces/services/implementations/base-service.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/services/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/index.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/index.ts" -> "src/interfaces/services/adapters/index.ts"
    "src/interfaces/services/index.ts" -> "src/interfaces/services/compatibility.ts"
    "src/interfaces/services/index.ts" -> "src/interfaces/services/compatibility.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/index.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/factories.ts"
    "src/interfaces/services/index.ts" -> "src/interfaces/services/implementations/coordination-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/implementations/data-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/implementations/database-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/implementations/memory-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/implementations/neural-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/implementations/web-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/manager.ts" [arrowhead="inv"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/registry.ts" [arrowhead="inv"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/types.ts"
    "src/interfaces/services/index.ts" -> "src/interfaces/services/validation.ts" [arrowhead="inv"]
    "src/interfaces/services/index.ts" -> "src/interfaces/services/validation.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/manager.ts" [label=<manager.ts> tooltip="manager.ts" URL="src/interfaces/services/manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/manager.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/manager.ts" -> "src/config/logging-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/coordination-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/coordination-service-factory.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/data-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/data-service-factory.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/infrastructure-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/infrastructure-service-factory.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/integration-service-adapter.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/adapters/integration-service-factory.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/factories.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/registry.ts"
    "src/interfaces/services/manager.ts" -> "src/interfaces/services/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/registry.ts" [label=<registry.ts> tooltip="registry.ts" URL="src/interfaces/services/registry.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/registry.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/registry.ts" -> "src/interfaces/services/core/interfaces.ts"
    "src/interfaces/services/registry.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/interfaces/services/types.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/types.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" subgraph "cluster_src/interfaces/services/utils" {label="utils" "src/interfaces/services/utils/logger.ts" [label=<logger.ts> tooltip="logger.ts" URL="src/interfaces/services/utils/logger.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/services/utils/logger.ts" -> "src/core/logger.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/services" {label="services" "src/interfaces/services/validation.ts" [label=<validation.ts> tooltip="validation.ts" URL="src/interfaces/services/validation.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/services/validation.ts" -> "src/config/logging-config.ts"
    "src/interfaces/services/validation.ts" -> "src/interfaces/services/compatibility.ts"
    "src/interfaces/services/validation.ts" -> "src/interfaces/services/core/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/validation.ts" -> "src/interfaces/services/manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/validation.ts" -> "src/interfaces/services/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/services/validation.ts" -> "src/interfaces/services/types.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/shared" {label="shared" "src/interfaces/shared/command-interfaces.ts" [label=<command-interfaces.ts> tooltip="command-interfaces.ts" URL="src/interfaces/shared/command-interfaces.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/shared" {label="shared" "src/interfaces/shared/config.ts" [label=<config.ts> tooltip="config.ts" URL="src/interfaces/shared/config.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/shared/config.ts" -> "src/config/index.ts"
    "src/interfaces/shared/config.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/shared" {label="shared" "src/interfaces/shared/contracts.ts" [label=<contracts.ts> tooltip="contracts.ts" URL="src/interfaces/shared/contracts.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/shared/contracts.ts" -> "src/config/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/shared/contracts.ts" -> "src/interfaces/shared/command-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/shared/contracts.ts" -> "src/interfaces/shared/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/shared" {label="shared" "src/interfaces/shared/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/shared/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/shared/index.ts" -> "src/config/types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/shared/index.ts" -> "src/interfaces/shared/command-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/shared/index.ts" -> "src/interfaces/shared/config.ts" [arrowhead="inv"]
    "src/interfaces/shared/index.ts" -> "src/interfaces/shared/contracts.ts" [arrowhead="inv"]
    "src/interfaces/shared/index.ts" -> "src/interfaces/shared/contracts.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/shared/index.ts" -> "src/interfaces/shared/types.ts" [arrowhead="inv"]
    "src/interfaces/shared/index.ts" -> "src/interfaces/shared/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/shared" {label="shared" "src/interfaces/shared/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/interfaces/shared/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/shared" {label="shared" "src/interfaces/shared/utils.ts" [label=<utils.ts> tooltip="no-orphans" URL="src/interfaces/shared/utils.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/adapters" {label="adapters" "src/interfaces/terminal/adapters/cli-adapters.ts" [label=<cli-adapters.ts> tooltip="cli-adapters.ts" URL="src/interfaces/terminal/adapters/cli-adapters.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/adapters/cli-adapters.ts" -> "src/interfaces/shared/command-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/adapters" {label="adapters" "src/interfaces/terminal/adapters/cli-command-adapter.ts" [label=<cli-command-adapter.ts> tooltip="cli-command-adapter.ts" URL="src/interfaces/terminal/adapters/cli-command-adapter.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/advanced-cli-commands.ts" [label=<advanced-cli-commands.ts> tooltip="advanced-cli-commands.ts" URL="src/interfaces/terminal/advanced-cli-commands.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/terminal/advanced-cli-commands.ts" -> "src/interfaces/shared/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/advanced-cli-commands.ts" -> "src/interfaces/terminal/adapters/cli-command-adapter.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/command-execution-engine.ts" [label=<command-execution-engine.ts> tooltip="command-execution-engine.ts" URL="src/interfaces/terminal/command-execution-engine.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/terminal/command-execution-engine.ts" -> "src/config/logging-config.ts"
    "src/interfaces/terminal/command-execution-engine.ts" -> "src/interfaces/terminal/adapters/cli-adapters.ts" [style="dashed"]
    "src/interfaces/terminal/command-execution-engine.ts" -> "src/interfaces/terminal/utils/version-utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/command-execution-renderer.tsx" [label=<command-execution-renderer.tsx> tooltip="command-execution-renderer.tsx" URL="src/interfaces/terminal/command-execution-renderer.tsx" fillcolor="#bbfeff"] } } }
    "src/interfaces/terminal/command-execution-renderer.tsx" -> "src/interfaces/terminal/advanced-cli-commands.ts"
    "src/interfaces/terminal/command-execution-renderer.tsx" -> "src/interfaces/terminal/command-execution-engine.ts"
    "src/interfaces/terminal/command-execution-renderer.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/error-message.tsx" [label=<error-message.tsx> tooltip="error-message.tsx" URL="src/interfaces/terminal/components/error-message.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/footer.tsx" [label=<footer.tsx> tooltip="footer.tsx" URL="src/interfaces/terminal/components/footer.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/header.tsx" [label=<header.tsx> tooltip="header.tsx" URL="src/interfaces/terminal/components/header.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/terminal/components/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/components/index.ts" -> "src/interfaces/terminal/components/error-message.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/components/index.ts" -> "src/interfaces/terminal/components/footer.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/components/index.ts" -> "src/interfaces/terminal/components/header.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/components/index.ts" -> "src/interfaces/terminal/components/progress-bar.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/components/index.ts" -> "src/interfaces/terminal/components/spinner.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/components/index.ts" -> "src/interfaces/terminal/components/status-badge.tsx" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" subgraph "cluster_src/interfaces/terminal/components/index" {label="index" "src/interfaces/terminal/components/index/index.js" [label=<index.js> tooltip="index.js" URL="src/interfaces/terminal/components/index/index.js" ] } } } } }
    "src/interfaces/terminal/components/index/index.js" -> "src/interfaces/terminal/components/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/progress-bar.tsx" [label=<progress-bar.tsx> tooltip="progress-bar.tsx" URL="src/interfaces/terminal/components/progress-bar.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/spinner.tsx" [label=<spinner.tsx> tooltip="spinner.tsx" URL="src/interfaces/terminal/components/spinner.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/components" {label="components" "src/interfaces/terminal/components/status-badge.tsx" [label=<status-badge.tsx> tooltip="status-badge.tsx" URL="src/interfaces/terminal/components/status-badge.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/terminal/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/command-execution-engine.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/command-execution-renderer.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/components/header.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/components/index.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/interactive-terminal-application.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/process-orchestrator.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/screens/index.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/screens/swarm-dashboard.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/state-hooks/use-config.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/state-hooks/use-swarm-status.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/terminal-interface-router.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/utils/mock-command-handler.ts" [arrowhead="inv"]
    "src/interfaces/terminal/index.ts" -> "src/interfaces/terminal/utils/mode-detector.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/interactive-terminal-application.tsx" [label=<interactive-terminal-application.tsx> tooltip="interactive-terminal-application.tsx" URL="src/interfaces/terminal/interactive-terminal-application.tsx" fillcolor="#bbfeff"] } } }
    "src/interfaces/terminal/interactive-terminal-application.tsx" -> "src/coordination/swarm/index.ts" [style="dashed"]
    "src/interfaces/terminal/interactive-terminal-application.tsx" -> "src/interfaces/terminal/components/index/index.js"
    "src/interfaces/terminal/interactive-terminal-application.tsx" -> "src/interfaces/terminal/screens/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/main.ts" [label=<main.ts> tooltip="main.ts" URL="src/interfaces/terminal/main.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/terminal/main.ts" -> "src/config/logging-config.ts"
    "src/interfaces/terminal/main.ts" -> "src/interfaces/terminal/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/process-orchestrator.ts" [label=<process-orchestrator.ts> tooltip="process-orchestrator.ts" URL="src/interfaces/terminal/process-orchestrator.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/terminal/process-orchestrator.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/command-palette.tsx" [label=<command-palette.tsx> tooltip="command-palette.tsx" URL="src/interfaces/terminal/screens/command-palette.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/command-palette.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/file-browser.tsx" [label=<file-browser.tsx> tooltip="file-browser.tsx" URL="src/interfaces/terminal/screens/file-browser.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/file-browser.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/help.tsx" [label=<help.tsx> tooltip="help.tsx" URL="src/interfaces/terminal/screens/help.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/help.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/terminal/screens/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/components/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/command-palette.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/file-browser.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/help.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/llm-statistics.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/main-menu.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/mcp-servers.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/mcp-tester.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/nix-manager.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/performance-monitor.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/settings.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/status.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/swarm-dashboard.tsx" [arrowhead="inv"]
    "src/interfaces/terminal/screens/index.ts" -> "src/interfaces/terminal/screens/workspace.tsx" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" subgraph "cluster_src/interfaces/terminal/screens/index" {label="index" "src/interfaces/terminal/screens/index/index.js" [label=<index.js> tooltip="index.js" URL="src/interfaces/terminal/screens/index/index.js" ] } } } } }
    "src/interfaces/terminal/screens/index/index.js" -> "src/interfaces/terminal/screens/index.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/llm-statistics.tsx" [label=<llm-statistics.tsx> tooltip="llm-statistics.tsx" URL="src/interfaces/terminal/screens/llm-statistics.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/llm-statistics.tsx" -> "src/coordination/services/llm-stats-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/screens/llm-statistics.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/main-menu.tsx" [label=<main-menu.tsx> tooltip="main-menu.tsx" URL="src/interfaces/terminal/screens/main-menu.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/main-menu.tsx" -> "src/parsers/beam-language-parser.ts"
    "src/interfaces/terminal/screens/main-menu.tsx" -> "src/utils/environment-detector.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/screens/main-menu.tsx" -> "src/interfaces/terminal/components/index/index.js"
    "src/interfaces/terminal/screens/main-menu.tsx" -> "src/interfaces/terminal/utils/version-utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/mcp-servers.tsx" [label=<mcp-servers.tsx> tooltip="mcp-servers.tsx" URL="src/interfaces/terminal/screens/mcp-servers.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/mcp-servers.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/mcp-tester.tsx" [label=<mcp-tester.tsx> tooltip="mcp-tester.tsx" URL="src/interfaces/terminal/screens/mcp-tester.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/mcp-tester.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/nix-manager.tsx" [label=<nix-manager.tsx> tooltip="nix-manager.tsx" URL="src/interfaces/terminal/screens/nix-manager.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/nix-manager.tsx" -> "src/utils/environment-detector.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/screens/nix-manager.tsx" -> "src/utils/nix-integration.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/terminal/screens/nix-manager.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/performance-monitor.tsx" [label=<performance-monitor.tsx> tooltip="performance-monitor.tsx" URL="src/interfaces/terminal/screens/performance-monitor.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/performance-monitor.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/settings.tsx" [label=<settings.tsx> tooltip="settings.tsx" URL="src/interfaces/terminal/screens/settings.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/settings.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/status.tsx" [label=<status.tsx> tooltip="status.tsx" URL="src/interfaces/terminal/screens/status.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/status.tsx" -> "src/interfaces/terminal/components/index/index.js"
    "src/interfaces/terminal/screens/status.tsx" -> "src/interfaces/terminal/utils/time-utils.ts"
    "src/interfaces/terminal/screens/status.tsx" -> "src/interfaces/terminal/utils/version-utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/swarm-dashboard.tsx" [label=<swarm-dashboard.tsx> tooltip="swarm-dashboard.tsx" URL="src/interfaces/terminal/screens/swarm-dashboard.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/swarm-dashboard.tsx" -> "src/interfaces/terminal/components/index/index.js"
    "src/interfaces/terminal/screens/swarm-dashboard.tsx" -> "src/interfaces/terminal/utils/time-utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/screens" {label="screens" "src/interfaces/terminal/screens/workspace.tsx" [label=<workspace.tsx> tooltip="workspace.tsx" URL="src/interfaces/terminal/screens/workspace.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/terminal/screens/workspace.tsx" -> "src/coordination/discovery/domain-discovery-bridge.ts" [style="dashed"]
    "src/interfaces/terminal/screens/workspace.tsx" -> "src/coordination/services/strategic-vision-service.ts" [style="dashed"]
    "src/interfaces/terminal/screens/workspace.tsx" -> "src/coordination/workflows/workflow-gate-request.ts" [style="dashed"]
    "src/interfaces/terminal/screens/workspace.tsx" -> "src/database/managers/document-manager.ts" [style="dashed"]
    "src/interfaces/terminal/screens/workspace.tsx" -> "src/utils/workspace-fact-system.ts"
    "src/interfaces/terminal/screens/workspace.tsx" -> "src/interfaces/terminal/components/index/index.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/state-hooks" {label="state-hooks" "src/interfaces/terminal/state-hooks/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/terminal/state-hooks/index.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/state-hooks/index.ts" -> "src/interfaces/terminal/state-hooks/use-config.ts" [arrowhead="inv"]
    "src/interfaces/terminal/state-hooks/index.ts" -> "src/interfaces/terminal/state-hooks/use-swarm-status.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/state-hooks" {label="state-hooks" "src/interfaces/terminal/state-hooks/use-config.ts" [label=<use-config.ts> tooltip="use-config.ts" URL="src/interfaces/terminal/state-hooks/use-config.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/state-hooks/use-config.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/state-hooks" {label="state-hooks" "src/interfaces/terminal/state-hooks/use-swarm-status.ts" [label=<use-swarm-status.ts> tooltip="use-swarm-status.ts" URL="src/interfaces/terminal/state-hooks/use-swarm-status.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/state-hooks/use-swarm-status.ts" -> "src/config/logging-config.ts"
    "src/interfaces/terminal/state-hooks/use-swarm-status.ts" -> "src/coordination/public-api.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" "src/interfaces/terminal/terminal-interface-router.tsx" [label=<terminal-interface-router.tsx> tooltip="terminal-interface-router.tsx" URL="src/interfaces/terminal/terminal-interface-router.tsx" fillcolor="#bbfeff"] } } }
    "src/interfaces/terminal/terminal-interface-router.tsx" -> "src/core/interface-launcher.ts" [style="dashed"]
    "src/interfaces/terminal/terminal-interface-router.tsx" -> "src/interfaces/terminal/command-execution-renderer.tsx"
    "src/interfaces/terminal/terminal-interface-router.tsx" -> "src/interfaces/terminal/interactive-terminal-application.tsx"
    "src/interfaces/terminal/terminal-interface-router.tsx" -> "src/interfaces/terminal/utils/logger.ts"
    "src/interfaces/terminal/terminal-interface-router.tsx" -> "src/interfaces/terminal/utils/mode-detector.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/utils" {label="utils" "src/interfaces/terminal/utils/logger.ts" [label=<logger.ts> tooltip="logger.ts" URL="src/interfaces/terminal/utils/logger.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/utils/logger.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/utils" {label="utils" "src/interfaces/terminal/utils/mock-command-handler.ts" [label=<mock-command-handler.ts> tooltip="mock-command-handler.ts" URL="src/interfaces/terminal/utils/mock-command-handler.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/terminal/utils/mock-command-handler.ts" -> "src/config/logging-config.ts"
    "src/interfaces/terminal/utils/mock-command-handler.ts" -> "src/interfaces/terminal/command-execution-engine.ts"
    "src/interfaces/terminal/utils/mock-command-handler.ts" -> "src/interfaces/terminal/utils/version-utils.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/utils" {label="utils" "src/interfaces/terminal/utils/mode-detector.ts" [label=<mode-detector.ts> tooltip="mode-detector.ts" URL="src/interfaces/terminal/utils/mode-detector.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/utils" {label="utils" "src/interfaces/terminal/utils/time-utils.ts" [label=<time-utils.ts> tooltip="time-utils.ts" URL="src/interfaces/terminal/utils/time-utils.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/terminal" {label="terminal" subgraph "cluster_src/interfaces/terminal/utils" {label="utils" "src/interfaces/terminal/utils/version-utils.ts" [label=<version-utils.ts> tooltip="version-utils.ts" URL="src/interfaces/terminal/utils/version-utils.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" subgraph "cluster_src/interfaces/tui/components" {label="components" "src/interfaces/tui/components/deployment-progress.tsx" [label=<deployment-progress.tsx> tooltip="deployment-progress.tsx" URL="src/interfaces/tui/components/deployment-progress.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/tui/components/deployment-progress.tsx" -> "src/interfaces/tui/components/progress-bar.tsx"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" subgraph "cluster_src/interfaces/tui/components" {label="components" "src/interfaces/tui/components/domain-card.tsx" [label=<domain-card.tsx> tooltip="domain-card.tsx" URL="src/interfaces/tui/components/domain-card.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" subgraph "cluster_src/interfaces/tui/components" {label="components" "src/interfaces/tui/components/progress-bar.tsx" [label=<progress-bar.tsx> tooltip="progress-bar.tsx" URL="src/interfaces/tui/components/progress-bar.tsx" fillcolor="#bbfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" subgraph "cluster_src/interfaces/tui/components" {label="components" "src/interfaces/tui/components/status-dashboard.tsx" [label=<status-dashboard.tsx> tooltip="status-dashboard.tsx" URL="src/interfaces/tui/components/status-dashboard.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/tui/components/status-dashboard.tsx" -> "src/interfaces/tui/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" subgraph "cluster_src/interfaces/tui/components" {label="components" "src/interfaces/tui/components/swarm-config-panel.tsx" [label=<swarm-config-panel.tsx> tooltip="swarm-config-panel.tsx" URL="src/interfaces/tui/components/swarm-config-panel.tsx" fillcolor="#bbfeff"] } } } }
    "src/interfaces/tui/components/swarm-config-panel.tsx" -> "src/interfaces/tui/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" "src/interfaces/tui/discovery-tui.tsx" [label=<discovery-tui.tsx> tooltip="discovery-tui.tsx" URL="src/interfaces/tui/discovery-tui.tsx" fillcolor="#bbfeff"] } } }
    "src/interfaces/tui/discovery-tui.tsx" -> "src/interfaces/tui/components/deployment-progress.tsx"
    "src/interfaces/tui/discovery-tui.tsx" -> "src/interfaces/tui/components/domain-card.tsx"
    "src/interfaces/tui/discovery-tui.tsx" -> "src/interfaces/tui/components/progress-bar.tsx"
    "src/interfaces/tui/discovery-tui.tsx" -> "src/interfaces/tui/components/swarm-config-panel.tsx"
    "src/interfaces/tui/discovery-tui.tsx" -> "src/interfaces/tui/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" "src/interfaces/tui/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/tui/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/deployment-progress.tsx" [arrowhead="inv"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/deployment-progress.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/domain-card.tsx" [arrowhead="inv"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/domain-card.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/progress-bar.tsx" [arrowhead="inv"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/progress-bar.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/status-dashboard.tsx" [arrowhead="inv"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/status-dashboard.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/swarm-config-panel.tsx" [arrowhead="inv"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/components/swarm-config-panel.tsx" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/discovery-tui.tsx" [arrowhead="inv"]
    "src/interfaces/tui/index.ts" -> "src/interfaces/tui/discovery-tui.tsx" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/tui" {label="tui" "src/interfaces/tui/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/interfaces/tui/types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/api-route-handler.ts" [label=<api-route-handler.ts> tooltip="api-route-handler.ts" URL="src/interfaces/web/api-route-handler.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/api-route-handler.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/api-route-handler.ts" -> "src/interfaces/web/web-socket-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" subgraph "cluster_src/interfaces/web/api" {label="api" "src/interfaces/web/api/swarm-routes.ts" [label=<swarm-routes.ts> tooltip="swarm-routes.ts" URL="src/interfaces/web/api/swarm-routes.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/web/api/swarm-routes.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/api/swarm-routes.ts" -> "src/services/coordination/swarm-service.ts"
    "src/interfaces/web/api/swarm-routes.ts" -> "src/types/swarm-types.ts"
    "src/interfaces/web/api/swarm-routes.ts" -> "src/types/swarm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/daemon-process-manager.ts" [label=<daemon-process-manager.ts> tooltip="daemon-process-manager.ts" URL="src/interfaces/web/daemon-process-manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/daemon-process-manager.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/interfaces/web/index.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/index.ts" -> "src/interfaces/web/api-route-handler.ts" [arrowhead="inv"]
    "src/interfaces/web/index.ts" -> "src/interfaces/web/daemon-process-manager.ts" [arrowhead="inv"]
    "src/interfaces/web/index.ts" -> "src/interfaces/web/system-metrics-dashboard.ts" [arrowhead="inv"]
    "src/interfaces/web/index.ts" -> "src/interfaces/web/web-interface-server.ts"
    "src/interfaces/web/index.ts" -> "src/interfaces/web/web-interface-server.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/index.ts" -> "src/interfaces/web/web-socket-coordinator.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/system-metrics-dashboard.ts" [label=<system-metrics-dashboard.ts> tooltip="system-metrics-dashboard.ts" URL="src/interfaces/web/system-metrics-dashboard.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/system-metrics-dashboard.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/system-metrics-dashboard.ts" -> "src/database/index.ts"
    "src/interfaces/web/system-metrics-dashboard.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/system-metrics-dashboard.ts" -> "src/memory/memory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/system-metrics-dashboard.ts" -> "src/interfaces/clients/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" subgraph "cluster_src/interfaces/web/terminal-browser" {label="terminal-browser" "src/interfaces/web/terminal-browser/terminal-browser.ts" [label=<terminal-browser.ts> tooltip="terminal-browser.ts" URL="src/interfaces/web/terminal-browser/terminal-browser.ts" fillcolor="#ddfeff"] } } } }
    "src/interfaces/web/terminal-browser/terminal-browser.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-api-routes.ts" [label=<web-api-routes.ts> tooltip="web-api-routes.ts" URL="src/interfaces/web/web-api-routes.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-api-routes.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-api-routes.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/web-api-routes.ts" -> "src/interfaces/web/web-data-service.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/web-api-routes.ts" -> "src/interfaces/web/web-session-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-config.ts" [label=<web-config.ts> tooltip="web-config.ts" URL="src/interfaces/web/web-config.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-config.ts" -> "src/di/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-dashboard-server.ts" [label=<web-dashboard-server.ts> tooltip="web-dashboard-server.ts" URL="src/interfaces/web/web-dashboard-server.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-dashboard-server.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-dashboard-server.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-data-service.ts" [label=<web-data-service.ts> tooltip="web-data-service.ts" URL="src/interfaces/web/web-data-service.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-data-service.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-html-generator.ts" [label=<web-html-generator.ts> tooltip="web-html-generator.ts" URL="src/interfaces/web/web-html-generator.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-html-generator.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-interface-server.ts" [label=<web-interface-server.ts> tooltip="web-interface-server.ts" URL="src/interfaces/web/web-interface-server.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-interface-server.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-interface-server.ts" -> "src/interfaces/web/api-route-handler.ts"
    "src/interfaces/web/web-interface-server.ts" -> "src/interfaces/web/daemon-process-manager.ts"
    "src/interfaces/web/web-interface-server.ts" -> "src/interfaces/web/web-socket-coordinator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-interface.ts" [label=<web-interface.ts> tooltip="web-interface.ts" URL="src/interfaces/web/web-interface.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-interface.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-interface.ts" -> "src/core/process-lifecycle.ts"
    "src/interfaces/web/web-interface.ts" -> "src/di/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/api/swarm-routes.ts" [style="dashed"]
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-api-routes.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-config.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-dashboard-server.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-data-service.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-html-generator.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-process-manager.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-session-manager.ts"
    "src/interfaces/web/web-interface.ts" -> "src/interfaces/web/web-socket-manager.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-process-manager.ts" [label=<web-process-manager.ts> tooltip="web-process-manager.ts" URL="src/interfaces/web/web-process-manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-process-manager.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-process-manager.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-session-manager.ts" [label=<web-session-manager.ts> tooltip="web-session-manager.ts" URL="src/interfaces/web/web-session-manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-session-manager.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-session-manager.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-socket-coordinator.ts" [label=<web-socket-coordinator.ts> tooltip="web-socket-coordinator.ts" URL="src/interfaces/web/web-socket-coordinator.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-socket-coordinator.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/interfaces" {label="interfaces" subgraph "cluster_src/interfaces/web" {label="web" "src/interfaces/web/web-socket-manager.ts" [label=<web-socket-manager.ts> tooltip="web-socket-manager.ts" URL="src/interfaces/web/web-socket-manager.ts" fillcolor="#ddfeff"] } } }
    "src/interfaces/web/web-socket-manager.ts" -> "src/config/logging-config.ts"
    "src/interfaces/web/web-socket-manager.ts" -> "src/interfaces/web/web-config.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/interfaces/web/web-socket-manager.ts" -> "src/interfaces/web/web-data-service.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/collaborative-reasoning-engine.ts" [label=<collaborative-reasoning-engine.ts> tooltip="collaborative-reasoning-engine.ts" URL="src/knowledge/collaborative-reasoning-engine.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/collaborative-reasoning-engine.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/collective-intelligence-coordinator.ts" [label=<collective-intelligence-coordinator.ts> tooltip="collective-intelligence-coordinator.ts" URL="src/knowledge/collective-intelligence-coordinator.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/collective-intelligence-coordinator.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/collective-intelligence-coordinator.ts" -> "src/neural/types/wasm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/cross-agent-knowledge-integration.ts" [label=<cross-agent-knowledge-integration.ts> tooltip="cross-agent-knowledge-integration.ts" URL="src/knowledge/cross-agent-knowledge-integration.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/collaborative-reasoning-engine.ts"
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/collaborative-reasoning-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/collective-intelligence-coordinator.ts"
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/collective-intelligence-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/intelligence-coordination-system.ts"
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/intelligence-coordination-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/knowledge-quality-management.ts"
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/knowledge-quality-management.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/performance-optimization-system.ts"
    "src/knowledge/cross-agent-knowledge-integration.ts" -> "src/knowledge/performance-optimization-system.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/knowledge/index.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/index.ts" -> "src/knowledge/collaborative-reasoning-engine.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/collaborative-reasoning-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/collective-intelligence-coordinator.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/collective-intelligence-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/cross-agent-knowledge-integration.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/cross-agent-knowledge-integration.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/intelligence-coordination-system.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/intelligence-coordination-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/knowledge-client.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/knowledge-quality-management.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/knowledge-quality-management.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/knowledge-swarm.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/knowledge-swarm.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/performance-optimization-system.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/performance-optimization-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/index.ts" -> "src/knowledge/project-context-analyzer.ts" [arrowhead="inv"]
    "src/knowledge/index.ts" -> "src/knowledge/storage-backends/sqlite-backend.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/intelligence-coordination-system.ts" [label=<intelligence-coordination-system.ts> tooltip="intelligence-coordination-system.ts" URL="src/knowledge/intelligence-coordination-system.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/intelligence-coordination-system.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/intelligence-coordination-system.ts" -> "src/interfaces/events/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" subgraph "cluster_src/knowledge/knowledge-cache-backends" {label="knowledge-cache-backends" "src/knowledge/knowledge-cache-backends/sqlite-backend.ts" [label=<sqlite-backend.ts> tooltip="sqlite-backend.ts" URL="src/knowledge/knowledge-cache-backends/sqlite-backend.ts" fillcolor="#ddfeff"] } } }
    "src/knowledge/knowledge-cache-backends/sqlite-backend.ts" -> "src/knowledge/types/fact-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/knowledge-client.ts" [label=<knowledge-client.ts> tooltip="knowledge-client.ts" URL="src/knowledge/knowledge-client.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/knowledge-client.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/knowledge-processor.ts" [label=<knowledge-processor.ts> tooltip="knowledge-processor.ts" URL="src/knowledge/knowledge-processor.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/knowledge-processor.ts" -> "src/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/knowledge-quality-management.ts" [label=<knowledge-quality-management.ts> tooltip="knowledge-quality-management.ts" URL="src/knowledge/knowledge-quality-management.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/knowledge-quality-management.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/knowledge-storage.ts" [label=<knowledge-storage.ts> tooltip="knowledge-storage.ts" URL="src/knowledge/knowledge-storage.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/knowledge-storage.ts" -> "src/core/logger.ts"
    "src/knowledge/knowledge-storage.ts" -> "src/knowledge/knowledge-cache-backends/sqlite-backend.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/knowledge-swarm.ts" [label=<knowledge-swarm.ts> tooltip="knowledge-swarm.ts" URL="src/knowledge/knowledge-swarm.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/knowledge-swarm.ts" -> "src/config/logging-config.ts"
    "src/knowledge/knowledge-swarm.ts" -> "src/database/index.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    "src/knowledge/knowledge-swarm.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/knowledge-swarm.ts" -> "src/interfaces/clients/index.ts"
    "src/knowledge/knowledge-swarm.ts" -> "src/interfaces/clients/registry.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/knowledge-swarm.ts" -> "src/knowledge/knowledge-client.ts"
    "src/knowledge/knowledge-swarm.ts" -> "src/knowledge/knowledge-client.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/performance-optimization-system.ts" [label=<performance-optimization-system.ts> tooltip="performance-optimization-system.ts" URL="src/knowledge/performance-optimization-system.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/performance-optimization-system.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/performance-optimization-system.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/project-context-analyzer.ts" [label=<project-context-analyzer.ts> tooltip="project-context-analyzer.ts" URL="src/knowledge/project-context-analyzer.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/project-context-analyzer.ts" -> "src/core/logger.ts"
    "src/knowledge/project-context-analyzer.ts" -> "src/knowledge/knowledge-swarm.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" subgraph "cluster_src/knowledge/storage-backends" {label="storage-backends" "src/knowledge/storage-backends/sqlite-backend.ts" [label=<sqlite-backend.ts> tooltip="sqlite-backend.ts" URL="src/knowledge/storage-backends/sqlite-backend.ts" fillcolor="#ddfeff"] } } }
    "src/knowledge/storage-backends/sqlite-backend.ts" -> "src/config/logging-config.ts"
    "src/knowledge/storage-backends/sqlite-backend.ts" -> "src/database/providers/database-providers.ts"
    "src/knowledge/storage-backends/sqlite-backend.ts" -> "src/database/providers/database-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/knowledge/storage-backends/sqlite-backend.ts" -> "src/knowledge/storage-interface.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/storage-interface.ts" [label=<storage-interface.ts> tooltip="storage-interface.ts" URL="src/knowledge/storage-interface.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" "src/knowledge/test-monorepo-detection.ts" [label=<test-monorepo-detection.ts> tooltip="test-monorepo-detection.ts" URL="src/knowledge/test-monorepo-detection.ts" fillcolor="#ddfeff"] } }
    "src/knowledge/test-monorepo-detection.ts" -> "src/knowledge/project-context-analyzer.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/knowledge" {label="knowledge" subgraph "cluster_src/knowledge/types" {label="types" "src/knowledge/types/fact-types.ts" [label=<fact-types.ts> tooltip="fact-types.ts" URL="src/knowledge/types/fact-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" "src/main.ts" [label=<main.ts> tooltip="main.ts" URL="src/main.ts" fillcolor="#ddfeff"] }
    "src/main.ts" -> "src/config/logging-config.ts"
    "src/main.ts" -> "src/coordination/ai-safety/safety-integration.ts" [style="dashed"]
    "src/main.ts" -> "src/core/di-container.ts"
    "src/main.ts" -> "src/core/process-lifecycle.ts"
    "src/main.ts" -> "src/di/index.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/main.ts" -> "src/interfaces/mcp-stdio/swarm-server.ts" [style="dashed"]
    "src/main.ts" -> "src/interfaces/mcp/start-server.ts" [style="dashed"]
    "src/main.ts" -> "src/interfaces/terminal/index.ts" [style="dashed"]
    "src/main.ts" -> "src/interfaces/web/web-interface.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/backends" {label="backends" "src/memory/backends/base-backend.ts" [label=<base-backend.ts> tooltip="base-backend.ts" URL="src/memory/backends/base-backend.ts" fillcolor="#ddfeff"] } } }
    "src/memory/backends/base-backend.ts" -> "src/memory/providers/memory-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/backends" {label="backends" "src/memory/backends/factory.ts" [label=<factory.ts> tooltip="factory.ts" URL="src/memory/backends/factory.ts" fillcolor="#ddfeff"] } } }
    "src/memory/backends/factory.ts" -> "src/memory/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/backends/factory.ts" -> "src/memory/providers/memory-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/backends/factory.ts" -> "src/memory/backends/base-backend.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/controllers" {label="controllers" "src/memory/controllers/memory-controller.ts" [label=<memory-controller.ts> tooltip="memory-controller.ts" URL="src/memory/controllers/memory-controller.ts" fillcolor="#ddfeff"] } } }
    "src/memory/controllers/memory-controller.ts" -> "src/memory/providers/memory-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/core" {label="core" "src/memory/core/memory-coordinator.ts" [label=<memory-coordinator.ts> tooltip="memory-coordinator.ts" URL="src/memory/core/memory-coordinator.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/core" {label="core" "src/memory/core/memory-system.ts" [label=<memory-system.ts> tooltip="memory-system.ts" URL="src/memory/core/memory-system.ts" fillcolor="#ddfeff"] } } }
    "src/memory/core/memory-system.ts" -> "src/memory/backends/base-backend.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/error-handling" {label="error-handling" "src/memory/error-handling/memory-errors.ts" [label=<memory-errors.ts> tooltip="memory-errors.ts" URL="src/memory/error-handling/memory-errors.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/error-handling" {label="error-handling" "src/memory/error-handling/recovery-strategies.ts" [label=<recovery-strategies.ts> tooltip="recovery-strategies.ts" URL="src/memory/error-handling/recovery-strategies.ts" fillcolor="#ddfeff"] } } }
    "src/memory/error-handling/recovery-strategies.ts" -> "src/memory/backends/base-backend.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/error-handling/recovery-strategies.ts" -> "src/memory/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/error-handling/recovery-strategies.ts" -> "src/memory/error-handling/memory-errors.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" "src/memory/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/memory/index.ts" fillcolor="#ddfeff"] } }
    "src/memory/index.ts" -> "src/memory/backends/base-backend.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/backends/factory.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/core/memory-coordinator.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/core/memory-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/index.ts" -> "src/memory/error-handling/memory-errors.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/error-handling/recovery-strategies.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/mcp/memory-tools.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/memory.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/monitoring/memory-monitor.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/monitoring/memory-monitor.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/index.ts" -> "src/memory/optimization/performance-optimizer.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/optimization/performance-optimizer.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/index.ts" -> "src/memory/types.ts" [arrowhead="inv"]
    "src/memory/index.ts" -> "src/memory/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/mcp" {label="mcp" "src/memory/mcp/memory-tools.ts" [label=<memory-tools.ts> tooltip="memory-tools.ts" URL="src/memory/mcp/memory-tools.ts" fillcolor="#ddfeff"] } } }
    "src/memory/mcp/memory-tools.ts" -> "src/memory/backends/base-backend.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/mcp/memory-tools.ts" -> "src/memory/backends/factory.ts"
    "src/memory/mcp/memory-tools.ts" -> "src/memory/core/memory-coordinator.ts"
    "src/memory/mcp/memory-tools.ts" -> "src/memory/optimization/performance-optimizer.ts"
    "src/memory/mcp/memory-tools.ts" -> "src/memory/providers/memory-providers.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" "src/memory/memory-integration.ts" [label=<memory-integration.ts> tooltip="memory-integration.ts" URL="src/memory/memory-integration.ts" fillcolor="#ddfeff"] } }
    "src/memory/memory-integration.ts" -> "src/core/logger.ts"
    "src/memory/memory-integration.ts" -> "src/database/factory.ts"
    "src/memory/memory-integration.ts" -> "src/database/factory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/memory-integration.ts" -> "src/database/providers/database-providers.ts"
    "src/memory/memory-integration.ts" -> "src/di/container/di-container.ts"
    "src/memory/memory-integration.ts" -> "src/di/tokens/core-tokens.ts"
    "src/memory/memory-integration.ts" -> "src/memory/controllers/memory-controller.ts"
    "src/memory/memory-integration.ts" -> "src/memory/providers/memory-providers.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" "src/memory/memory.ts" [label=<memory.ts> tooltip="memory.ts" URL="src/memory/memory.ts" fillcolor="#ddfeff"] } }
    "src/memory/memory.ts" -> "src/config/logging-config.ts"
    "src/memory/memory.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/memory.ts" -> "src/memory/backends/factory.ts"
    "src/memory/memory.ts" -> "src/memory/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/monitoring" {label="monitoring" "src/memory/monitoring/memory-monitor.ts" [label=<memory-monitor.ts> tooltip="memory-monitor.ts" URL="src/memory/monitoring/memory-monitor.ts" fillcolor="#ddfeff"] } } }
    "src/memory/monitoring/memory-monitor.ts" -> "src/memory/core/memory-coordinator.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/monitoring/memory-monitor.ts" -> "src/memory/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/monitoring/memory-monitor.ts" -> "src/memory/optimization/performance-optimizer.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/optimization" {label="optimization" "src/memory/optimization/performance-optimizer.ts" [label=<performance-optimizer.ts> tooltip="performance-optimizer.ts" URL="src/memory/optimization/performance-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/memory/optimization/performance-optimizer.ts" -> "src/memory/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" subgraph "cluster_src/memory/providers" {label="providers" "src/memory/providers/memory-providers.ts" [label=<memory-providers.ts> tooltip="memory-providers.ts" URL="src/memory/providers/memory-providers.ts" fillcolor="#ddfeff"] } } }
    "src/memory/providers/memory-providers.ts" -> "src/database/factory.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/providers/memory-providers.ts" -> "src/database/interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/providers/memory-providers.ts" -> "src/di/decorators/injectable.ts"
    "src/memory/providers/memory-providers.ts" -> "src/di/tokens/core-tokens.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" "src/memory/safe-memory-store.ts" [label=<safe-memory-store.ts> tooltip="safe-memory-store.ts" URL="src/memory/safe-memory-store.ts" fillcolor="#ddfeff"] } }
    "src/memory/safe-memory-store.ts" -> "src/core/logger.ts"
    "src/memory/safe-memory-store.ts" -> "src/utils/type-guards.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/memory" {label="memory" "src/memory/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/memory/types.ts" fillcolor="#ddfeff"] } }
    "src/memory/types.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/memory/types.ts" -> "src/memory/core/memory-system.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" subgraph "cluster_src/monitoring/analytics" {label="analytics" "src/monitoring/analytics/performance-analyzer.ts" [label=<performance-analyzer.ts> tooltip="performance-analyzer.ts" URL="src/monitoring/analytics/performance-analyzer.ts" fillcolor="#ddfeff"] } } }
    "src/monitoring/analytics/performance-analyzer.ts" -> "src/monitoring/core/metrics-collector.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" subgraph "cluster_src/monitoring/core" {label="core" "src/monitoring/core/metrics-collector.ts" [label=<metrics-collector.ts> tooltip="metrics-collector.ts" URL="src/monitoring/core/metrics-collector.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" subgraph "cluster_src/monitoring/dashboard" {label="dashboard" "src/monitoring/dashboard/dashboard-server.ts" [label=<dashboard-server.ts> tooltip="dashboard-server.ts" URL="src/monitoring/dashboard/dashboard-server.ts" fillcolor="#ddfeff"] } } }
    "src/monitoring/dashboard/dashboard-server.ts" -> "src/config/index.ts"
    "src/monitoring/dashboard/dashboard-server.ts" -> "src/monitoring/analytics/performance-analyzer.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/monitoring/dashboard/dashboard-server.ts" -> "src/monitoring/core/metrics-collector.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/monitoring/dashboard/dashboard-server.ts" -> "src/monitoring/optimization/optimization-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" "src/monitoring/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/monitoring/index.ts" fillcolor="#ddfeff"] } }
    "src/monitoring/index.ts" -> "src/core/logger.ts"
    "src/monitoring/index.ts" -> "src/monitoring/analytics/performance-analyzer.ts" [arrowhead="inv"]
    "src/monitoring/index.ts" -> "src/monitoring/core/metrics-collector.ts" [arrowhead="inv"]
    "src/monitoring/index.ts" -> "src/monitoring/dashboard/dashboard-server.ts" [arrowhead="inv"]
    "src/monitoring/index.ts" -> "src/monitoring/integrations/system-integration.ts"
    "src/monitoring/index.ts" -> "src/monitoring/optimization/optimization-engine.ts" [arrowhead="inv"]
    "src/monitoring/index.ts" -> "src/monitoring/performance/real-time-monitor.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" subgraph "cluster_src/monitoring/integrations" {label="integrations" "src/monitoring/integrations/system-integration.ts" [label=<system-integration.ts> tooltip="system-integration.ts" URL="src/monitoring/integrations/system-integration.ts" fillcolor="#ddfeff"] } } }
    "src/monitoring/integrations/system-integration.ts" -> "src/monitoring/analytics/performance-analyzer.ts"
    "src/monitoring/integrations/system-integration.ts" -> "src/monitoring/core/metrics-collector.ts"
    "src/monitoring/integrations/system-integration.ts" -> "src/monitoring/dashboard/dashboard-server.ts"
    "src/monitoring/integrations/system-integration.ts" -> "src/monitoring/optimization/optimization-engine.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" subgraph "cluster_src/monitoring/optimization" {label="optimization" "src/monitoring/optimization/optimization-engine.ts" [label=<optimization-engine.ts> tooltip="optimization-engine.ts" URL="src/monitoring/optimization/optimization-engine.ts" fillcolor="#ddfeff"] } } }
    "src/monitoring/optimization/optimization-engine.ts" -> "src/monitoring/analytics/performance-analyzer.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/monitoring/optimization/optimization-engine.ts" -> "src/monitoring/core/metrics-collector.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" subgraph "cluster_src/monitoring/performance" {label="performance" "src/monitoring/performance/real-time-monitor.ts" [label=<real-time-monitor.ts> tooltip="real-time-monitor.ts" URL="src/monitoring/performance/real-time-monitor.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/monitoring" {label="monitoring" "src/monitoring/workflow-monitor.ts" [label=<workflow-monitor.ts> tooltip="workflow-monitor.ts" URL="src/monitoring/workflow-monitor.ts" fillcolor="#ddfeff"] } }
    "src/monitoring/workflow-monitor.ts" -> "src/config/memory-optimization.ts"
    "src/monitoring/workflow-monitor.ts" -> "src/config/system-info.ts"
    "src/monitoring/workflow-monitor.ts" -> "src/core/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/agents" {label="agents" "src/neural/agents/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/agents/index.ts" fillcolor="#ddfeff"] } } }
    "src/neural/agents/index.ts" -> "src/neural/agents/neural-agent.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/agents" {label="agents" "src/neural/agents/neural-agent.ts" [label=<neural-agent.ts> tooltip="neural-agent.ts" URL="src/neural/agents/neural-agent.ts" fillcolor="#ddfeff"] } } }
    "src/neural/agents/neural-agent.ts" -> "src/memory/optimization/performance-optimizer.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/neural/agents/neural-agent.ts" -> "src/neural/core/network.ts" [style="dashed"]
    "src/neural/agents/neural-agent.ts" -> "src/neural/core/neural.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/api.ts" [label=<api.ts> tooltip="api.ts" URL="src/neural/api.ts" fillcolor="#ddfeff"] } }
    "src/neural/api.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/neural/api.ts" -> "src/neural/models/presets/neural-presets-complete.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/coordination" {label="coordination" "src/neural/coordination/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/coordination/index.ts" fillcolor="#ddfeff"] } } }
    "src/neural/coordination/index.ts" -> "src/neural/coordination/neural-coordination-protocol.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/coordination" {label="coordination" "src/neural/coordination/neural-coordination-protocol.ts" [label=<neural-coordination-protocol.ts> tooltip="neural-coordination-protocol.ts" URL="src/neural/coordination/neural-coordination-protocol.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/cognitive-pattern-evolution.ts" [label=<cognitive-pattern-evolution.ts> tooltip="cognitive-pattern-evolution.ts" URL="src/neural/core/cognitive-pattern-evolution.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/daa-cognition.ts" [label=<daa-cognition.ts> tooltip="daa-cognition.ts" URL="src/neural/core/daa-cognition.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/core/index.ts" fillcolor="#ddfeff"] } } }
    "src/neural/core/index.ts" -> "src/neural/core/network.ts" [arrowhead="inv"]
    "src/neural/core/index.ts" -> "src/neural/core/network.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/neural/core/index.ts" -> "src/neural/core/neural-core.ts" [arrowhead="inv"]
    "src/neural/core/index.ts" -> "src/neural/core/neural-network-manager.ts" [arrowhead="inv"]
    "src/neural/core/index.ts" -> "src/neural/core/neural-network.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/meta-learning-framework.ts" [label=<meta-learning-framework.ts> tooltip="meta-learning-framework.ts" URL="src/neural/core/meta-learning-framework.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/network.ts" [label=<network.ts> tooltip="network.ts" URL="src/neural/core/network.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/neural-coordination-protocol.ts" [label=<neural-coordination-protocol.ts> tooltip="neural-coordination-protocol.ts" URL="src/neural/core/neural-coordination-protocol.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/neural-core.ts" [label=<neural-core.ts> tooltip="neural-core.ts" URL="src/neural/core/neural-core.ts" fillcolor="#ddfeff"] } } }
    "src/neural/core/neural-core.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" subgraph "cluster_src/neural/core/neural-models" {label="neural-models" "src/neural/core/neural-models/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/core/neural-models/index.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" subgraph "cluster_src/neural/core/neural-models" {label="neural-models" "src/neural/core/neural-models/neural-presets-complete.ts" [label=<neural-presets-complete.ts> tooltip="neural-presets-complete.ts" URL="src/neural/core/neural-models/neural-presets-complete.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" subgraph "cluster_src/neural/core/neural-models" {label="neural-models" subgraph "cluster_src/neural/core/neural-models/presets" {label="presets" "src/neural/core/neural-models/presets/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/core/neural-models/presets/index.ts" fillcolor="#ddfeff"] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/neural-network-manager.ts" [label=<neural-network-manager.ts> tooltip="neural-network-manager.ts" URL="src/neural/core/neural-network-manager.ts" fillcolor="#ddfeff"] } } }
    "src/neural/core/neural-network-manager.ts" -> "src/config/logging-config.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/cognitive-pattern-evolution.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/daa-cognition.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/meta-learning-framework.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/neural-coordination-protocol.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/neural-models/index.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/neural-models/neural-presets-complete.ts"
    "src/neural/core/neural-network-manager.ts" -> "src/neural/core/neural-models/presets/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/neural-network.ts" [label=<neural-network.ts> tooltip="neural-network.ts" URL="src/neural/core/neural-network.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/core" {label="core" "src/neural/core/neural.ts" [label=<neural.ts> tooltip="neural.ts" URL="src/neural/core/neural.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/dspy-wrapper.ts" [label=<dspy-wrapper.ts> tooltip="dspy-wrapper.ts" URL="src/neural/dspy-wrapper.ts" fillcolor="#ddfeff"] } }
    "src/neural/dspy-wrapper.ts" -> "src/config/logging-config.ts"
    "src/neural/dspy-wrapper.ts" -> "src/neural/types/index.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/gnn-dspy-typescript-analyzer.ts" [label=<gnn-dspy-typescript-analyzer.ts> tooltip="gnn-dspy-typescript-analyzer.ts" URL="src/neural/gnn-dspy-typescript-analyzer.ts" fillcolor="#ddfeff"] } }
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/config/logging-config.ts"
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/coordination/discovery/neural-domain-mapper.ts"
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/coordination/services/llm-integration.service.ts"
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/neural/dspy-wrapper.ts"
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/neural/models/presets/gnn.js"
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/neural/gnn-dspy-typescript-analyzer.ts" -> "src/neural/wasm/wasm-neural-accelerator.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/index.ts" fillcolor="#ddfeff"] } }
    "src/neural/index.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/neural/index.ts" -> "src/neural/agents/index.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/core/index.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/dspy-wrapper.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/models/index.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/neural-bridge.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/public-api.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/types.ts" [arrowhead="inv"]
    "src/neural/index.ts" -> "src/neural/types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" "src/neural/models/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/models/index.ts" fillcolor="#ddfeff"] } } }
    "src/neural/models/index.ts" -> "src/neural/models/presets/neural-presets-complete.js" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/autoencoder.js" [label=<autoencoder.js> tooltip="autoencoder.js" URL="src/neural/models/presets/autoencoder.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/cnn.js" [label=<cnn.js> tooltip="cnn.js" URL="src/neural/models/presets/cnn.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/gnn.js" [label=<gnn.js> tooltip="gnn.js" URL="src/neural/models/presets/gnn.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/gru.js" [label=<gru.js> tooltip="gru.js" URL="src/neural/models/presets/gru.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/index.js" [label=<index.js> tooltip="index.js" URL="src/neural/models/presets/index.js" ] } } } }
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/autoencoder.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/cnn.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/gnn.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/gru.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/lstm.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/resnet.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/transformer.js" [arrowhead="inv"]
    "src/neural/models/presets/index.js" -> "src/neural/models/presets/vae.js" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/lstm.js" [label=<lstm.js> tooltip="lstm.js" URL="src/neural/models/presets/lstm.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/neural-presets-complete.js" [label=<neural-presets-complete.js> tooltip="neural-presets-complete.js" URL="src/neural/models/presets/neural-presets-complete.js" ] } } } }
    "src/neural/models/presets/neural-presets-complete.js" -> "src/neural/core/cognitive-pattern-evolution.ts"
    "src/neural/models/presets/neural-presets-complete.js" -> "src/neural/core/meta-learning-framework.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" subgraph "cluster_src/neural/models/presets/presets" {label="presets" "src/neural/models/presets/presets/graph.js" [label=<graph.js> tooltip="graph.js" URL="src/neural/models/presets/presets/graph.js" ] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" subgraph "cluster_src/neural/models/presets/presets" {label="presets" "src/neural/models/presets/presets/index.js" [label=<index.js> tooltip="index.js" URL="src/neural/models/presets/presets/index.js" ] } } } } }
    "src/neural/models/presets/presets/index.js" -> "src/neural/models/presets/presets/graph.js"
    "src/neural/models/presets/presets/index.js" -> "src/neural/models/presets/presets/nlp.js"
    "src/neural/models/presets/presets/index.js" -> "src/neural/models/presets/presets/timeseries.js"
    "src/neural/models/presets/presets/index.js" -> "src/neural/models/presets/presets/vision.js"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" subgraph "cluster_src/neural/models/presets/presets" {label="presets" "src/neural/models/presets/presets/nlp.js" [label=<nlp.js> tooltip="nlp.js" URL="src/neural/models/presets/presets/nlp.js" ] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" subgraph "cluster_src/neural/models/presets/presets" {label="presets" "src/neural/models/presets/presets/timeseries.js" [label=<timeseries.js> tooltip="timeseries.js" URL="src/neural/models/presets/presets/timeseries.js" ] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" subgraph "cluster_src/neural/models/presets/presets" {label="presets" "src/neural/models/presets/presets/vision.js" [label=<vision.js> tooltip="vision.js" URL="src/neural/models/presets/presets/vision.js" ] } } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/resnet.js" [label=<resnet.js> tooltip="resnet.js" URL="src/neural/models/presets/resnet.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/transformer.js" [label=<transformer.js> tooltip="transformer.js" URL="src/neural/models/presets/transformer.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/models" {label="models" subgraph "cluster_src/neural/models/presets" {label="presets" "src/neural/models/presets/vae.js" [label=<vae.js> tooltip="vae.js" URL="src/neural/models/presets/vae.js" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/neural-bridge.ts" [label=<neural-bridge.ts> tooltip="neural-bridge.ts" URL="src/neural/neural-bridge.ts" fillcolor="#ddfeff"] } }
    "src/neural/neural-bridge.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/property-test-standalone" {label="property-test-standalone" "src/neural/property-test-standalone/test-typescript-properties.js" [label=<test-typescript-properties.js> tooltip="no-orphans" URL="src/neural/property-test-standalone/test-typescript-properties.js" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/public-api.ts" [label=<public-api.ts> tooltip="public-api.ts" URL="src/neural/public-api.ts" fillcolor="#ddfeff"] } }
    "src/neural/public-api.ts" -> "src/neural/wasm/wasm-neural-accelerator.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/safe-neural-network.ts" [label=<safe-neural-network.ts> tooltip="safe-neural-network.ts" URL="src/neural/safe-neural-network.ts" fillcolor="#ddfeff"] } }
    "src/neural/safe-neural-network.ts" -> "src/core/logger.ts"
    "src/neural/safe-neural-network.ts" -> "src/utils/type-guards.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" "src/neural/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/neural/types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/types" {label="types" "src/neural/types/dspy-types.ts" [label=<dspy-types.ts> tooltip="dspy-types.ts" URL="src/neural/types/dspy-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/types" {label="types" "src/neural/types/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/types/index.ts" fillcolor="#ddfeff"] } } }
    "src/neural/types/index.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="inv"]
    "src/neural/types/index.ts" -> "src/neural/types/dspy-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/neural/types/index.ts" -> "src/neural/types/wasm-types.ts" [arrowhead="inv"]
    "src/neural/types/index.ts" -> "src/neural/types/wasm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/types" {label="types" "src/neural/types/wasm-types.ts" [label=<wasm-types.ts> tooltip="wasm-types.ts" URL="src/neural/types/wasm-types.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" subgraph "cluster_src/neural/wasm/binaries" {label="binaries" "src/neural/wasm/binaries/wasm-bindings-loader.mjs" [label=<wasm-bindings-loader.mjs> tooltip="wasm-bindings-loader.mjs" URL="src/neural/wasm/binaries/wasm-bindings-loader.mjs" ] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/gateway.ts" [label=<gateway.ts> tooltip="gateway.ts" URL="src/neural/wasm/gateway.ts" fillcolor="#ddfeff"] } } }
    "src/neural/wasm/gateway.ts" -> "src/neural/wasm/wasm-loader.ts"
    "src/neural/wasm/gateway.ts" -> "src/neural/wasm/wasm-memory-optimizer.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/neural/wasm/index.ts" fillcolor="#ddfeff"] } } }
    "src/neural/wasm/index.ts" -> "src/neural/wasm/binaries/wasm-bindings-loader.mjs" [arrowhead="inv"]
    "src/neural/wasm/index.ts" -> "src/neural/wasm/gateway.ts" [arrowhead="inv"]
    "src/neural/wasm/index.ts" -> "src/neural/wasm/wasm-compat.ts" [arrowhead="inv"]
    "src/neural/wasm/index.ts" -> "src/neural/wasm/wasm-loader.ts" [arrowhead="inv"]
    "src/neural/wasm/index.ts" -> "src/neural/wasm/wasm-memory-optimizer.ts" [arrowhead="inv"]
    "src/neural/wasm/index.ts" -> "src/neural/wasm/wasm-neural-accelerator.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/wasm-compat.ts" [label=<wasm-compat.ts> tooltip="wasm-compat.ts" URL="src/neural/wasm/wasm-compat.ts" fillcolor="#ddfeff"] } } }
    "src/neural/wasm/wasm-compat.ts" -> "src/neural/wasm/gateway.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/wasm-loader.ts" [label=<wasm-loader.ts> tooltip="wasm-loader.ts" URL="src/neural/wasm/wasm-loader.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/wasm-loader2.ts" [label=<wasm-loader2.ts> tooltip="wasm-loader2.ts" URL="src/neural/wasm/wasm-loader2.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/wasm-memory-optimizer.js" [label=<wasm-memory-optimizer.js> tooltip="no-orphans" URL="src/neural/wasm/wasm-memory-optimizer.js" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/wasm-memory-optimizer.ts" [label=<wasm-memory-optimizer.ts> tooltip="wasm-memory-optimizer.ts" URL="src/neural/wasm/wasm-memory-optimizer.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/neural" {label="neural" subgraph "cluster_src/neural/wasm" {label="wasm" "src/neural/wasm/wasm-neural-accelerator.ts" [label=<wasm-neural-accelerator.ts> tooltip="wasm-neural-accelerator.ts" URL="src/neural/wasm/wasm-neural-accelerator.ts" fillcolor="#ddfeff"] } } }
    "src/neural/wasm/wasm-neural-accelerator.ts" -> "src/config/logging-config.ts"
    "src/neural/wasm/wasm-neural-accelerator.ts" -> "src/neural/types/wasm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/benchmarks" {label="benchmarks" "src/optimization/benchmarks/performance-benchmarks.ts" [label=<performance-benchmarks.ts> tooltip="performance-benchmarks.ts" URL="src/optimization/benchmarks/performance-benchmarks.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/benchmarks/performance-benchmarks.ts" -> "src/optimization/interfaces/optimization-interfaces.ts"
    "src/optimization/benchmarks/performance-benchmarks.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/core" {label="core" "src/optimization/core/performance-optimizer.ts" [label=<performance-optimizer.ts> tooltip="performance-optimizer.ts" URL="src/optimization/core/performance-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/core/performance-optimizer.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/data" {label="data" "src/optimization/data/data-optimizer.ts" [label=<data-optimizer.ts> tooltip="data-optimizer.ts" URL="src/optimization/data/data-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/data/data-optimizer.ts" -> "src/config/logging-config.ts"
    "src/optimization/data/data-optimizer.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" "src/optimization/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/optimization/index.ts" fillcolor="#ddfeff"] } }
    "src/optimization/index.ts" -> "src/optimization/benchmarks/performance-benchmarks.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/core/performance-optimizer.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/data/data-optimizer.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/monitoring/optimization-monitor.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/neural/neural-optimizer.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/swarm/swarm-optimizer.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/types.ts" [arrowhead="inv"]
    "src/optimization/index.ts" -> "src/optimization/wasm/wasm-optimizer.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/interfaces" {label="interfaces" "src/optimization/interfaces/optimization-interfaces.ts" [label=<optimization-interfaces.ts> tooltip="optimization-interfaces.ts" URL="src/optimization/interfaces/optimization-interfaces.ts" fillcolor="#ddfeff"] } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/monitoring" {label="monitoring" "src/optimization/monitoring/optimization-monitor.ts" [label=<optimization-monitor.ts> tooltip="optimization-monitor.ts" URL="src/optimization/monitoring/optimization-monitor.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/monitoring/optimization-monitor.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/neural" {label="neural" "src/optimization/neural/neural-optimizer.ts" [label=<neural-optimizer.ts> tooltip="neural-optimizer.ts" URL="src/optimization/neural/neural-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/neural/neural-optimizer.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/swarm" {label="swarm" "src/optimization/swarm/swarm-optimizer.ts" [label=<swarm-optimizer.ts> tooltip="swarm-optimizer.ts" URL="src/optimization/swarm/swarm-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/swarm/swarm-optimizer.ts" -> "src/config/logging-config.ts"
    "src/optimization/swarm/swarm-optimizer.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" "src/optimization/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/optimization/types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/optimization" {label="optimization" subgraph "cluster_src/optimization/wasm" {label="wasm" "src/optimization/wasm/wasm-optimizer.ts" [label=<wasm-optimizer.ts> tooltip="wasm-optimizer.ts" URL="src/optimization/wasm/wasm-optimizer.ts" fillcolor="#ddfeff"] } } }
    "src/optimization/wasm/wasm-optimizer.ts" -> "src/config/logging-config.ts"
    "src/optimization/wasm/wasm-optimizer.ts" -> "src/optimization/interfaces/optimization-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/parsers" {label="parsers" "src/parsers/beam-language-parser.ts" [label=<beam-language-parser.ts> tooltip="beam-language-parser.ts" URL="src/parsers/beam-language-parser.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/services" {label="services" subgraph "cluster_src/services/coordination" {label="coordination" "src/services/coordination/swarm-service.ts" [label=<swarm-service.ts> tooltip="swarm-service.ts" URL="src/services/coordination/swarm-service.ts" fillcolor="#ddfeff"] } } }
    "src/services/coordination/swarm-service.ts" -> "src/config/logging-config.ts"
    "src/services/coordination/swarm-service.ts" -> "src/types/swarm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" "src/sparc-architecture-cli.ts" [label=<sparc-architecture-cli.ts> tooltip="sparc-architecture-cli.ts" URL="src/sparc-architecture-cli.ts" fillcolor="#ddfeff"] }
    "src/sparc-architecture-cli.ts" -> "src/config/logging-config.ts"
    "src/sparc-architecture-cli.ts" -> "src/coordination/swarm/sparc/phases/architecture/architecture-engine.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" "src/sparc-pseudocode-cli.ts" [label=<sparc-pseudocode-cli.ts> tooltip="sparc-pseudocode-cli.ts" URL="src/sparc-pseudocode-cli.ts" fillcolor="#ddfeff"] }
    "src/sparc-pseudocode-cli.ts" -> "src/config/logging-config.ts"
    "src/sparc-pseudocode-cli.ts" -> "src/coordination/swarm/sparc/phases/pseudocode/pseudocode-engine.ts" [style="dashed"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/tools" {label="tools" subgraph "cluster_src/tools/domain-splitting" {label="domain-splitting" subgraph "cluster_src/tools/domain-splitting/analyzers" {label="analyzers" "src/tools/domain-splitting/analyzers/domain-analyzer.ts" [label=<domain-analyzer.ts> tooltip="domain-analyzer.ts" URL="src/tools/domain-splitting/analyzers/domain-analyzer.ts" fillcolor="#ddfeff"] } } } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/agent-types.ts" [label=<agent-types.ts> tooltip="agent-types.ts" URL="src/types/agent-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/client-types.ts" [label=<client-types.ts> tooltip="client-types.ts" URL="src/types/client-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/conversation-types.ts" [label=<conversation-types.ts> tooltip="conversation-types.ts" URL="src/types/conversation-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/event-types.ts" [label=<event-types.ts> tooltip="event-types.ts" URL="src/types/event-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/events-types.ts" [label=<events-types.ts> tooltip="events-types.ts" URL="src/types/events-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/types/index.ts" fillcolor="#ddfeff"] } }
    "src/types/index.ts" -> "src/neural/types/wasm-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/types/index.ts" -> "src/utils/type-guards.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/agent-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/types/index.ts" -> "src/types/client-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/conversation-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/events-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/knowledge-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/mcp-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/neural-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/protocol-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/services-types.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/types/index.ts" -> "src/types/shared-types.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/types/index.ts" -> "src/types/singletons.ts" [arrowhead="inv"]
    "src/types/index.ts" -> "src/types/workflow-types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/knowledge-types.ts" [label=<knowledge-types.ts> tooltip="knowledge-types.ts" URL="src/types/knowledge-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/mcp-types.ts" [label=<mcp-types.ts> tooltip="mcp-types.ts" URL="src/types/mcp-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/neural-types.ts" [label=<neural-types.ts> tooltip="neural-types.ts" URL="src/types/neural-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/protocol-types.ts" [label=<protocol-types.ts> tooltip="protocol-types.ts" URL="src/types/protocol-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/queen-types.ts" [label=<queen-types.ts> tooltip="no-orphans" URL="src/types/queen-types.ts" fillcolor="#ccffcc" fontcolor="orange" color="orange"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/services-types.ts" [label=<services-types.ts> tooltip="services-types.ts" URL="src/types/services-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/shared-types.ts" [label=<shared-types.ts> tooltip="shared-types.ts" URL="src/types/shared-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/singletons.ts" [label=<singletons.ts> tooltip="singletons.ts" URL="src/types/singletons.ts" fillcolor="#ddfeff"] } }
    "src/types/singletons.ts" -> "src/types/client-types.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/swarm-types.ts" [label=<swarm-types.ts> tooltip="swarm-types.ts" URL="src/types/swarm-types.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/task-types.ts" [label=<task-types.ts> tooltip="task-types.ts" URL="src/types/task-types.ts" fillcolor="#ddfeff"] } }
    "src/types/task-types.ts" -> "src/types/shared-types.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/types" {label="types" "src/types/workflow-types.ts" [label=<workflow-types.ts> tooltip="workflow-types.ts" URL="src/types/workflow-types.ts" fillcolor="#ddfeff"] } }
    "src/types/workflow-types.ts" -> "src/workflows/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/agent-gap-analysis.ts" [label=<agent-gap-analysis.ts> tooltip="agent-gap-analysis.ts" URL="src/utils/agent-gap-analysis.ts" fillcolor="#ddfeff"] } }
    "src/utils/agent-gap-analysis.ts" -> "src/utils/logger.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/environment-detector.ts" [label=<environment-detector.ts> tooltip="environment-detector.ts" URL="src/utils/environment-detector.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/error-monitoring.ts" [label=<error-monitoring.ts> tooltip="error-monitoring.ts" URL="src/utils/error-monitoring.ts" fillcolor="#ddfeff"] } }
    "src/utils/error-monitoring.ts" -> "src/core/interfaces/base-interfaces.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/error-recovery.ts" [label=<error-recovery.ts> tooltip="error-recovery.ts" URL="src/utils/error-recovery.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/utils/index.ts" fillcolor="#ddfeff"] } }
    "src/utils/index.ts" -> "src/core/logger.ts" [arrowhead="inv"]
    "src/utils/index.ts" -> "src/core/logger.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/utils/index.ts" -> "src/utils/error-monitoring.ts" [arrowhead="inv"]
    "src/utils/index.ts" -> "src/utils/error-recovery.ts" [arrowhead="inv"]
    "src/utils/index.ts" -> "src/utils/type-guards.ts" [arrowhead="inv"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/logger.ts" [label=<logger.ts> tooltip="logger.ts" URL="src/utils/logger.ts" fillcolor="#ddfeff"] } }
    "src/utils/logger.ts" -> "src/config/index.ts"
    "src/utils/logger.ts" -> "src/config/logging-config.ts"
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/logging-config.js" [label=<logging-config.js> tooltip="logging-config.js" URL="src/utils/logging-config.js" ] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/nix-integration.ts" [label=<nix-integration.ts> tooltip="nix-integration.ts" URL="src/utils/nix-integration.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/type-guards.ts" [label=<type-guards.ts> tooltip="type-guards.ts" URL="src/utils/type-guards.ts" fillcolor="#ddfeff"] } }
    subgraph "cluster_src" {label="src" subgraph "cluster_src/utils" {label="utils" "src/utils/workspace-fact-system.ts" [label=<workspace-fact-system.ts> tooltip="workspace-fact-system.ts" URL="src/utils/workspace-fact-system.ts" fillcolor="#ddfeff"] } }
    "src/utils/workspace-fact-system.ts" -> "src/fact-integration/rust-fact-bridge.ts" [style="dashed"]
    "src/utils/workspace-fact-system.ts" -> "src/utils/environment-detector.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" "src/verify-sparc-architecture.js" [label=<verify-sparc-architecture.js> tooltip="verify-sparc-architecture.js" URL="src/verify-sparc-architecture.js" ] }
    "src/verify-sparc-architecture.js" -> "src/coordination/swarm/sparc/mcp/architecture-tools.ts"
    "src/verify-sparc-architecture.js" -> "src/coordination/swarm/sparc/phases/architecture/database-driven-architecture-engine.ts"
    subgraph "cluster_src" {label="src" "src/wasm-loader.cjs" [label=<wasm-loader.cjs> tooltip="wasm-loader.cjs" URL="src/wasm-loader.cjs" ] }
    "src/wasm-loader.cjs" -> "src/neural/wasm/wasm-compat.ts" [xlabel="neural-wasm-isolation" tooltip="neural-wasm-isolation" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" "src/wasm-memory-optimizer.js" [label=<wasm-memory-optimizer.js> tooltip="wasm-memory-optimizer.js" URL="src/wasm-memory-optimizer.js" ] }
    "src/wasm-memory-optimizer.js" -> "src/neural/wasm/wasm-compat.ts" [xlabel="neural-wasm-isolation" tooltip="neural-wasm-isolation" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/workflows" {label="workflows" "src/workflows/engine.ts" [label=<engine.ts> tooltip="engine.ts" URL="src/workflows/engine.ts" fillcolor="#ddfeff"] } }
    "src/workflows/engine.ts" -> "src/config/logging-config.ts"
    "src/workflows/engine.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/workflows/engine.ts" -> "src/database/managers/document-manager.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/workflows/engine.ts" -> "src/memory/index.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/workflows" {label="workflows" "src/workflows/index.ts" [label=<index.ts> tooltip="index.ts" URL="src/workflows/index.ts" fillcolor="#ddfeff"] } }
    "src/workflows/index.ts" -> "src/workflows/workflow-engine.ts"
    "src/workflows/index.ts" -> "src/workflows/workflow-engine.ts" [arrowhead="onormal" penwidth="1.0"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/workflows" {label="workflows" "src/workflows/types.ts" [label=<types.ts> tooltip="types.ts" URL="src/workflows/types.ts" fillcolor="#ddfeff"] } }
    "src/workflows/types.ts" -> "src/workflows/workflow-engine.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    subgraph "cluster_src" {label="src" subgraph "cluster_src/workflows" {label="workflows" "src/workflows/workflow-engine.ts" [label=<workflow-engine.ts> tooltip="workflow-engine.ts" URL="src/workflows/workflow-engine.ts" fillcolor="#ddfeff"] } }
    "src/workflows/workflow-engine.ts" -> "src/config/logging-config.ts"
    "src/workflows/workflow-engine.ts" -> "src/coordination/orchestration/workflow-gates.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/workflows/workflow-engine.ts" -> "src/coordination/workflows/workflow-gate-request.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/workflows/workflow-engine.ts" -> "src/database/entities/product-entities.ts" [arrowhead="onormal" penwidth="1.0"]
    "src/workflows/workflow-engine.ts" -> "src/database/managers/document-manager.ts" [xlabel="no-circular" tooltip="no-circular" arrowhead="normalnoneodot" penwidth="1.0" fontcolor="orange" color="orange"]
    "src/workflows/workflow-engine.ts" -> "src/memory/index.ts" [arrowhead="onormal" penwidth="1.0"]
}
