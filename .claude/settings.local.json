{
  "permissions": {
    "allow": [
      "Bash(deno cache:*)",
      "Bash(deno task:*)",
      "Bash(deno test:*)",
      "Bash(./scripts/test-runner.ts:*)",
      "Bash(grep:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(gh repo fork:*)",
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(deno compile:*)",
      "Bash(deno run:*)",
      "Bash(git for-each-ref:*)",
      "Bash(git stash:*)",
      "Bash(npm install)",
      "Bash(git fetch:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(mise list:*)",
      "Bash(mise exec deno:*)",
      "Bash(./bin/claude-flow:*)",
      "Bash(mise use:*)",
      "Bash(RUST_MIN_STACK=8388608 mise exec deno -- deno compile --allow-all --no-check --output bin/claude-flow-stack-test src/cli/main.ts)",
      "Bash(claude-flow --version)",
      "Bash(md5sum:*)",
      "Bash(claude-flow:*)",
      "Bash(find:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.roocode.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(git clone:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(git -C /home/mhugo/code/architecturemcp status --short)",
      "Bash(git -C /home/mhugo/code/architecturemcp commit -m \"ðŸš€ Major GenAIScript implementation: SPARC-2 agents, reflection, DR system\n\n- Implemented complete SPARC-2 squad agents (spec, pseudocode, architecture, implementation, quality)\n- Added reflection-enabled orchestration with continuous improvement\n- Created unified Decision Record (*DR) system with approval workflow\n- Implemented session-based orchestrator with context isolation\n- Added multi-expert consultation and CrewAI integration\n- Created Git manager and GitHub PR reviewer agents\n- Migrated TypeScript patterns to GenAIScript\n- Deleted obsolete TypeScript files and tests\n- Applied Elixir/Erlang best practices throughout\")",
      "Bash(git -C /home/mhugo/code/architecturemcp push origin main)",
      "Bash(git -C /home/mhugo/code/architecturemcp status --porcelain)",
      "Bash(git -C /home/mhugo/code/architecturemcp/themes/creative-tim clone https://github.com/creativetimofficial/notus-react.git)",
      "Bash(git -C /home/mhugo/code/architecturemcp/themes/creative-tim clone https://github.com/creativetimofficial/notus-vue.git)",
      "Bash(git -C /home/mhugo/code/architecturemcp/themes/creative-tim clone https://github.com/creativetimofficial/notus-angular.git)",
      "Bash(/home/mhugo/code/architecturemcp/themes/creative-tim/setup-singularity-branches.sh:*)",
      "Bash(git -C /home/mhugo/code/singularity-design-system init)",
      "Bash(git -C /home/mhugo/code/singularity-design-system add -A)",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Initial Singularity Design System\n\n- AI-first design system for agent supervision interfaces\n- Based on Notus Design System with extensive enhancements\n- Multi-framework support (React, NextJS, Angular, Dioxus)\n- Comprehensive AI usage documentation\n- Real-time monitoring components\n- Erlang/OTP supervision patterns\n\nðŸ¤– Built for AI agents building AI agent interfaces\")",
      "Bash(cp:*)",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Complete Singularity Design System with base and extended components\n\n- Copied all Notus components to /base/\n- Created extended AI-focused components in /extended/\n- Added comprehensive LLM documentation (llms.txt and llms-file-index.txt)\n- Organized structure to prevent conflicts\n- Clear separation between base UI and AI-specific components\n\nðŸ¤– Ready for AI agents to build agent supervision interfaces\")",
      "Bash(ln:*)",
      "Bash(npm:*)",
      "Bash(chmod:*)",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Add comprehensive visual regression testing\n\n- GitHub Actions for automated visual regression tests\n- Playwright tests for Tailwind 2 vs 3 comparisons\n- Local validation scripts\n- Component validation workflows\n- Tailwind compatibility checks\n- Screenshot comparison with pixelmatch\n\nVisual tests will:\n- Capture components with Tailwind 2 and 3\n- Compare screenshots automatically\n- Fail PRs if visual differences > 5%\n- Upload diff images as artifacts\n- Comment on PRs with migration tips\")",
      "Bash(git -C /home/mhugo/code/singularity-design-system add .github/dependabot.yml)",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Configure Dependabot for security alerts only\n\n- Security vulnerabilities will be reported\n- Alerts visible in Security tab\n- NO automatic PRs (open-pull-requests-limit: 0)\n- Can manually create PRs when ready\n- Added labels for visual-regression-needed\n\nThis way we get security warnings without breaking changes\")",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Implement zero tolerance policy for all warnings\n\n- Zero warnings accepted (ESLint, TypeScript, build)\n- Zero TODO/FIXME comments allowed\n- Never suppress - always fix root cause\n- Strict ESLint and TypeScript configs\n- Pre-commit hooks enforce policy\n- GitHub Actions fail on any warning\n- Comprehensive policy documentation\n\nActive resolution required for inherited issues\")",
      "Bash(git -C /home/mhugo/code/singularity-design-system push origin main)",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Pragmatic warning resolution workflow\n\n- Warnings allowed but actively tracked\n- Work on branches until clean\n- Pre-commit warns but doesn''t block\n- GitHub Actions report but don''t fail (except security)\n- Added branch cleanup workflow\n- Helper scripts for creating cleanup branches\n- Progress tracking tools\n\nPhilosophy: Progress over perfection, but always progressing\")",
      "Bash(git -C /home/mhugo/code/singularity-design-system log --oneline -5)",
      "Bash(git -C /home/mhugo/code/singularity-design-system status)",
      "Bash(git -C /home/mhugo/code/singularity-design-system add .)",
      "Bash(git -C /home/mhugo/code/singularity-design-system push)",
      "Bash(gh api:*)",
      "Bash(git -C /home/mhugo/code/singularity-design-system add .github/workflows/build-and-deploy.yml)",
      "Bash(git -C /home/mhugo/code/singularity-design-system commit -m \"feat: Add private GitHub Pages deployment\n\n- Auto-build component showcase on component changes\n- Private deployment for internal testing and demos\n- Include documentation and transparency dashboard\n- Deploy to: https://mikkihugo.github.io/singularity-design-system/\n\nðŸ”’ Private Pages enabled for maintainers only\n\nðŸ¤– Generated with Claude Code\")",
      "Bash(gh run list:*)",
      "Bash(gh workflow run:*)",
      "WebFetch(domain:demos.creative-tim.com)",
      "WebFetch(domain:www.creative-tim.com)",
      "WebFetch(domain:tanstack.com)",
      "Bash(git rebase:*)",
      "mcp__claude-flow__swarm_init"
    ],
    "deny": []
  }
}