{
  "env": {
    "CLAUDE_ZEN_AUTO_COMMIT": "false",
    "CLAUDE_ZEN_AUTO_PUSH": "false", 
    "CLAUDE_ZEN_HOOKS_ENABLED": "true",
    "CLAUDE_ZEN_TELEMETRY_ENABLED": "true",
    "CLAUDE_ZEN_REMOTE_EXECUTION": "true",
    "CLAUDE_ZEN_GITHUB_INTEGRATION": "true"
  },
  "permissions": {
    "allow": [
      "Bash(npx claude-zen *)",
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(npm test *)",
      "Bash(git status)",
      "Bash(git diff *)",
      "Bash(git log *)",
      "Bash(git add *)",
      "Bash(git commit *)",
      "Bash(git push)",
      "Bash(git config *)",
      "Bash(node *)",
      "Bash(which *)",
      "Bash(pwd)",
      "Bash(ls *)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(curl * | bash)",
      "Bash(wget * | sh)",
      "Bash(eval *)"
    ]
  },
  "hooks": {
    "tool_call": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "comment": "Enhanced hook quote handling - uses jq|tr|xargs pipeline for reliability",
            "command": "jq -r '\"\\(.tool_input.command) - \\(.tool_input.description // \"No description\")\"' >> ~/.claude/bash-command-log.txt"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command", 
            "comment": "Reliable file path extraction with proper escaping",
            "command": "jq -r '\"Editing file: \\(.tool_input.file_path // .tool_input.path // \"unknown\") at \\(now | strftime(\"%Y-%m-%d %H:%M:%S\"))\"' >> ~/.claude/edit-log.txt"
          }
        ]
      }
    ],
    "tool_result": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "comment": "Post-command tracking with enhanced reliability",
            "command": "jq -r '\"Command completed: \\(.tool_input.command // \"unknown\") - Exit code: \\(.tool_output.exit_code // \"N/A\")\"' >> ~/.claude/bash-command-log.txt"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "comment": "Post-edit processing with memory storage and formatting",
            "command": "jq -r '.tool_input.file_path // .tool_input.path' | { read file_path; echo \"File edited: $file_path at $(date)\" >> ~/.claude/edit-log.txt; if echo \"$file_path\" | grep -q '\\.(js\\|ts\\|json)$'; then npx prettier --write \"$file_path\" 2>/dev/null || true; fi; }"
          }
        ]
      }
    ],
    "session_end": [
      {
        "hooks": [
          {
            "type": "command",
            "comment": "Session summary with metrics export",
            "command": "echo \"Session ended at $(date)\" >> ~/.claude/session-log.txt"
          }
        ]
      }
    ]
  },
  "mcpServers": {
    "ruv-swarm": {
      "command": "npx",
      "args": [
        "ruv-swarm",
        "mcp",
        "start"
      ],
      "env": {
        "RUV_SWARM_HOOKS_ENABLED": "true", 
        "RUV_SWARM_TELEMETRY_ENABLED": "true",
        "RUV_SWARM_REMOTE_READY": "true"
      }
    }
  },
  "includeCoAuthoredBy": true
}