{"version":3,"names":["BaseCommand","SwarmCommand","constructor","cov_2i5h33q89v","f","s","name","description","usage","category","minArgs","examples","run","context","subcommand","args","b","success","error","exitCode","message","getHelp"],"sources":["/home/mhugo/code/claude-code-flow/src/cli/commands/swarm/swarm-command.ts"],"sourcesContent":["/**\n * Base Swarm Command Implementation\n * \n * Base command for all swarm-related operations\n */\n\nimport { BaseCommand } from '../../core/base-command.js';\nimport type { CommandContext, CommandResult } from '../../types/index.js';\n\nexport class SwarmCommand extends BaseCommand {\n  constructor() {\n    super({\n      name: 'swarm',\n      description: 'Manage swarm operations',\n      usage: 'claude-flow swarm <subcommand> [options]',\n      category: 'swarm',\n      minArgs: 1,\n      examples: [\n        'claude-flow swarm start',\n        'claude-flow swarm stop',\n        'claude-flow swarm list',\n        'claude-flow swarm status'\n      ]\n    });\n  }\n\n  protected async run(context: CommandContext): Promise<CommandResult> {\n    const subcommand = context.args[0];\n    \n    if (!subcommand) {\n      return {\n        success: false,\n        error: 'Please specify a swarm subcommand (start, stop, list)',\n        exitCode: 1\n      };\n    }\n\n    // This would delegate to the appropriate subcommand handler\n    // For now, we'll show help\n    return {\n      success: true,\n      exitCode: 0,\n      message: this.getHelp()\n    };\n  }\n\n  getHelp(): string {\n    return `Manage swarm operations\n\nUSAGE:\n  claude-flow swarm <subcommand> [options]\n\nSUBCOMMANDS:\n  start    Start a new swarm\n  stop     Stop an existing swarm\n  list     List all swarms\n  status   Show swarm status (alias for 'claude-flow status')\n\nOPTIONS:\n  -h, --help    Show help\n\nEXAMPLES:\n  claude-flow swarm start\n  claude-flow swarm start --topology mesh --agents 5\n  claude-flow swarm stop\n  claude-flow swarm list\n  claude-flow swarm status\n\nUse 'claude-flow swarm <subcommand> --help' for more information on a subcommand.\n`;\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,SAASA,WAAW,QAAQ,4BAA4B;AAGxD,OAAM,MAAOC,YAAa,SAAQD,WAAW;EAC3CE,YAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACE,KAAK,CAAC;MACJC,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE,yBAAyB;MACtCC,KAAK,EAAE,0CAA0C;MACjDC,QAAQ,EAAE,OAAO;MACjBC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,CACR,yBAAyB,EACzB,wBAAwB,EACxB,wBAAwB,EACxB,0BAA0B;KAE7B,CAAC;EACJ;EAEU,MAAMC,GAAGA,CAACC,OAAuB;IAAA;IAAAV,cAAA,GAAAC,CAAA;IACzC,MAAMU,UAAU;IAAA;IAAA,CAAAX,cAAA,GAAAE,CAAA,OAAGQ,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;IAAC;IAAAZ,cAAA,GAAAE,CAAA;IAEnC,IAAI,CAACS,UAAU,EAAE;MAAA;MAAAX,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAE,CAAA;MACf,OAAO;QACLY,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,uDAAuD;QAC9DC,QAAQ,EAAE;OACX;IACH,CAAC;IAAA;IAAA;MAAAhB,cAAA,GAAAa,CAAA;IAAA;IAED;IACA;IAAAb,cAAA,GAAAE,CAAA;IACA,OAAO;MACLY,OAAO,EAAE,IAAI;MACbE,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,IAAI,CAACC,OAAO;KACtB;EACH;EAEAA,OAAOA,CAAA;IAAA;IAAAlB,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACL,OAAO;;;;;;;;;;;;;;;;;;;;;;CAsBV;EACC","ignoreList":[]}