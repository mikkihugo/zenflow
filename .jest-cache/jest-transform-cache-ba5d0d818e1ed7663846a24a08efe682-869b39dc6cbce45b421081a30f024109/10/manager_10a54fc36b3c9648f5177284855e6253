113475bcf5c25998d27bc11e2ee94bc4
/* istanbul ignore next */
function cov_29l24u11w6() {
  var path = "/home/mhugo/code/claude-code-flow/src/memory/manager.ts";
  var hash = "08b6f599b6b750516b2bb603a25db001904be546";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/memory/manager.ts",
    statementMap: {},
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 23
          },
          end: {
            line: 7,
            column: 26
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 26
          }
        },
        line: 8
      }
    },
    branchMap: {},
    s: {},
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/memory/manager.ts",
      mappings: "AAAA;;;;GAIG;AAEH,MAAM,OAAO,aAAa;IACxB,KAAK,CAAC,UAAU,KAAmB,CAAC;IACpC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAkB,CAAC;CACrC",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/memory/manager.ts"],
      sourcesContent: ["/**\n * src/memory/manager.ts\n * \n * TODO: This is a stub. Implement the actual MemoryManager class.\n */\n\nexport class MemoryManager {\n  async initialize(): Promise<void> {}\n  async store(_data): Promise<void> {}\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "08b6f599b6b750516b2bb603a25db001904be546"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29l24u11w6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29l24u11w6();
/**
 * src/memory/manager.ts
 *
 * TODO: This is a stub. Implement the actual MemoryManager class.
 */
export class MemoryManager {
  async initialize() {
    /* istanbul ignore next */
    cov_29l24u11w6().f[0]++;
  }
  async store(_data) {
    /* istanbul ignore next */
    cov_29l24u11w6().f[1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNZW1vcnlNYW5hZ2VyIiwiaW5pdGlhbGl6ZSIsImNvdl8yOWwyNHUxMXc2IiwiZiIsInN0b3JlIiwiX2RhdGEiXSwic291cmNlcyI6WyIvaG9tZS9taHVnby9jb2RlL2NsYXVkZS1jb2RlLWZsb3cvc3JjL21lbW9yeS9tYW5hZ2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogc3JjL21lbW9yeS9tYW5hZ2VyLnRzXG4gKiBcbiAqIFRPRE86IFRoaXMgaXMgYSBzdHViLiBJbXBsZW1lbnQgdGhlIGFjdHVhbCBNZW1vcnlNYW5hZ2VyIGNsYXNzLlxuICovXG5cbmV4cG9ydCBjbGFzcyBNZW1vcnlNYW5hZ2VyIHtcbiAgYXN5bmMgaW5pdGlhbGl6ZSgpOiBQcm9taXNlPHZvaWQ+IHt9XG4gIGFzeW5jIHN0b3JlKF9kYXRhKTogUHJvbWlzZTx2b2lkPiB7fVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7O0FBTUEsT0FBTSxNQUFPQSxhQUFhO0VBQ3hCLE1BQU1DLFVBQVVBLENBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFBbUI7RUFDbkMsTUFBTUMsS0FBS0EsQ0FBQ0MsS0FBSztJQUFBO0lBQUFILGNBQUEsR0FBQUMsQ0FBQTtFQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==