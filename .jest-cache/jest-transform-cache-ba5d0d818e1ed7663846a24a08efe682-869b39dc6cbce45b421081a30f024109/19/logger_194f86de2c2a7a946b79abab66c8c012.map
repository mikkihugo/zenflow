{"version":3,"names":["cov_gvawa96nu","actualCoverage","createLogger","Logger","coreLogger","constructor","component","f","s","info","message","meta","warn","error","b","debug","success","progress","logger"],"sources":["/home/mhugo/code/claude-code-flow/src/utils/logger.ts"],"sourcesContent":["/**\n * @fileoverview Logger utility for Neural and Queen components\n * Simple wrapper around the core logger for component-specific logging\n * @module Logger\n */\n\nimport { createLogger, type LogLevel, type LogMeta } from './core-logger.js';\n\nexport class Logger {\n  private coreLogger: ReturnType<typeof createLogger>;\n\n  constructor(component?: string) {\n    this.coreLogger = createLogger(component);\n  }\n\n  info(message: string, meta?: LogMeta): void {\n    this.coreLogger.info(message, meta);\n  }\n\n  warn(message: string, meta?: LogMeta): void {\n    this.coreLogger.warn(message, meta);\n  }\n\n  error(message: string, error?: Error | unknown): void {\n    this.coreLogger.error(message, {}, error ?? null);\n  }\n\n  debug(message: string, meta?: LogMeta): void {\n    this.coreLogger.debug(message, meta);\n  }\n\n  success(message: string, meta?: LogMeta): void {\n    this.coreLogger.success(message, meta);\n  }\n\n  progress(message: string, meta?: LogMeta): void {\n    this.coreLogger.progress(message, meta);\n  }\n}\n\n// Export a default logger instance\nexport const logger = new Logger();\n\n// Export types for convenience\nexport type { LogLevel, LogMeta };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBQ;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AApBR;;;;;AAMA,SAASE,YAAY,QAAqC,kBAAkB;AAE5E,OAAM,MAAOC,MAAM;EACTC,UAAU;EAElBC,YAAYC,SAAkB;IAAA;IAAAN,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IAC5B,IAAI,CAACJ,UAAU,GAAGF,YAAY,CAACI,SAAS,CAAC;EAC3C;EAEAG,IAAIA,CAACC,OAAe,EAAEC,IAAc;IAAA;IAAAX,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IAClC,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACC,OAAO,EAAEC,IAAI,CAAC;EACrC;EAEAC,IAAIA,CAACF,OAAe,EAAEC,IAAc;IAAA;IAAAX,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IAClC,IAAI,CAACJ,UAAU,CAACQ,IAAI,CAACF,OAAO,EAAEC,IAAI,CAAC;EACrC;EAEAE,KAAKA,CAACH,OAAe,EAAEG,KAAuB;IAAA;IAAAb,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IAC5C,IAAI,CAACJ,UAAU,CAACS,KAAK,CAACH,OAAO,EAAE,EAAE;IAAE;IAAA,CAAAV,aAAA,GAAAc,CAAA,UAAAD,KAAK;IAAA;IAAA,CAAAb,aAAA,GAAAc,CAAA,UAAI,IAAI,EAAC;EACnD;EAEAC,KAAKA,CAACL,OAAe,EAAEC,IAAc;IAAA;IAAAX,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IACnC,IAAI,CAACJ,UAAU,CAACW,KAAK,CAACL,OAAO,EAAEC,IAAI,CAAC;EACtC;EAEAK,OAAOA,CAACN,OAAe,EAAEC,IAAc;IAAA;IAAAX,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IACrC,IAAI,CAACJ,UAAU,CAACY,OAAO,CAACN,OAAO,EAAEC,IAAI,CAAC;EACxC;EAEAM,QAAQA,CAACP,OAAe,EAAEC,IAAc;IAAA;IAAAX,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAQ,CAAA;IACtC,IAAI,CAACJ,UAAU,CAACa,QAAQ,CAACP,OAAO,EAAEC,IAAI,CAAC;EACzC;;AAGF;AACA,OAAO,MAAMO,MAAM;AAAA;AAAA,CAAAlB,aAAA,GAAAQ,CAAA,OAAG,IAAIL,MAAM,EAAE","ignoreList":[]}