376118bb7cd6600ea775fcce9fa56aa4
/* istanbul ignore next */
function cov_2jf3pp6syl() {
  var path = "/home/mhugo/code/claude-code-flow/src/cli/ui/hooks/use-config.ts";
  var hash = "3b4fc421c1811f2586c39feca60e43ddf01c9dc5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/cli/ui/hooks/use-config.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "2": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 181,
          column: 1
        }
      },
      "3": {
        start: {
          line: 27,
          column: 76
        },
        end: {
          line: 27,
          column: 83
        }
      },
      "4": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "5": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 29,
          column: 49
        }
      },
      "6": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "7": {
        start: {
          line: 31,
          column: 34
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "8": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 59,
          column: 10
        }
      },
      "9": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "10": {
        start: {
          line: 35,
          column: 37
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "12": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 69
        }
      },
      "13": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "14": {
        start: {
          line: 40,
          column: 31
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "15": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "16": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 79
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "18": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "19": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 63
        }
      },
      "20": {
        start: {
          line: 62,
          column: 37
        },
        end: {
          line: 62,
          column: 61
        }
      },
      "21": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "22": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "23": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 80
        }
      },
      "24": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 117
        }
      },
      "25": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 95,
          column: 54
        }
      },
      "26": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "27": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "29": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "31": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "32": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 32
        }
      },
      "33": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "34": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "35": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 88,
          column: 96
        }
      },
      "36": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 28
        }
      },
      "37": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 29
        }
      },
      "38": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "39": {
        start: {
          line: 96,
          column: 17
        },
        end: {
          line: 114,
          column: 60
        }
      },
      "40": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "41": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "42": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "43": {
        start: {
          line: 100,
          column: 34
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "44": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 44
        }
      },
      "45": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 35
        }
      },
      "46": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 30
        }
      },
      "47": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 44
        }
      },
      "48": {
        start: {
          line: 110,
          column: 26
        },
        end: {
          line: 110,
          column: 96
        }
      },
      "49": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 28
        }
      },
      "50": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 29
        }
      },
      "51": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "52": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "53": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "54": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "55": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "56": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 25
        }
      },
      "57": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "58": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 130,
          column: 26
        }
      },
      "59": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 129,
          column: 17
        }
      },
      "60": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 27
        }
      },
      "61": {
        start: {
          line: 133,
          column: 27
        },
        end: {
          line: 150,
          column: 50
        }
      },
      "62": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "63": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "64": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "65": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 27
        }
      },
      "66": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "67": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "68": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "69": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "70": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 27
        }
      },
      "71": {
        start: {
          line: 151,
          column: 28
        },
        end: {
          line: 163,
          column: 24
        }
      },
      "72": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "73": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 31
        }
      },
      "74": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "75": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "76": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 25
        }
      },
      "77": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 18
        }
      },
      "78": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 18
        }
      },
      "79": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 180,
          column: 6
        }
      },
      "80": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "81": {
        start: {
          line: 185,
          column: 23
        },
        end: {
          line: 185,
          column: 25
        }
      },
      "82": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "83": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 63
        }
      },
      "84": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "85": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 66
        }
      },
      "86": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "87": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 66
        }
      },
      "88": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 22
        }
      },
      "89": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 198,
          column: 25
        }
      },
      "90": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "91": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 67
        }
      },
      "92": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "93": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 69
        }
      },
      "94": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 26,
            column: 26
          }
        },
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 36
          }
        },
        loc: {
          start: {
            line: 33,
            column: 47
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 35,
            column: 61
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 60,
            column: 35
          },
          end: {
            line: 60,
            column: 36
          }
        },
        loc: {
          start: {
            line: 60,
            column: 53
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 60
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 62,
            column: 61
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 33
          }
        },
        loc: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 29
          },
          end: {
            line: 96,
            column: 30
          }
        },
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 115,
            column: 42
          },
          end: {
            line: 115,
            column: 43
          }
        },
        loc: {
          start: {
            line: 115,
            column: 61
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 126,
            column: 23
          },
          end: {
            line: 126,
            column: 24
          }
        },
        loc: {
          start: {
            line: 126,
            column: 29
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 126
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 133,
            column: 39
          },
          end: {
            line: 133,
            column: 40
          }
        },
        loc: {
          start: {
            line: 133,
            column: 58
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 133
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 23
          },
          end: {
            line: 144,
            column: 24
          }
        },
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 148,
            column: 13
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 151,
            column: 40
          },
          end: {
            line: 151,
            column: 41
          }
        },
        loc: {
          start: {
            line: 151,
            column: 52
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 151
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 165,
            column: 14
          },
          end: {
            line: 165,
            column: 15
          }
        },
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 165
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 184,
            column: 25
          },
          end: {
            line: 184,
            column: 26
          }
        },
        loc: {
          start: {
            line: 184,
            column: 37
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 184
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 197,
            column: 22
          },
          end: {
            line: 197,
            column: 23
          }
        },
        loc: {
          start: {
            line: 197,
            column: 34
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 197
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 26,
            column: 38
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 27
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 44,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 44,
            column: 43
          }
        }, {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 54
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 43
          },
          end: {
            line: 45,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 43
          },
          end: {
            line: 45,
            column: 62
          }
        }, {
          start: {
            line: 45,
            column: 66
          },
          end: {
            line: 45,
            column: 76
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 61
          },
          end: {
            line: 73,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 84
          },
          end: {
            line: 73,
            column: 95
          }
        }, {
          start: {
            line: 73,
            column: 98
          },
          end: {
            line: 73,
            column: 113
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 88,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 49
          },
          end: {
            line: 88,
            column: 52
          }
        }, {
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 96
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 98,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 98,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 17
          }
        }, {
          start: {
            line: 97,
            column: 21
          },
          end: {
            line: 97,
            column: 29
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 110,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 49
          },
          end: {
            line: 110,
            column: 52
          }
        }, {
          start: {
            line: 110,
            column: 55
          },
          end: {
            line: 110,
            column: 96
          }
        }],
        line: 110
      },
      "12": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "13": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 129,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 129,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 135,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 135,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "17": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "18": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "19": {
        loc: {
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 173,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 173,
            column: 32
          }
        }, {
          start: {
            line: 173,
            column: 36
          },
          end: {
            line: 173,
            column: 56
          }
        }],
        line: 173
      },
      "20": {
        loc: {
          start: {
            line: 174,
            column: 18
          },
          end: {
            line: 174,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 18
          },
          end: {
            line: 174,
            column: 26
          }
        }, {
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 174,
            column: 47
          }
        }],
        line: 174
      },
      "21": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "22": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 42
          }
        }, {
          start: {
            line: 186,
            column: 47
          },
          end: {
            line: 186,
            column: 67
          }
        }, {
          start: {
            line: 186,
            column: 71
          },
          end: {
            line: 186,
            column: 93
          }
        }],
        line: 186
      },
      "23": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "24": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 47
          }
        }, {
          start: {
            line: 189,
            column: 51
          },
          end: {
            line: 189,
            column: 79
          }
        }],
        line: 189
      },
      "25": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "26": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 46
          }
        }, {
          start: {
            line: 192,
            column: 51
          },
          end: {
            line: 192,
            column: 75
          }
        }, {
          start: {
            line: 192,
            column: 79
          },
          end: {
            line: 192,
            column: 104
          }
        }],
        line: 192
      },
      "27": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "28": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 48
          }
        }, {
          start: {
            line: 199,
            column: 52
          },
          end: {
            line: 199,
            column: 81
          }
        }],
        line: 199
      },
      "29": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "30": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 44
          }
        }, {
          start: {
            line: 202,
            column: 49
          },
          end: {
            line: 202,
            column: 73
          }
        }, {
          start: {
            line: 202,
            column: 77
          },
          end: {
            line: 202,
            column: 103
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/cli/ui/hooks/use-config.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/cli/ui/hooks/use-config.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback } from 'react';\nimport { UseAsyncState } from './index';\n\n// Configuration data types\nexport interface SwarmConfig {\n  maxAgents: number;\n  defaultTimeout: number;\n  retryAttempts: number;\n  logLevel: 'debug' | 'info' | 'warn' | 'error';\n  enableMetrics: boolean;\n  autoRestart: boolean;\n  topology: 'mesh' | 'hierarchical' | 'ring' | 'star';\n}\n\nexport interface UIConfig {\n  theme: 'dark' | 'light' | 'auto';\n  refreshInterval: number;\n  maxLogLines: number;\n  showAdvancedMetrics: boolean;\n  animationsEnabled: boolean;\n  compactMode: boolean;\n}\n\nexport interface ConfigData {\n  swarm: SwarmConfig;\n  ui: UIConfig;\n  version: string;\n  lastModified: Date;\n}\n\nexport interface ConfigHook extends UseAsyncState<ConfigData> {\n  swarmConfig: SwarmConfig;\n  uiConfig: UIConfig;\n  updateSwarmConfig: (config: Partial<SwarmConfig>) => Promise<void>;\n  updateUIConfig: (config: Partial<UIConfig>) => Promise<void>;\n  resetToDefaults: () => Promise<void>;\n  isDirty: boolean;\n  save: () => Promise<void>;\n}\n\nexport interface UseConfigOptions {\n  autoSave?: boolean;\n  saveDelay?: number;\n  onConfigChange?: (config: ConfigData) => void;\n  onError?: (error: Error) => void;\n}\n\n// Default configuration values\nconst DEFAULT_SWARM_CONFIG: SwarmConfig = {\n  maxAgents: 10,\n  defaultTimeout: 30000,\n  retryAttempts: 3,\n  logLevel: 'info',\n  enableMetrics: true,\n  autoRestart: true,\n  topology: 'hierarchical',\n};\n\nconst DEFAULT_UI_CONFIG: UIConfig = {\n  theme: 'dark',\n  refreshInterval: 5000,\n  maxLogLines: 1000,\n  showAdvancedMetrics: false,\n  animationsEnabled: true,\n  compactMode: false,\n};\n\n/**\n * Custom hook for managing application configuration\n * \n * Provides configuration management with persistence,\n * validation, and real-time updates.\n */\nexport const useConfig = (options: UseConfigOptions = {}): ConfigHook => {\n  const {\n    autoSave = true,\n    saveDelay = 1000,\n    onConfigChange,\n    onError,\n  } = options;\n  \n  const [data, setData] = useState<ConfigData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [isDirty, setIsDirty] = useState(false);\n  \n  // Mock storage functions - replace with actual storage implementation\n  const loadConfig = useCallback(async (): Promise<ConfigData> => {\n    // Simulate loading delay\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    try {\n      // Try to load from localStorage (or other storage)\n      const stored = localStorage.getItem('claude-flow-config');\n      \n      if (stored) {\n        const parsed = JSON.parse(stored);\n        return {\n          swarm: { ...DEFAULT_SWARM_CONFIG, ...parsed.swarm },\n          ui: { ...DEFAULT_UI_CONFIG, ...parsed.ui },\n          version: parsed.version || '1.0.0',\n          lastModified: new Date(parsed.lastModified || Date.now()),\n        };\n      }\n    } catch (err) {\n      console.warn('Failed to load stored config, using defaults:', err);\n    }\n    \n    // Return default configuration\n    return {\n      swarm: DEFAULT_SWARM_CONFIG,\n      ui: DEFAULT_UI_CONFIG,\n      version: '1.0.0',\n      lastModified: new Date(),\n    };\n  }, []);\n  \n  const saveConfig = useCallback(async (config: ConfigData): Promise<void> => {\n    // Simulate save delay\n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    try {\n      const toStore = {\n        swarm: config.swarm,\n        ui: config.ui,\n        version: config.version,\n        lastModified: config.lastModified.toISOString(),\n      };\n      \n      localStorage.setItem('claude-flow-config', JSON.stringify(toStore));\n    } catch (err) {\n      throw new Error(`Failed to save configuration: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    }\n  }, []);\n  \n  const refetch = useCallback(async () => {\n    if (loading) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const configData = await loadConfig();\n      setData(configData);\n      setIsDirty(false);\n      onConfigChange?.(configData);\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to load configuration');\n      setError(error);\n      onError?.(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [loading, loadConfig, onConfigChange, onError]);\n  \n  const save = useCallback(async () => {\n    if (!data || !isDirty) return;\n    \n    try {\n      const updatedConfig = {\n        ...data,\n        lastModified: new Date(),\n      };\n      \n      await saveConfig(updatedConfig);\n      setData(updatedConfig);\n      setIsDirty(false);\n      onConfigChange?.(updatedConfig);\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to save configuration');\n      setError(error);\n      onError?.(error);\n    }\n  }, [data, isDirty, saveConfig, onConfigChange, onError]);\n  \n  const updateSwarmConfig = useCallback(async (updates: Partial<SwarmConfig>) => {\n    if (!data) return;\n    \n    const newConfig = {\n      ...data,\n      swarm: { ...data.swarm, ...updates },\n    };\n    \n    setData(newConfig);\n    setIsDirty(true);\n    \n    if (autoSave) {\n      // Debounced save\n      setTimeout(() => {\n        if (isDirty) {\n          save();\n        }\n      }, saveDelay);\n    }\n  }, [data, autoSave, saveDelay, save, isDirty]);\n  \n  const updateUIConfig = useCallback(async (updates: Partial<UIConfig>) => {\n    if (!data) return;\n    \n    const newConfig = {\n      ...data,\n      ui: { ...data.ui, ...updates },\n    };\n    \n    setData(newConfig);\n    setIsDirty(true);\n    \n    if (autoSave) {\n      // Debounced save\n      setTimeout(() => {\n        if (isDirty) {\n          save();\n        }\n      }, saveDelay);\n    }\n  }, [data, autoSave, saveDelay, save, isDirty]);\n  \n  const resetToDefaults = useCallback(async () => {\n    const defaultConfig: ConfigData = {\n      swarm: DEFAULT_SWARM_CONFIG,\n      ui: DEFAULT_UI_CONFIG,\n      version: '1.0.0',\n      lastModified: new Date(),\n    };\n    \n    setData(defaultConfig);\n    setIsDirty(true);\n    \n    if (autoSave) {\n      await save();\n    }\n  }, [autoSave, save]);\n  \n  // Load configuration on mount\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n  \n  return {\n    data,\n    loading,\n    error,\n    refetch,\n    swarmConfig: data?.swarm || DEFAULT_SWARM_CONFIG,\n    uiConfig: data?.ui || DEFAULT_UI_CONFIG,\n    updateSwarmConfig,\n    updateUIConfig,\n    resetToDefaults,\n    isDirty,\n    save,\n  };\n};\n\n// Utility functions for configuration validation\nexport const ConfigValidation = {\n  validateSwarmConfig: (config: Partial<SwarmConfig>): string[] => {\n    const errors: string[] = [];\n    \n    if (config.maxAgents !== undefined && (config.maxAgents < 1 || config.maxAgents > 100)) {\n      errors.push('maxAgents must be between 1 and 100');\n    }\n    \n    if (config.defaultTimeout !== undefined && config.defaultTimeout < 1000) {\n      errors.push('defaultTimeout must be at least 1000ms');\n    }\n    \n    if (config.retryAttempts !== undefined && (config.retryAttempts < 0 || config.retryAttempts > 10)) {\n      errors.push('retryAttempts must be between 0 and 10');\n    }\n    \n    return errors;\n  },\n  \n  validateUIConfig: (config: Partial<UIConfig>): string[] => {\n    const errors: string[] = [];\n    \n    if (config.refreshInterval !== undefined && config.refreshInterval < 1000) {\n      errors.push('refreshInterval must be at least 1000ms');\n    }\n    \n    if (config.maxLogLines !== undefined && (config.maxLogLines < 100 || config.maxLogLines > 10000)) {\n      errors.push('maxLogLines must be between 100 and 10000');\n    }\n    \n    return errors;\n  },\n};\n\n// Default export for convenience\nexport default useConfig;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b4fc421c1811f2586c39feca60e43ddf01c9dc5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jf3pp6syl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jf3pp6syl();
import { useState, useEffect, useCallback } from 'react';
// Default configuration values
const DEFAULT_SWARM_CONFIG =
/* istanbul ignore next */
(cov_2jf3pp6syl().s[0]++, {
  maxAgents: 10,
  defaultTimeout: 30000,
  retryAttempts: 3,
  logLevel: 'info',
  enableMetrics: true,
  autoRestart: true,
  topology: 'hierarchical'
});
const DEFAULT_UI_CONFIG =
/* istanbul ignore next */
(cov_2jf3pp6syl().s[1]++, {
  theme: 'dark',
  refreshInterval: 5000,
  maxLogLines: 1000,
  showAdvancedMetrics: false,
  animationsEnabled: true,
  compactMode: false
});
/**
 * Custom hook for managing application configuration
 *
 * Provides configuration management with persistence,
 * validation, and real-time updates.
 */
/* istanbul ignore next */
cov_2jf3pp6syl().s[2]++;
export const useConfig = (options =
/* istanbul ignore next */
(cov_2jf3pp6syl().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_2jf3pp6syl().f[0]++;
  const {
    autoSave =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[1][0]++, true),
    saveDelay =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[2][0]++, 1000),
    onConfigChange,
    onError
  } =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[3]++, options);
  const [data, setData] =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[4]++, useState(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[5]++, useState(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[6]++, useState(null));
  const [isDirty, setIsDirty] =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[7]++, useState(false));
  // Mock storage functions - replace with actual storage implementation
  const loadConfig =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[8]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[1]++;
    cov_2jf3pp6syl().s[9]++;
    // Simulate loading delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_2jf3pp6syl().f[2]++;
      cov_2jf3pp6syl().s[10]++;
      return setTimeout(resolve, 200);
    });
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[11]++;
    try {
      // Try to load from localStorage (or other storage)
      const stored =
      /* istanbul ignore next */
      (cov_2jf3pp6syl().s[12]++, localStorage.getItem('claude-flow-config'));
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[13]++;
      if (stored) {
        /* istanbul ignore next */
        cov_2jf3pp6syl().b[3][0]++;
        const parsed =
        /* istanbul ignore next */
        (cov_2jf3pp6syl().s[14]++, JSON.parse(stored));
        /* istanbul ignore next */
        cov_2jf3pp6syl().s[15]++;
        return {
          swarm: {
            ...DEFAULT_SWARM_CONFIG,
            ...parsed.swarm
          },
          ui: {
            ...DEFAULT_UI_CONFIG,
            ...parsed.ui
          },
          version:
          /* istanbul ignore next */
          (cov_2jf3pp6syl().b[4][0]++, parsed.version) ||
          /* istanbul ignore next */
          (cov_2jf3pp6syl().b[4][1]++, '1.0.0'),
          lastModified: new Date(
          /* istanbul ignore next */
          (cov_2jf3pp6syl().b[5][0]++, parsed.lastModified) ||
          /* istanbul ignore next */
          (cov_2jf3pp6syl().b[5][1]++, Date.now()))
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jf3pp6syl().b[3][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[16]++;
      console.warn('Failed to load stored config, using defaults:', err);
    }
    // Return default configuration
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[17]++;
    return {
      swarm: DEFAULT_SWARM_CONFIG,
      ui: DEFAULT_UI_CONFIG,
      version: '1.0.0',
      lastModified: new Date()
    };
  }, []));
  const saveConfig =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[18]++, useCallback(async config => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[3]++;
    cov_2jf3pp6syl().s[19]++;
    // Simulate save delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_2jf3pp6syl().f[4]++;
      cov_2jf3pp6syl().s[20]++;
      return setTimeout(resolve, 100);
    });
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[21]++;
    try {
      const toStore =
      /* istanbul ignore next */
      (cov_2jf3pp6syl().s[22]++, {
        swarm: config.swarm,
        ui: config.ui,
        version: config.version,
        lastModified: config.lastModified.toISOString()
      });
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[23]++;
      localStorage.setItem('claude-flow-config', JSON.stringify(toStore));
    } catch (err) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[24]++;
      throw new Error(`Failed to save configuration: ${err instanceof Error ?
      /* istanbul ignore next */
      (cov_2jf3pp6syl().b[6][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2jf3pp6syl().b[6][1]++, 'Unknown error')}`);
    }
  }, []));
  const refetch =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[25]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[5]++;
    cov_2jf3pp6syl().s[26]++;
    if (loading) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[7][0]++;
      cov_2jf3pp6syl().s[27]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[7][1]++;
    }
    cov_2jf3pp6syl().s[28]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[29]++;
    setError(null);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[30]++;
    try {
      const configData =
      /* istanbul ignore next */
      (cov_2jf3pp6syl().s[31]++, await loadConfig());
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[32]++;
      setData(configData);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[33]++;
      setIsDirty(false);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[34]++;
      onConfigChange?.(configData);
    } catch (err) {
      const error =
      /* istanbul ignore next */
      (cov_2jf3pp6syl().s[35]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2jf3pp6syl().b[8][0]++, err) :
      /* istanbul ignore next */
      (cov_2jf3pp6syl().b[8][1]++, new Error('Failed to load configuration')));
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[36]++;
      setError(error);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[37]++;
      onError?.(error);
    } finally {
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[38]++;
      setLoading(false);
    }
  }, [loading, loadConfig, onConfigChange, onError]));
  const save =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[39]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[6]++;
    cov_2jf3pp6syl().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[10][0]++, !data) ||
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[10][1]++, !isDirty)) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[9][0]++;
      cov_2jf3pp6syl().s[41]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[9][1]++;
    }
    cov_2jf3pp6syl().s[42]++;
    try {
      const updatedConfig =
      /* istanbul ignore next */
      (cov_2jf3pp6syl().s[43]++, {
        ...data,
        lastModified: new Date()
      });
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[44]++;
      await saveConfig(updatedConfig);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[45]++;
      setData(updatedConfig);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[46]++;
      setIsDirty(false);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[47]++;
      onConfigChange?.(updatedConfig);
    } catch (err) {
      const error =
      /* istanbul ignore next */
      (cov_2jf3pp6syl().s[48]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2jf3pp6syl().b[11][0]++, err) :
      /* istanbul ignore next */
      (cov_2jf3pp6syl().b[11][1]++, new Error('Failed to save configuration')));
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[49]++;
      setError(error);
      /* istanbul ignore next */
      cov_2jf3pp6syl().s[50]++;
      onError?.(error);
    }
  }, [data, isDirty, saveConfig, onConfigChange, onError]));
  const updateSwarmConfig =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[51]++, useCallback(async updates => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[7]++;
    cov_2jf3pp6syl().s[52]++;
    if (!data) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[12][0]++;
      cov_2jf3pp6syl().s[53]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[12][1]++;
    }
    const newConfig =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().s[54]++, {
      ...data,
      swarm: {
        ...data.swarm,
        ...updates
      }
    });
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[55]++;
    setData(newConfig);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[56]++;
    setIsDirty(true);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[57]++;
    if (autoSave) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[13][0]++;
      cov_2jf3pp6syl().s[58]++;
      // Debounced save
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2jf3pp6syl().f[8]++;
        cov_2jf3pp6syl().s[59]++;
        if (isDirty) {
          /* istanbul ignore next */
          cov_2jf3pp6syl().b[14][0]++;
          cov_2jf3pp6syl().s[60]++;
          save();
        } else
        /* istanbul ignore next */
        {
          cov_2jf3pp6syl().b[14][1]++;
        }
      }, saveDelay);
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[13][1]++;
    }
  }, [data, autoSave, saveDelay, save, isDirty]));
  const updateUIConfig =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[61]++, useCallback(async updates => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[9]++;
    cov_2jf3pp6syl().s[62]++;
    if (!data) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[15][0]++;
      cov_2jf3pp6syl().s[63]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[15][1]++;
    }
    const newConfig =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().s[64]++, {
      ...data,
      ui: {
        ...data.ui,
        ...updates
      }
    });
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[65]++;
    setData(newConfig);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[66]++;
    setIsDirty(true);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[67]++;
    if (autoSave) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[16][0]++;
      cov_2jf3pp6syl().s[68]++;
      // Debounced save
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2jf3pp6syl().f[10]++;
        cov_2jf3pp6syl().s[69]++;
        if (isDirty) {
          /* istanbul ignore next */
          cov_2jf3pp6syl().b[17][0]++;
          cov_2jf3pp6syl().s[70]++;
          save();
        } else
        /* istanbul ignore next */
        {
          cov_2jf3pp6syl().b[17][1]++;
        }
      }, saveDelay);
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[16][1]++;
    }
  }, [data, autoSave, saveDelay, save, isDirty]));
  const resetToDefaults =
  /* istanbul ignore next */
  (cov_2jf3pp6syl().s[71]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[11]++;
    const defaultConfig =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().s[72]++, {
      swarm: DEFAULT_SWARM_CONFIG,
      ui: DEFAULT_UI_CONFIG,
      version: '1.0.0',
      lastModified: new Date()
    });
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[73]++;
    setData(defaultConfig);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[74]++;
    setIsDirty(true);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[75]++;
    if (autoSave) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[18][0]++;
      cov_2jf3pp6syl().s[76]++;
      await save();
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[18][1]++;
    }
  }, [autoSave, save]));
  // Load configuration on mount
  /* istanbul ignore next */
  cov_2jf3pp6syl().s[77]++;
  useEffect(() => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[12]++;
    cov_2jf3pp6syl().s[78]++;
    refetch();
  }, [refetch]);
  /* istanbul ignore next */
  cov_2jf3pp6syl().s[79]++;
  return {
    data,
    loading,
    error,
    refetch,
    swarmConfig:
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[19][0]++, data?.swarm) ||
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[19][1]++, DEFAULT_SWARM_CONFIG),
    uiConfig:
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[20][0]++, data?.ui) ||
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[20][1]++, DEFAULT_UI_CONFIG),
    updateSwarmConfig,
    updateUIConfig,
    resetToDefaults,
    isDirty,
    save
  };
};
// Utility functions for configuration validation
export const ConfigValidation =
/* istanbul ignore next */
(cov_2jf3pp6syl().s[80]++, {
  validateSwarmConfig: config => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[13]++;
    const errors =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().s[81]++, []);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[82]++;
    if (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[22][0]++, config.maxAgents !== undefined) && (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[22][1]++, config.maxAgents < 1) ||
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[22][2]++, config.maxAgents > 100))) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[21][0]++;
      cov_2jf3pp6syl().s[83]++;
      errors.push('maxAgents must be between 1 and 100');
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[21][1]++;
    }
    cov_2jf3pp6syl().s[84]++;
    if (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[24][0]++, config.defaultTimeout !== undefined) &&
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[24][1]++, config.defaultTimeout < 1000)) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[23][0]++;
      cov_2jf3pp6syl().s[85]++;
      errors.push('defaultTimeout must be at least 1000ms');
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[23][1]++;
    }
    cov_2jf3pp6syl().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[26][0]++, config.retryAttempts !== undefined) && (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[26][1]++, config.retryAttempts < 0) ||
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[26][2]++, config.retryAttempts > 10))) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[25][0]++;
      cov_2jf3pp6syl().s[87]++;
      errors.push('retryAttempts must be between 0 and 10');
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[25][1]++;
    }
    cov_2jf3pp6syl().s[88]++;
    return errors;
  },
  validateUIConfig: config => {
    /* istanbul ignore next */
    cov_2jf3pp6syl().f[14]++;
    const errors =
    /* istanbul ignore next */
    (cov_2jf3pp6syl().s[89]++, []);
    /* istanbul ignore next */
    cov_2jf3pp6syl().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[28][0]++, config.refreshInterval !== undefined) &&
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[28][1]++, config.refreshInterval < 1000)) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[27][0]++;
      cov_2jf3pp6syl().s[91]++;
      errors.push('refreshInterval must be at least 1000ms');
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[27][1]++;
    }
    cov_2jf3pp6syl().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[30][0]++, config.maxLogLines !== undefined) && (
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[30][1]++, config.maxLogLines < 100) ||
    /* istanbul ignore next */
    (cov_2jf3pp6syl().b[30][2]++, config.maxLogLines > 10000))) {
      /* istanbul ignore next */
      cov_2jf3pp6syl().b[29][0]++;
      cov_2jf3pp6syl().s[93]++;
      errors.push('maxLogLines must be between 100 and 10000');
    } else
    /* istanbul ignore next */
    {
      cov_2jf3pp6syl().b[29][1]++;
    }
    cov_2jf3pp6syl().s[94]++;
    return errors;
  }
});
// Default export for convenience
export default useConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,