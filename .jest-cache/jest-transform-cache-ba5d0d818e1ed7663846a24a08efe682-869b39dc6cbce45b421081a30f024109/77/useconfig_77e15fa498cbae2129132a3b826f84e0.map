{"version":3,"names":["cov_2jf3pp6syl","actualCoverage","useState","useEffect","useCallback","DEFAULT_SWARM_CONFIG","s","maxAgents","defaultTimeout","retryAttempts","logLevel","enableMetrics","autoRestart","topology","DEFAULT_UI_CONFIG","theme","refreshInterval","maxLogLines","showAdvancedMetrics","animationsEnabled","compactMode","useConfig","options","b","f","autoSave","saveDelay","onConfigChange","onError","data","setData","loading","setLoading","error","setError","isDirty","setIsDirty","loadConfig","Promise","resolve","setTimeout","stored","localStorage","getItem","parsed","JSON","parse","swarm","ui","version","lastModified","Date","now","err","console","warn","saveConfig","config","toStore","toISOString","setItem","stringify","Error","message","refetch","configData","save","updatedConfig","updateSwarmConfig","updates","newConfig","updateUIConfig","resetToDefaults","defaultConfig","swarmConfig","uiConfig","ConfigValidation","validateSwarmConfig","errors","undefined","push","validateUIConfig"],"sources":["/home/mhugo/code/claude-code-flow/src/cli/ui/hooks/use-config.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { UseAsyncState } from './index';\n\n// Configuration data types\nexport interface SwarmConfig {\n  maxAgents: number;\n  defaultTimeout: number;\n  retryAttempts: number;\n  logLevel: 'debug' | 'info' | 'warn' | 'error';\n  enableMetrics: boolean;\n  autoRestart: boolean;\n  topology: 'mesh' | 'hierarchical' | 'ring' | 'star';\n}\n\nexport interface UIConfig {\n  theme: 'dark' | 'light' | 'auto';\n  refreshInterval: number;\n  maxLogLines: number;\n  showAdvancedMetrics: boolean;\n  animationsEnabled: boolean;\n  compactMode: boolean;\n}\n\nexport interface ConfigData {\n  swarm: SwarmConfig;\n  ui: UIConfig;\n  version: string;\n  lastModified: Date;\n}\n\nexport interface ConfigHook extends UseAsyncState<ConfigData> {\n  swarmConfig: SwarmConfig;\n  uiConfig: UIConfig;\n  updateSwarmConfig: (config: Partial<SwarmConfig>) => Promise<void>;\n  updateUIConfig: (config: Partial<UIConfig>) => Promise<void>;\n  resetToDefaults: () => Promise<void>;\n  isDirty: boolean;\n  save: () => Promise<void>;\n}\n\nexport interface UseConfigOptions {\n  autoSave?: boolean;\n  saveDelay?: number;\n  onConfigChange?: (config: ConfigData) => void;\n  onError?: (error: Error) => void;\n}\n\n// Default configuration values\nconst DEFAULT_SWARM_CONFIG: SwarmConfig = {\n  maxAgents: 10,\n  defaultTimeout: 30000,\n  retryAttempts: 3,\n  logLevel: 'info',\n  enableMetrics: true,\n  autoRestart: true,\n  topology: 'hierarchical',\n};\n\nconst DEFAULT_UI_CONFIG: UIConfig = {\n  theme: 'dark',\n  refreshInterval: 5000,\n  maxLogLines: 1000,\n  showAdvancedMetrics: false,\n  animationsEnabled: true,\n  compactMode: false,\n};\n\n/**\n * Custom hook for managing application configuration\n * \n * Provides configuration management with persistence,\n * validation, and real-time updates.\n */\nexport const useConfig = (options: UseConfigOptions = {}): ConfigHook => {\n  const {\n    autoSave = true,\n    saveDelay = 1000,\n    onConfigChange,\n    onError,\n  } = options;\n  \n  const [data, setData] = useState<ConfigData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [isDirty, setIsDirty] = useState(false);\n  \n  // Mock storage functions - replace with actual storage implementation\n  const loadConfig = useCallback(async (): Promise<ConfigData> => {\n    // Simulate loading delay\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    try {\n      // Try to load from localStorage (or other storage)\n      const stored = localStorage.getItem('claude-flow-config');\n      \n      if (stored) {\n        const parsed = JSON.parse(stored);\n        return {\n          swarm: { ...DEFAULT_SWARM_CONFIG, ...parsed.swarm },\n          ui: { ...DEFAULT_UI_CONFIG, ...parsed.ui },\n          version: parsed.version || '1.0.0',\n          lastModified: new Date(parsed.lastModified || Date.now()),\n        };\n      }\n    } catch (err) {\n      console.warn('Failed to load stored config, using defaults:', err);\n    }\n    \n    // Return default configuration\n    return {\n      swarm: DEFAULT_SWARM_CONFIG,\n      ui: DEFAULT_UI_CONFIG,\n      version: '1.0.0',\n      lastModified: new Date(),\n    };\n  }, []);\n  \n  const saveConfig = useCallback(async (config: ConfigData): Promise<void> => {\n    // Simulate save delay\n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    try {\n      const toStore = {\n        swarm: config.swarm,\n        ui: config.ui,\n        version: config.version,\n        lastModified: config.lastModified.toISOString(),\n      };\n      \n      localStorage.setItem('claude-flow-config', JSON.stringify(toStore));\n    } catch (err) {\n      throw new Error(`Failed to save configuration: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    }\n  }, []);\n  \n  const refetch = useCallback(async () => {\n    if (loading) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const configData = await loadConfig();\n      setData(configData);\n      setIsDirty(false);\n      onConfigChange?.(configData);\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to load configuration');\n      setError(error);\n      onError?.(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [loading, loadConfig, onConfigChange, onError]);\n  \n  const save = useCallback(async () => {\n    if (!data || !isDirty) return;\n    \n    try {\n      const updatedConfig = {\n        ...data,\n        lastModified: new Date(),\n      };\n      \n      await saveConfig(updatedConfig);\n      setData(updatedConfig);\n      setIsDirty(false);\n      onConfigChange?.(updatedConfig);\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error('Failed to save configuration');\n      setError(error);\n      onError?.(error);\n    }\n  }, [data, isDirty, saveConfig, onConfigChange, onError]);\n  \n  const updateSwarmConfig = useCallback(async (updates: Partial<SwarmConfig>) => {\n    if (!data) return;\n    \n    const newConfig = {\n      ...data,\n      swarm: { ...data.swarm, ...updates },\n    };\n    \n    setData(newConfig);\n    setIsDirty(true);\n    \n    if (autoSave) {\n      // Debounced save\n      setTimeout(() => {\n        if (isDirty) {\n          save();\n        }\n      }, saveDelay);\n    }\n  }, [data, autoSave, saveDelay, save, isDirty]);\n  \n  const updateUIConfig = useCallback(async (updates: Partial<UIConfig>) => {\n    if (!data) return;\n    \n    const newConfig = {\n      ...data,\n      ui: { ...data.ui, ...updates },\n    };\n    \n    setData(newConfig);\n    setIsDirty(true);\n    \n    if (autoSave) {\n      // Debounced save\n      setTimeout(() => {\n        if (isDirty) {\n          save();\n        }\n      }, saveDelay);\n    }\n  }, [data, autoSave, saveDelay, save, isDirty]);\n  \n  const resetToDefaults = useCallback(async () => {\n    const defaultConfig: ConfigData = {\n      swarm: DEFAULT_SWARM_CONFIG,\n      ui: DEFAULT_UI_CONFIG,\n      version: '1.0.0',\n      lastModified: new Date(),\n    };\n    \n    setData(defaultConfig);\n    setIsDirty(true);\n    \n    if (autoSave) {\n      await save();\n    }\n  }, [autoSave, save]);\n  \n  // Load configuration on mount\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n  \n  return {\n    data,\n    loading,\n    error,\n    refetch,\n    swarmConfig: data?.swarm || DEFAULT_SWARM_CONFIG,\n    uiConfig: data?.ui || DEFAULT_UI_CONFIG,\n    updateSwarmConfig,\n    updateUIConfig,\n    resetToDefaults,\n    isDirty,\n    save,\n  };\n};\n\n// Utility functions for configuration validation\nexport const ConfigValidation = {\n  validateSwarmConfig: (config: Partial<SwarmConfig>): string[] => {\n    const errors: string[] = [];\n    \n    if (config.maxAgents !== undefined && (config.maxAgents < 1 || config.maxAgents > 100)) {\n      errors.push('maxAgents must be between 1 and 100');\n    }\n    \n    if (config.defaultTimeout !== undefined && config.defaultTimeout < 1000) {\n      errors.push('defaultTimeout must be at least 1000ms');\n    }\n    \n    if (config.retryAttempts !== undefined && (config.retryAttempts < 0 || config.retryAttempts > 10)) {\n      errors.push('retryAttempts must be between 0 and 10');\n    }\n    \n    return errors;\n  },\n  \n  validateUIConfig: (config: Partial<UIConfig>): string[] => {\n    const errors: string[] = [];\n    \n    if (config.refreshInterval !== undefined && config.refreshInterval < 1000) {\n      errors.push('refreshInterval must be at least 1000ms');\n    }\n    \n    if (config.maxLogLines !== undefined && (config.maxLogLines < 100 || config.maxLogLines > 10000)) {\n      errors.push('maxLogLines must be between 100 and 10000');\n    }\n    \n    return errors;\n  },\n};\n\n// Default export for convenience\nexport default useConfig;\n"],"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","ignoreList":[]}