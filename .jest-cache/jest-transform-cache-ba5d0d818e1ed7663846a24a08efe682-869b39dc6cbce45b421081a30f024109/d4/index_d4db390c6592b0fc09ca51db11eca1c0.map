{"version":3,"names":["cov_1qyty6qown","actualCoverage","MainMenu","SwarmDashboard","ScreenUtils","s","createNavigationItem","key","label","action","options","b","f","filterEnabledItems","items","filter","item","disabled","findItemByKey","find"],"sources":["/home/mhugo/code/claude-code-flow/src/cli/ui/screens/index.ts"],"sourcesContent":["/**\n * UI Screens - Screen Exports\n * \n * This module exports all screen components for the Claude Flow CLI.\n * Screens represent full-page UI layouts and interactive interfaces.\n */\n\n// Screen components\nexport { MainMenu } from './main-menu';\nexport { SwarmDashboard } from './swarm-dashboard';\n\n// Screen prop types\nexport type { MainMenuProps } from './main-menu';\nexport type { SwarmDashboardProps } from './swarm-dashboard';\n\n// Common screen types\nexport interface BaseScreenProps {\n  onExit?: () => void;\n  onBack?: () => void;\n  title?: string;\n  showHeader?: boolean;\n  showFooter?: boolean;\n}\n\nexport interface NavigationItem {\n  key: string;\n  label: string;\n  description?: string;\n  action: () => void | Promise<void>;\n  disabled?: boolean;\n  icon?: string;\n}\n\nexport interface ScreenRoute {\n  path: string;\n  component: React.ComponentType<any>;\n  title: string;\n  description?: string;\n}\n\n// Screen navigation utilities\nexport const ScreenUtils = {\n  createNavigationItem: (\n    key: string,\n    label: string,\n    action: () => void | Promise<void>,\n    options: Partial<NavigationItem> = {}\n  ): NavigationItem => ({\n    key,\n    label,\n    action,\n    ...options,\n  }),\n  \n  filterEnabledItems: (items: NavigationItem[]): NavigationItem[] => {\n    return items.filter(item => !item.disabled);\n  },\n  \n  findItemByKey: (items: NavigationItem[], key: string): NavigationItem | undefined => {\n    return items.find(item => item.key === key);\n  },\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmDO;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAnDP;;;;;;AAOA;AACA,SAASE,QAAQ,QAAQ,aAAa;AACtC,SAASC,cAAc,QAAQ,mBAAmB;AA+BlD;AACA,OAAO,MAAMC,WAAW;AAAA;AAAA,CAAAJ,cAAA,GAAAK,CAAA,OAAG;EACzBC,oBAAoB,EAAEA,CACpBC,GAAW,EACXC,KAAa,EACbC,MAAkC,EAClCC,OAAA;EAAA;EAAA,CAAAV,cAAA,GAAAW,CAAA,UAAmC,EAAE,MACjB;IAAA;IAAAX,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAK,CAAA;IAAA;MACpBE,GAAG;MACHC,KAAK;MACLC,MAAM;MACN,GAAGC;KACJ;GAAC;EAEFG,kBAAkB,EAAGC,KAAuB,IAAsB;IAAA;IAAAd,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAK,CAAA;IAChE,OAAOS,KAAK,CAACC,MAAM,CAACC,IAAI,IAAI;MAAA;MAAAhB,cAAA,GAAAY,CAAA;MAAAZ,cAAA,GAAAK,CAAA;MAAA,QAACW,IAAI,CAACC,QAAQ;IAAR,CAAQ,CAAC;EAC7C,CAAC;EAEDC,aAAa,EAAEA,CAACJ,KAAuB,EAAEP,GAAW,KAAgC;IAAA;IAAAP,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAK,CAAA;IAClF,OAAOS,KAAK,CAACK,IAAI,CAACH,IAAI,IAAI;MAAA;MAAAhB,cAAA,GAAAY,CAAA;MAAAZ,cAAA,GAAAK,CAAA;MAAA,OAAAW,IAAI,CAACT,GAAG,KAAKA,GAAG;IAAH,CAAG,CAAC;EAC7C;CACD","ignoreList":[]}