{"version":3,"names":["cov_2ivmnq9li4","actualCoverage","SimpleTaskPlanner","agentManager","logger","constructor","f","s","generateTaskPlan","request","info","featureName","agentResult","tryAgentPlanning","b","success","taskMarkdown","method","error","warn","Error","message","String","generateBasicTasks","agentId","createAgent","name","type","capabilities","maxConcurrentTasks","priority","startAgent","task","id","Date","now","description","input","prompt","createSimplePrompt","metadata","result","executeTask","output","formatTaskOutput","stopAgent","designContent","requirements","includes","JSON","stringify","getStatus","hasAgentManager","available"],"sources":["/home/mhugo/code/claude-code-flow/src/maestro/services/SimpleTaskPlanner.ts"],"sourcesContent":["/**\n * Simple Task Planner - Streamlined Integration\n * \n * Lightweight task planning service that directly leverages existing\n * AgentManager task-planner template with minimal overhead.\n * \n * Key Features:\n * - Direct AgentManager integration without dual-system complexity\n * - Simple interface following Single Responsibility\n * - Minimal dependencies and initialization overhead\n * - Fast fallback with basic task generation\n */\n\nimport { AgentManager } from '../../agents/agent-manager.js';\nimport { ILogger } from '../../core/logger.js';\n\nexport interface TaskPlannerRequest {\n  featureName: string;\n  designContent: string;\n  requirements?: string;\n}\n\nexport interface TaskPlannerResponse {\n  success: boolean;\n  taskMarkdown: string;\n  method: 'agent' | 'fallback';\n}\n\n/**\n * Streamlined task planner with minimal overhead\n */\nexport class SimpleTaskPlanner {\n  \n  constructor(\n    private agentManager: AgentManager,\n    private logger: ILogger\n  ) {}\n\n  /**\n   * Generate task plan using direct agent coordination\n   */\n  async generateTaskPlan(request: TaskPlannerRequest): Promise<TaskPlannerResponse> {\n    this.logger.info(`Generating tasks for ${request.featureName}`);\n\n    try {\n      // Try direct AgentManager approach\n      const agentResult = await this.tryAgentPlanning(request);\n      if (agentResult) {\n        return {\n          success: true,\n          taskMarkdown: agentResult,\n          method: 'agent'\n        };\n      }\n    } catch (error) {\n      this.logger.warn(`Agent planning failed: ${error instanceof Error ? error.message : String(error)}`);\n    }\n\n    // Fast fallback to basic task generation\n    return {\n      success: true,\n      taskMarkdown: this.generateBasicTasks(request),\n      method: 'fallback'\n    };\n  }\n\n  /**\n   * Try using AgentManager task-planner template directly\n   */\n  private async tryAgentPlanning(request: TaskPlannerRequest): Promise<string | null> {\n    let agentId: string | null = null;\n    \n    try {\n      // Create task-planner agent\n      agentId = await this.agentManager.createAgent('task-planner', {\n        name: `Task Planner - ${request.featureName}`,\n        type: 'task-planner',\n        capabilities: ['project-management', 'task-breakdown'],\n        maxConcurrentTasks: 1,\n        priority: 90\n      });\n\n      if (!agentId) return null;\n\n      // Start agent\n      await this.agentManager.startAgent(agentId);\n\n      // Execute planning task\n      const task = {\n        id: `plan-${request.featureName}-${Date.now()}`,\n        type: 'task-planning',\n        description: `Generate tasks for ${request.featureName}`,\n        input: {\n          prompt: this.createSimplePrompt(request)\n        },\n        priority: 90,\n        metadata: { featureName: request.featureName }\n      };\n\n      const result = await this.agentManager.executeTask(agentId, task);\n      \n      if (result?.output) {\n        return this.formatTaskOutput(result.output, request.featureName);\n      }\n\n      return null;\n\n    } finally {\n      // Always cleanup agent\n      if (agentId) {\n        try {\n          await this.agentManager.stopAgent(agentId);\n        } catch (error) {\n          this.logger.warn(`Failed to cleanup agent ${agentId}: ${error instanceof Error ? error.message : String(error)}`);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create simple, focused planning prompt\n   */\n  private createSimplePrompt(request: TaskPlannerRequest): string {\n    return `Generate implementation tasks for: ${request.featureName}\n\nDesign:\n${request.designContent}\n\n${request.requirements ? `Requirements: ${request.requirements}\\n` : ''}\nCreate 5-8 specific, actionable tasks with acceptance criteria.\nFormat as markdown with checkboxes.`;\n  }\n\n  /**\n   * Format agent output to consistent markdown\n   */\n  private formatTaskOutput(output: any, featureName: string): string {\n    if (typeof output === 'string' && output.includes('# Implementation Tasks')) {\n      return output;\n    }\n\n    // Simple formatting if structured output\n    if (output && typeof output === 'object') {\n      return `# Implementation Tasks for ${featureName}\n\n${JSON.stringify(output, null, 2)}\n\n*Generated by AgentManager task-planner*`;\n    }\n\n    return String(output || this.generateBasicTasks({ featureName } as TaskPlannerRequest));\n  }\n\n  /**\n   * Generate basic task breakdown as fallback\n   */\n  private generateBasicTasks(request: TaskPlannerRequest): string {\n    return `# Implementation Tasks for ${request.featureName}\n\n## Task Breakdown\n\n1. **Setup & Architecture**\n   - [ ] Set up project structure and dependencies\n   - [ ] Define core interfaces and types\n\n2. **Core Implementation**\n   - [ ] Implement main functionality\n   - [ ] Add input validation and error handling\n\n3. **Integration**\n   - [ ] Integrate with existing systems  \n   - [ ] Add configuration and environment support\n\n4. **Quality Assurance**\n   - [ ] Write comprehensive tests\n   - [ ] Add logging and monitoring\n\n5. **Documentation & Deployment**\n   - [ ] Create user documentation\n   - [ ] Prepare for deployment\n\n*Generated by fallback task generation*`;\n  }\n\n  /**\n   * Get simple status information\n   */\n  async getStatus(): Promise<{ available: boolean; method: string }> {\n    try {\n      // Simple availability check\n      const hasAgentManager = !!this.agentManager;\n      return {\n        available: hasAgentManager,\n        method: hasAgentManager ? 'agent' : 'fallback'\n      };\n    } catch {\n      return { available: false, method: 'fallback' };\n    }\n  }\n}"],"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","ignoreList":[]}