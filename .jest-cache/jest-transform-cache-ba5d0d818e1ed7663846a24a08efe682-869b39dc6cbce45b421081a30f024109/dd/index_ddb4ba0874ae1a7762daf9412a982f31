b7ac0ddc968609d86fce49cac48d7209
/* istanbul ignore next */
function cov_1036xet08z() {
  var path = "/home/mhugo/code/claude-code-flow/src/cli/utils/index.ts";
  var hash = "9c84ca5481736a59cdcaa3baf8e6775b56b7f9df";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/cli/utils/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 76
        }
      },
      "1": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 76
        }
      },
      "2": {
        start: {
          line: 21,
          column: 52
        },
        end: {
          line: 21,
          column: 75
        }
      },
      "3": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "4": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "5": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "6": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "7": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "8": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "9": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "10": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "11": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 20
        }
      },
      "13": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "14": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 32
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "16": {
        start: {
          line: 49,
          column: 37
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "17": {
        start: {
          line: 56,
          column: 19
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "18": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "19": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 27
        }
      },
      "22": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 24
        }
      },
      "23": {
        start: {
          line: 69,
          column: 18
        },
        end: {
          line: 69,
          column: 82
        }
      },
      "24": {
        start: {
          line: 70,
          column: 17
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "25": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "26": {
        start: {
          line: 71,
          column: 17
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 73
        }
      },
      "28": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "29": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "31": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "32": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "33": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "34": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 48
        }
      },
      "35": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "36": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "37": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 25
        }
      },
      "38": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "39": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "40": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 50
        }
      },
      "41": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 22
        }
      },
      "42": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 15
        }
      },
      "43": {
        start: {
          line: 104,
          column: 19
        },
        end: {
          line: 104,
          column: 21
        }
      },
      "44": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "45": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "46": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "47": {
        start: {
          line: 108,
          column: 30
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "48": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 114,
          column: 17
        }
      },
      "49": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 70
        }
      },
      "50": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 40
        }
      },
      "51": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 18
        }
      },
      "52": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "53": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 20
        }
      },
      "54": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "55": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "56": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "57": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 34
        }
      },
      "58": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "59": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 47
        }
      },
      "60": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "61": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 54
        }
      },
      "62": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 68
        }
      },
      "63": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 73
        }
      },
      "64": {
        start: {
          line: 154,
          column: 51
        },
        end: {
          line: 154,
          column: 71
        }
      },
      "65": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 163,
          column: 31
        }
      },
      "66": {
        start: {
          line: 169,
          column: 19
        },
        end: {
          line: 169,
          column: 21
        }
      },
      "67": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "68": {
        start: {
          line: 170,
          column: 17
        },
        end: {
          line: 170,
          column: 18
        }
      },
      "69": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 27
        }
      },
      "70": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "71": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 36
        }
      },
      "72": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 39
        }
      },
      "73": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "74": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 38
        }
      },
      "75": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 20
        }
      },
      "76": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 35
        }
      },
      "77": {
        start: {
          line: 183,
          column: 13
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "78": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 36
        }
      },
      "79": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 31
        }
      },
      "80": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 22
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 76
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 21,
            column: 42
          }
        },
        loc: {
          start: {
            line: 21,
            column: 52
          },
          end: {
            line: 21,
            column: 75
          }
        },
        line: 21
      },
      "2": {
        name: "retry",
        decl: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 66
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 25
      },
      "3": {
        name: "debounce",
        decl: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 24
          }
        },
        loc: {
          start: {
            line: 45,
            column: 36
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 11
          },
          end: {
            line: 47,
            column: 12
          }
        },
        loc: {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 32
          }
        },
        loc: {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 48
          }
        },
        line: 49
      },
      "6": {
        name: "throttle",
        decl: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 24
          }
        },
        loc: {
          start: {
            line: 55,
            column: 36
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 57,
            column: 11
          },
          end: {
            line: 57,
            column: 12
          }
        },
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 57
      },
      "8": {
        name: "generateId",
        decl: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 26
          }
        },
        loc: {
          start: {
            line: 68,
            column: 39
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 68
      },
      "9": {
        name: "deepClone",
        decl: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 25
          }
        },
        loc: {
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 24
          }
        },
        loc: {
          start: {
            line: 87,
            column: 31
          },
          end: {
            line: 87,
            column: 46
          }
        },
        line: 87
      },
      "11": {
        name: "deepMerge",
        decl: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 25
          }
        },
        loc: {
          start: {
            line: 103,
            column: 38
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 103
      },
      "12": {
        name: "isEmpty",
        decl: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 123,
            column: 23
          }
        },
        loc: {
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 123
      },
      "13": {
        name: "capitalize",
        decl: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 26
          }
        },
        loc: {
          start: {
            line: 141,
            column: 32
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 141
      },
      "14": {
        name: "camelToKebab",
        decl: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 28
          }
        },
        loc: {
          start: {
            line: 147,
            column: 34
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 147
      },
      "15": {
        name: "kebabToCamel",
        decl: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 153,
            column: 28
          }
        },
        loc: {
          start: {
            line: 153,
            column: 34
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 153
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 154,
            column: 36
          },
          end: {
            line: 154,
            column: 37
          }
        },
        loc: {
          start: {
            line: 154,
            column: 51
          },
          end: {
            line: 154,
            column: 71
          }
        },
        line: 154
      },
      "17": {
        name: "sanitizeFilename",
        decl: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 159,
            column: 32
          }
        },
        loc: {
          start: {
            line: 159,
            column: 38
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 159
      },
      "18": {
        name: "parseArgs",
        decl: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 25
          }
        },
        loc: {
          start: {
            line: 168,
            column: 32
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 168
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 25,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 45
          },
          end: {
            line: 25,
            column: 46
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 60
          },
          end: {
            line: 25,
            column: 64
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 27
          },
          end: {
            line: 68,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 37
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 20
          }
        }, {
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 47
          }
        }],
        line: 80
      },
      "7": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "8": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "9": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "10": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 114,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 114,
            column: 17
          }
        }, {
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 114,
            column: 17
          }
        }],
        line: 109
      },
      "13": {
        loc: {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 109,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 109,
            column: 34
          }
        }, {
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 109,
            column: 63
          }
        }, {
          start: {
            line: 109,
            column: 67
          },
          end: {
            line: 109,
            column: 88
          }
        }],
        line: 109
      },
      "14": {
        loc: {
          start: {
            line: 110,
            column: 44
          },
          end: {
            line: 110,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 44
          },
          end: {
            line: 110,
            column: 55
          }
        }, {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 61
          }
        }],
        line: 110
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 22
          }
        }, {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 45
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "18": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "19": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "20": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 186,
            column: 9
          }
        }],
        line: 172
      },
      "21": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: 179,
            column: 17
          },
          end: {
            line: 181,
            column: 13
          }
        }],
        line: 175
      },
      "22": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 23
          }
        }, {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 51
          }
        }],
        line: 175
      },
      "23": {
        loc: {
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/cli/utils/index.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/cli/utils/index.ts"],
      sourcesContent: ["/**\n * CLI Utilities Index\n * \n * This module re-exports all CLI utility functions for convenient importing.\n * Provides common utilities for logging, file operations, validation, and formatting.\n */\n\n// Logging utilities\nexport {\n  createLogger,\n  LogLevel,\n  type Logger,\n  type LoggerConfig,\n  formatMessage,\n  colorize,\n  Colors,\n} from './logger.js';\n\n// File system utilities\nexport {\n  readFile,\n  writeFile,\n  fileExists,\n  directoryExists,\n  createDirectory,\n  ensureDirectory,\n  copyFile,\n  moveFile,\n  deleteFile,\n  deleteDirectory,\n  listFiles,\n  listDirectories,\n  getFileStats,\n  isFile,\n  isDirectory,\n  getFileExtension,\n  getFileName,\n  getDirectoryName,\n  joinPath,\n  resolvePath,\n  relativePath,\n  type FileStats,\n  type DirectoryListing,\n} from './file-system.js';\n\n// Validation utilities\nexport {\n  validateRequired,\n  validateString,\n  validateNumber,\n  validateBoolean,\n  validateArray,\n  validateObject,\n  validateUrl,\n  validateEmail,\n  validateFilePath,\n  validateDirectoryPath,\n  validatePort,\n  validateVersion,\n  validateUuid,\n  isValidJson,\n  parseJson,\n  validateJsonSchema,\n  type ValidationRule,\n  type ValidationContext,\n  type ValidatorFunction,\n} from './validation.js';\n\n// Formatting utilities\nexport {\n  formatTable,\n  formatList,\n  formatJson,\n  formatYaml,\n  formatMarkdown,\n  formatProgress,\n  formatDuration,\n  formatBytes,\n  formatDate,\n  formatRelativeTime,\n  truncateText,\n  padText,\n  wrapText,\n  alignText,\n  stripAnsi,\n  getTerminalWidth,\n  type TableOptions,\n  type ListOptions,\n  type ProgressOptions,\n  type FormattingOptions,\n  type TextAlignment,\n} from './formatting.js';\n\n/**\n * Common utility functions\n */\n\n/**\n * Sleep for a specified number of milliseconds\n */\nexport const sleep = (ms: number): Promise<void> => \n  new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * Retry a function with exponential backoff\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  maxRetries: number = 3,\n  baseDelay: number = 1000\n): Promise<T> {\n  let lastError: Error;\n  \n  for (let attempt = 0; attempt <= maxRetries; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error as Error;\n      \n      if (attempt === maxRetries) {\n        throw lastError;\n      }\n      \n      const delay = baseDelay * Math.pow(2, attempt);\n      await sleep(delay);\n    }\n  }\n  \n  throw lastError!;\n}\n\n/**\n * Debounce a function call\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout;\n  \n  return (...args: Parameters<T>): void => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), delay);\n  };\n}\n\n/**\n * Throttle a function call\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let lastCall = 0;\n  \n  return (...args: Parameters<T>): void => {\n    const now = Date.now();\n    \n    if (now - lastCall >= delay) {\n      lastCall = now;\n      fn(...args);\n    }\n  };\n}\n\n/**\n * Generate a random ID\n */\nexport function generateId(length: number = 8): string {\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = '';\n  \n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  \n  return result;\n}\n\n/**\n * Deep clone an object\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  \n  if (obj instanceof Date) {\n    return new Date(obj.getTime()) as T;\n  }\n  \n  if (obj instanceof Array) {\n    return obj.map(item => deepClone(item)) as T;\n  }\n  \n  if (typeof obj === 'object') {\n    const cloned = {} as T;\n    \n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cloned[key] = deepClone(obj[key]);\n      }\n    }\n    \n    return cloned;\n  }\n  \n  return obj;\n}\n\n/**\n * Merge objects deeply\n */\nexport function deepMerge<T>(...objects: Partial<T>[]): T {\n  const result = {} as T;\n  \n  for (const obj of objects) {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        \n        if (value !== null && typeof value === 'object' && !Array.isArray(value)) {\n          result[key] = deepMerge(result[key] || {} as any, value);\n        } else {\n          result[key] = value as T[Extract<keyof T, string>];\n        }\n      }\n    }\n  }\n  \n  return result;\n}\n\n/**\n * Check if a value is empty (null, undefined, empty string, empty array, empty object)\n */\nexport function isEmpty(value: unknown): boolean {\n  if (value === null || value === undefined) {\n    return true;\n  }\n  \n  if (typeof value === 'string') {\n    return value.trim() === '';\n  }\n  \n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n  \n  if (typeof value === 'object') {\n    return Object.keys(value).length === 0;\n  }\n  \n  return false;\n}\n\n/**\n * Capitalize the first letter of a string\n */\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Convert camelCase to kebab-case\n */\nexport function camelToKebab(str: string): string {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n/**\n * Convert kebab-case to camelCase\n */\nexport function kebabToCamel(str: string): string {\n  return str.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n\n/**\n * Sanitize a string for use as a filename\n */\nexport function sanitizeFilename(str: string): string {\n  return str\n    .replace(/[^a-zA-Z0-9.-]/g, '-')\n    .replace(/-+/g, '-')\n    .replace(/^-|-$/g, '');\n}\n\n/**\n * Parse command line arguments into key-value pairs\n */\nexport function parseArgs(args: string[]): Record<string, string | boolean> {\n  const result: Record<string, string | boolean> = {};\n  \n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    \n    if (arg.startsWith('--')) {\n      const key = arg.slice(2);\n      const nextArg = args[i + 1];\n      \n      if (nextArg && !nextArg.startsWith('-')) {\n        result[key] = nextArg;\n        i++; // Skip next argument as it's the value\n      } else {\n        result[key] = true;\n      }\n    } else if (arg.startsWith('-')) {\n      const key = arg.slice(1);\n      result[key] = true;\n    }\n  }\n  \n  return result;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c84ca5481736a59cdcaa3baf8e6775b56b7f9df"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1036xet08z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1036xet08z();
/**
 * CLI Utilities Index
 *
 * This module re-exports all CLI utility functions for convenient importing.
 * Provides common utilities for logging, file operations, validation, and formatting.
 */
// Logging utilities
export { createLogger, LogLevel, formatMessage, colorize, Colors } from './logger.js';
// File system utilities
export { readFile, writeFile, fileExists, directoryExists, createDirectory, ensureDirectory, copyFile, moveFile, deleteFile, deleteDirectory, listFiles, listDirectories, getFileStats, isFile, isDirectory, getFileExtension, getFileName, getDirectoryName, joinPath, resolvePath, relativePath } from './file-system.js';
// Validation utilities
export { validateRequired, validateString, validateNumber, validateBoolean, validateArray, validateObject, validateUrl, validateEmail, validateFilePath, validateDirectoryPath, validatePort, validateVersion, validateUuid, isValidJson, parseJson, validateJsonSchema } from './validation.js';
// Formatting utilities
export { formatTable, formatList, formatJson, formatYaml, formatMarkdown, formatProgress, formatDuration, formatBytes, formatDate, formatRelativeTime, truncateText, padText, wrapText, alignText, stripAnsi, getTerminalWidth } from './formatting.js';
/**
 * Common utility functions
 */
/**
 * Sleep for a specified number of milliseconds
 */
/* istanbul ignore next */
cov_1036xet08z().s[0]++;
export const sleep = ms => {
  /* istanbul ignore next */
  cov_1036xet08z().f[0]++;
  cov_1036xet08z().s[1]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_1036xet08z().f[1]++;
    cov_1036xet08z().s[2]++;
    return setTimeout(resolve, ms);
  });
};
/**
 * Retry a function with exponential backoff
 */
export async function retry(fn, maxRetries =
/* istanbul ignore next */
(cov_1036xet08z().b[0][0]++, 3), baseDelay =
/* istanbul ignore next */
(cov_1036xet08z().b[1][0]++, 1000)) {
  /* istanbul ignore next */
  cov_1036xet08z().f[2]++;
  let lastError;
  /* istanbul ignore next */
  cov_1036xet08z().s[3]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_1036xet08z().s[4]++, 0); attempt <= maxRetries; attempt++) {
    /* istanbul ignore next */
    cov_1036xet08z().s[5]++;
    try {
      /* istanbul ignore next */
      cov_1036xet08z().s[6]++;
      return await fn();
    } catch (error) {
      /* istanbul ignore next */
      cov_1036xet08z().s[7]++;
      lastError = error;
      /* istanbul ignore next */
      cov_1036xet08z().s[8]++;
      if (attempt === maxRetries) {
        /* istanbul ignore next */
        cov_1036xet08z().b[2][0]++;
        cov_1036xet08z().s[9]++;
        throw lastError;
      } else
      /* istanbul ignore next */
      {
        cov_1036xet08z().b[2][1]++;
      }
      const delay =
      /* istanbul ignore next */
      (cov_1036xet08z().s[10]++, baseDelay * Math.pow(2, attempt));
      /* istanbul ignore next */
      cov_1036xet08z().s[11]++;
      await sleep(delay);
    }
  }
  /* istanbul ignore next */
  cov_1036xet08z().s[12]++;
  throw lastError;
}
/**
 * Debounce a function call
 */
export function debounce(fn, delay) {
  /* istanbul ignore next */
  cov_1036xet08z().f[3]++;
  let timeoutId;
  /* istanbul ignore next */
  cov_1036xet08z().s[13]++;
  return (...args) => {
    /* istanbul ignore next */
    cov_1036xet08z().f[4]++;
    cov_1036xet08z().s[14]++;
    clearTimeout(timeoutId);
    /* istanbul ignore next */
    cov_1036xet08z().s[15]++;
    timeoutId = setTimeout(() => {
      /* istanbul ignore next */
      cov_1036xet08z().f[5]++;
      cov_1036xet08z().s[16]++;
      return fn(...args);
    }, delay);
  };
}
/**
 * Throttle a function call
 */
export function throttle(fn, delay) {
  /* istanbul ignore next */
  cov_1036xet08z().f[6]++;
  let lastCall =
  /* istanbul ignore next */
  (cov_1036xet08z().s[17]++, 0);
  /* istanbul ignore next */
  cov_1036xet08z().s[18]++;
  return (...args) => {
    /* istanbul ignore next */
    cov_1036xet08z().f[7]++;
    const now =
    /* istanbul ignore next */
    (cov_1036xet08z().s[19]++, Date.now());
    /* istanbul ignore next */
    cov_1036xet08z().s[20]++;
    if (now - lastCall >= delay) {
      /* istanbul ignore next */
      cov_1036xet08z().b[3][0]++;
      cov_1036xet08z().s[21]++;
      lastCall = now;
      /* istanbul ignore next */
      cov_1036xet08z().s[22]++;
      fn(...args);
    } else
    /* istanbul ignore next */
    {
      cov_1036xet08z().b[3][1]++;
    }
  };
}
/**
 * Generate a random ID
 */
export function generateId(length =
/* istanbul ignore next */
(cov_1036xet08z().b[4][0]++, 8)) {
  /* istanbul ignore next */
  cov_1036xet08z().f[8]++;
  const chars =
  /* istanbul ignore next */
  (cov_1036xet08z().s[23]++, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
  let result =
  /* istanbul ignore next */
  (cov_1036xet08z().s[24]++, '');
  /* istanbul ignore next */
  cov_1036xet08z().s[25]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1036xet08z().s[26]++, 0); i < length; i++) {
    /* istanbul ignore next */
    cov_1036xet08z().s[27]++;
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  /* istanbul ignore next */
  cov_1036xet08z().s[28]++;
  return result;
}
/**
 * Deep clone an object
 */
export function deepClone(obj) {
  /* istanbul ignore next */
  cov_1036xet08z().f[9]++;
  cov_1036xet08z().s[29]++;
  if (
  /* istanbul ignore next */
  (cov_1036xet08z().b[6][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1036xet08z().b[6][1]++, typeof obj !== 'object')) {
    /* istanbul ignore next */
    cov_1036xet08z().b[5][0]++;
    cov_1036xet08z().s[30]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[5][1]++;
  }
  cov_1036xet08z().s[31]++;
  if (obj instanceof Date) {
    /* istanbul ignore next */
    cov_1036xet08z().b[7][0]++;
    cov_1036xet08z().s[32]++;
    return new Date(obj.getTime());
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[7][1]++;
  }
  cov_1036xet08z().s[33]++;
  if (obj instanceof Array) {
    /* istanbul ignore next */
    cov_1036xet08z().b[8][0]++;
    cov_1036xet08z().s[34]++;
    return obj.map(item => {
      /* istanbul ignore next */
      cov_1036xet08z().f[10]++;
      cov_1036xet08z().s[35]++;
      return deepClone(item);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[8][1]++;
  }
  cov_1036xet08z().s[36]++;
  if (typeof obj === 'object') {
    /* istanbul ignore next */
    cov_1036xet08z().b[9][0]++;
    const cloned =
    /* istanbul ignore next */
    (cov_1036xet08z().s[37]++, {});
    /* istanbul ignore next */
    cov_1036xet08z().s[38]++;
    for (const key in obj) {
      /* istanbul ignore next */
      cov_1036xet08z().s[39]++;
      if (obj.hasOwnProperty(key)) {
        /* istanbul ignore next */
        cov_1036xet08z().b[10][0]++;
        cov_1036xet08z().s[40]++;
        cloned[key] = deepClone(obj[key]);
      } else
      /* istanbul ignore next */
      {
        cov_1036xet08z().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1036xet08z().s[41]++;
    return cloned;
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[9][1]++;
  }
  cov_1036xet08z().s[42]++;
  return obj;
}
/**
 * Merge objects deeply
 */
export function deepMerge(...objects) {
  /* istanbul ignore next */
  cov_1036xet08z().f[11]++;
  const result =
  /* istanbul ignore next */
  (cov_1036xet08z().s[43]++, {});
  /* istanbul ignore next */
  cov_1036xet08z().s[44]++;
  for (const obj of objects) {
    /* istanbul ignore next */
    cov_1036xet08z().s[45]++;
    for (const key in obj) {
      /* istanbul ignore next */
      cov_1036xet08z().s[46]++;
      if (obj.hasOwnProperty(key)) {
        /* istanbul ignore next */
        cov_1036xet08z().b[11][0]++;
        const value =
        /* istanbul ignore next */
        (cov_1036xet08z().s[47]++, obj[key]);
        /* istanbul ignore next */
        cov_1036xet08z().s[48]++;
        if (
        /* istanbul ignore next */
        (cov_1036xet08z().b[13][0]++, value !== null) &&
        /* istanbul ignore next */
        (cov_1036xet08z().b[13][1]++, typeof value === 'object') &&
        /* istanbul ignore next */
        (cov_1036xet08z().b[13][2]++, !Array.isArray(value))) {
          /* istanbul ignore next */
          cov_1036xet08z().b[12][0]++;
          cov_1036xet08z().s[49]++;
          result[key] = deepMerge(
          /* istanbul ignore next */
          (cov_1036xet08z().b[14][0]++, result[key]) ||
          /* istanbul ignore next */
          (cov_1036xet08z().b[14][1]++, {}), value);
        } else {
          /* istanbul ignore next */
          cov_1036xet08z().b[12][1]++;
          cov_1036xet08z().s[50]++;
          result[key] = value;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1036xet08z().b[11][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1036xet08z().s[51]++;
  return result;
}
/**
 * Check if a value is empty (null, undefined, empty string, empty array, empty object)
 */
export function isEmpty(value) {
  /* istanbul ignore next */
  cov_1036xet08z().f[12]++;
  cov_1036xet08z().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_1036xet08z().b[16][0]++, value === null) ||
  /* istanbul ignore next */
  (cov_1036xet08z().b[16][1]++, value === undefined)) {
    /* istanbul ignore next */
    cov_1036xet08z().b[15][0]++;
    cov_1036xet08z().s[53]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[15][1]++;
  }
  cov_1036xet08z().s[54]++;
  if (typeof value === 'string') {
    /* istanbul ignore next */
    cov_1036xet08z().b[17][0]++;
    cov_1036xet08z().s[55]++;
    return value.trim() === '';
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[17][1]++;
  }
  cov_1036xet08z().s[56]++;
  if (Array.isArray(value)) {
    /* istanbul ignore next */
    cov_1036xet08z().b[18][0]++;
    cov_1036xet08z().s[57]++;
    return value.length === 0;
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[18][1]++;
  }
  cov_1036xet08z().s[58]++;
  if (typeof value === 'object') {
    /* istanbul ignore next */
    cov_1036xet08z().b[19][0]++;
    cov_1036xet08z().s[59]++;
    return Object.keys(value).length === 0;
  } else
  /* istanbul ignore next */
  {
    cov_1036xet08z().b[19][1]++;
  }
  cov_1036xet08z().s[60]++;
  return false;
}
/**
 * Capitalize the first letter of a string
 */
export function capitalize(str) {
  /* istanbul ignore next */
  cov_1036xet08z().f[13]++;
  cov_1036xet08z().s[61]++;
  return str.charAt(0).toUpperCase() + str.slice(1);
}
/**
 * Convert camelCase to kebab-case
 */
export function camelToKebab(str) {
  /* istanbul ignore next */
  cov_1036xet08z().f[14]++;
  cov_1036xet08z().s[62]++;
  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();
}
/**
 * Convert kebab-case to camelCase
 */
export function kebabToCamel(str) {
  /* istanbul ignore next */
  cov_1036xet08z().f[15]++;
  cov_1036xet08z().s[63]++;
  return str.replace(/-([a-z])/g, (_, letter) => {
    /* istanbul ignore next */
    cov_1036xet08z().f[16]++;
    cov_1036xet08z().s[64]++;
    return letter.toUpperCase();
  });
}
/**
 * Sanitize a string for use as a filename
 */
export function sanitizeFilename(str) {
  /* istanbul ignore next */
  cov_1036xet08z().f[17]++;
  cov_1036xet08z().s[65]++;
  return str.replace(/[^a-zA-Z0-9.-]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, '');
}
/**
 * Parse command line arguments into key-value pairs
 */
export function parseArgs(args) {
  /* istanbul ignore next */
  cov_1036xet08z().f[18]++;
  const result =
  /* istanbul ignore next */
  (cov_1036xet08z().s[66]++, {});
  /* istanbul ignore next */
  cov_1036xet08z().s[67]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1036xet08z().s[68]++, 0); i < args.length; i++) {
    const arg =
    /* istanbul ignore next */
    (cov_1036xet08z().s[69]++, args[i]);
    /* istanbul ignore next */
    cov_1036xet08z().s[70]++;
    if (arg.startsWith('--')) {
      /* istanbul ignore next */
      cov_1036xet08z().b[20][0]++;
      const key =
      /* istanbul ignore next */
      (cov_1036xet08z().s[71]++, arg.slice(2));
      const nextArg =
      /* istanbul ignore next */
      (cov_1036xet08z().s[72]++, args[i + 1]);
      /* istanbul ignore next */
      cov_1036xet08z().s[73]++;
      if (
      /* istanbul ignore next */
      (cov_1036xet08z().b[22][0]++, nextArg) &&
      /* istanbul ignore next */
      (cov_1036xet08z().b[22][1]++, !nextArg.startsWith('-'))) {
        /* istanbul ignore next */
        cov_1036xet08z().b[21][0]++;
        cov_1036xet08z().s[74]++;
        result[key] = nextArg;
        /* istanbul ignore next */
        cov_1036xet08z().s[75]++;
        i++; // Skip next argument as it's the value
      } else {
        /* istanbul ignore next */
        cov_1036xet08z().b[21][1]++;
        cov_1036xet08z().s[76]++;
        result[key] = true;
      }
    } else {
      /* istanbul ignore next */
      cov_1036xet08z().b[20][1]++;
      cov_1036xet08z().s[77]++;
      if (arg.startsWith('-')) {
        /* istanbul ignore next */
        cov_1036xet08z().b[23][0]++;
        const key =
        /* istanbul ignore next */
        (cov_1036xet08z().s[78]++, arg.slice(1));
        /* istanbul ignore next */
        cov_1036xet08z().s[79]++;
        result[key] = true;
      } else
      /* istanbul ignore next */
      {
        cov_1036xet08z().b[23][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1036xet08z().s[80]++;
  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,