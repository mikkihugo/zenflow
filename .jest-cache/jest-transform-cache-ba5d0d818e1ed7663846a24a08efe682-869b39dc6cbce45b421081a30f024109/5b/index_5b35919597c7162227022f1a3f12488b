c96e85e9a2f18dbc8194cb726df48cf5
/* istanbul ignore next */
function cov_nmq820egx() {
  var path = "/home/mhugo/code/claude-code-flow/src/hooks/index.ts";
  var hash = "b06778c60c5f085794a910700450685c9a6ac2fa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/hooks/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "1": {
        start: {
          line: 44,
          column: 35
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "2": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "3": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "4": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 142
        }
      },
      "5": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "6": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 141
        }
      },
      "7": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "8": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 135
        }
      },
      "9": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 42
        }
      },
      "10": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 136
        }
      },
      "11": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 43
        }
      },
      "12": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 141
        }
      },
      "13": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 48
        }
      },
      "14": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 144
        }
      },
      "15": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 49
        }
      },
      "16": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 117
        }
      },
      "17": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 132,
          column: 6
        }
      },
      "18": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 85
        }
      },
      "19": {
        start: {
          line: 130,
          column: 21
        },
        end: {
          line: 130,
          column: 96
        }
      },
      "20": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 131,
          column: 83
        }
      },
      "21": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 123
        }
      },
      "22": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 118
        }
      },
      "23": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "24": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 166,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 47
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 83
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 53
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 90
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 38
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 97
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 39
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 104
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 44
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 111
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 118
      },
      "6": {
        name: "createHookEngine",
        decl: {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 126,
            column: 32
          }
        },
        loc: {
          start: {
            line: 126,
            column: 41
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 126
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 129,
            column: 23
          }
        },
        loc: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 129,
            column: 85
          }
        },
        line: 129
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 130,
            column: 16
          }
        },
        loc: {
          start: {
            line: 130,
            column: 21
          },
          end: {
            line: 130,
            column: 96
          }
        },
        line: 130
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 131,
            column: 14
          },
          end: {
            line: 131,
            column: 15
          }
        },
        loc: {
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 131,
            column: 83
          }
        },
        line: 131
      },
      "10": {
        name: "setupDefaultHooks",
        decl: {
          start: {
            line: 137,
            column: 22
          },
          end: {
            line: 137,
            column: 39
          }
        },
        loc: {
          start: {
            line: 137,
            column: 48
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 137
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/hooks/index.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/hooks/index.ts"],
      sourcesContent: ["/**\n * Legacy Hook System - Migration Notice\n * \n * This hook system has been consolidated with the more advanced agentic-flow-hooks system.\n * All functionality is now available through the modern implementation at:\n * src/services/agentic-flow-hooks/\n * \n * This file provides backward compatibility redirects while we complete the migration.\n */\n\n// Re-export the modern agentic-flow-hooks system\nexport {\n  agenticHookManager,\n  initializeAgenticFlowHooks,\n} from '../services/agentic-flow-hooks/index.js';\n\n// Re-export modern types with compatibility aliases\nexport type {\n  AgenticHookContext as HookExecutionContext,\n  HookRegistration as AgentHook,\n  HookPayload as EventPayload,\n  AgenticHookType as HookTrigger,\n  HookHandlerResult as HookExecutionResult,\n} from '../services/agentic-flow-hooks/types.js';\n\n// Legacy hook templates for backward compatibility\nexport const QUALITY_HOOKS = {\n  CODE_QUALITY: {\n    name: 'Code Quality Monitor',\n    description: 'Automatically runs code quality checks on file changes',\n    type: 'workflow-step' as const,\n    priority: 8,\n    enabled: true\n  },\n  SECURITY_SCAN: {\n    name: 'Security Scanner', \n    description: 'Scans for security vulnerabilities and credential leaks',\n    type: 'workflow-step' as const,\n    priority: 9,\n    enabled: true\n  },\n  DOCUMENTATION_SYNC: {\n    name: 'Documentation Sync',\n    description: 'Automatically updates documentation when specifications change',\n    type: 'workflow-step' as const,\n    priority: 7,\n    enabled: true\n  },\n  PERFORMANCE_MONITOR: {\n    name: 'Performance Monitor',\n    description: 'Analyzes performance impact of code changes', \n    type: 'workflow-step' as const,\n    priority: 6,\n    enabled: true\n  }\n};\n\n// Legacy constants for backward compatibility\nexport const DEFAULT_HOOK_CONFIG = {\n  maxConcurrentHooks: 10,\n  defaultThrottleMs: 1000,\n  defaultDebounceMs: 500,\n  eventQueueSize: 1000,\n  agentPoolSize: 50,\n  enableMetrics: true,\n  enablePersistence: true,\n  logLevel: 'info' as const,\n  watchPatterns: ['**/*.md', '**/*.ts', '**/*.js', '**/*.json'],\n  ignorePatterns: ['node_modules/**', '.git/**', 'dist/**', 'build/**']\n};\n\nexport const HOOK_TRIGGERS = {\n  FILE_SAVE: 'workflow-step',\n  FILE_CHANGE: 'workflow-step',\n  FILE_CREATE: 'workflow-start',\n  FILE_DELETE: 'workflow-complete',\n  TASK_COMPLETE: 'workflow-complete',\n  TASK_FAIL: 'workflow-error',\n  SPEC_UPDATE: 'workflow-step',\n  CODE_CHANGE: 'workflow-step',\n  AGENT_SPAWN: 'workflow-start',\n  WORKFLOW_PHASE: 'workflow-step',\n  TIME_INTERVAL: 'performance-metric'\n} as const;\n\nexport const AGENT_TYPES = {\n  QUALITY_ASSURANCE: 'quality_assurance',\n  SECURITY_SCAN: 'security_scan', \n  DOCUMENTATION_SYNC: 'documentation_sync',\n  PERFORMANCE_ANALYSIS: 'performance_analysis'\n} as const;\n\n/**\n * Migration utility class\n * Provides backward compatibility while encouraging migration to agentic-flow-hooks\n */\nexport class HookUtils {\n  /**\n   * @deprecated Use agenticHookManager.register() instead\n   */\n  static createFilePatternCondition(pattern: string) {\n    console.warn('HookUtils.createFilePatternCondition is deprecated. Use agenticHookManager.register() with proper HookFilter instead.');\n    return { type: 'file_pattern', pattern };\n  }\n\n  /**\n   * @deprecated Use agenticHookManager.register() instead\n   */\n  static createSpawnAgentAction(agentType: string, config: Record<string, any>) {\n    console.warn('HookUtils.createSpawnAgentAction is deprecated. Use agenticHookManager.register() with proper hook handlers instead.');\n    return { type: 'spawn_agent', agentType, agentConfig: config };\n  }\n\n  /**\n   * @deprecated Use agenticHookManager.register() instead\n   */\n  static createQualityHook(options: any) {\n    console.warn('HookUtils.createQualityHook is deprecated. Use agenticHookManager.register() with workflow-step hooks instead.');\n    return QUALITY_HOOKS.CODE_QUALITY;\n  }\n\n  /**\n   * @deprecated Use agenticHookManager.register() instead  \n   */\n  static createSecurityHook(options: any) {\n    console.warn('HookUtils.createSecurityHook is deprecated. Use agenticHookManager.register() with workflow-step hooks instead.');\n    return QUALITY_HOOKS.SECURITY_SCAN;\n  }\n\n  /**\n   * @deprecated Use agenticHookManager.register() instead\n   */\n  static createDocumentationHook(options: any) {\n    console.warn('HookUtils.createDocumentationHook is deprecated. Use agenticHookManager.register() with workflow-step hooks instead.');\n    return QUALITY_HOOKS.DOCUMENTATION_SYNC;\n  }\n\n  /**\n   * @deprecated Use agenticHookManager.register() instead\n   */\n  static createPerformanceHook(options: any) {\n    console.warn('HookUtils.createPerformanceHook is deprecated. Use agenticHookManager.register() with performance-metric hooks instead.');\n    return QUALITY_HOOKS.PERFORMANCE_MONITOR;\n  }\n}\n\n/**\n * @deprecated Use initializeAgenticFlowHooks() instead\n */\nexport function createHookEngine(config?: any) {\n  console.warn('createHookEngine is deprecated. Use initializeAgenticFlowHooks() and agenticHookManager instead.');\n  return {\n    registerHook: () => console.warn('Use agenticHookManager.register() instead'),\n    start: () => console.warn('Hooks are automatically initialized with agenticHookManager'),\n    stop: () => console.warn('Use agenticHookManager shutdown methods instead')\n  };\n}\n\n/**\n * @deprecated Use agenticHookManager.register() for individual hooks instead\n */\nexport async function setupDefaultHooks(engine?: any) {\n  console.warn('setupDefaultHooks is deprecated. Use agenticHookManager.register() to register specific hooks instead.');\n  console.info('Consider migrating to agentic-flow-hooks for advanced pipeline management and neural integration.');\n  return 4; // Return count for backward compatibility\n}\n\n// Migration notice for users\nconsole.info(`\n\uD83D\uDD04 MIGRATION NOTICE: Hook System Consolidation\n\nThe legacy hook system in src/hooks/ has been consolidated with the advanced\nagentic-flow-hooks system for better performance and functionality.\n\n\u2705 New System Features:\n  - Advanced pipeline management\n  - Neural pattern learning  \n  - Performance optimization\n  - Memory coordination hooks\n  - LLM integration hooks\n\n\uD83D\uDCD6 Migration Guide:\n  - Replace AgentHookEngine with agenticHookManager\n  - Update hook registrations to use modern HookRegistration interface\n  - Leverage new hook types: LLM, memory, neural, performance, workflow\n  - See docs/maestro/specs/hooks-refactoring-plan.md for details\n\n\uD83D\uDE80 Get Started:\n  import { agenticHookManager, initializeAgenticFlowHooks } from '../services/agentic-flow-hooks/'\n  await initializeAgenticFlowHooks()\n  agenticHookManager.register({ ... })\n`);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b06778c60c5f085794a910700450685c9a6ac2fa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nmq820egx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nmq820egx();
/**
 * Legacy Hook System - Migration Notice
 *
 * This hook system has been consolidated with the more advanced agentic-flow-hooks system.
 * All functionality is now available through the modern implementation at:
 * src/services/agentic-flow-hooks/
 *
 * This file provides backward compatibility redirects while we complete the migration.
 */
// Re-export the modern agentic-flow-hooks system
export { agenticHookManager, initializeAgenticFlowHooks } from '../services/agentic-flow-hooks/index.js';
// Legacy hook templates for backward compatibility
export const QUALITY_HOOKS =
/* istanbul ignore next */
(cov_nmq820egx().s[0]++, {
  CODE_QUALITY: {
    name: 'Code Quality Monitor',
    description: 'Automatically runs code quality checks on file changes',
    type: 'workflow-step',
    priority: 8,
    enabled: true
  },
  SECURITY_SCAN: {
    name: 'Security Scanner',
    description: 'Scans for security vulnerabilities and credential leaks',
    type: 'workflow-step',
    priority: 9,
    enabled: true
  },
  DOCUMENTATION_SYNC: {
    name: 'Documentation Sync',
    description: 'Automatically updates documentation when specifications change',
    type: 'workflow-step',
    priority: 7,
    enabled: true
  },
  PERFORMANCE_MONITOR: {
    name: 'Performance Monitor',
    description: 'Analyzes performance impact of code changes',
    type: 'workflow-step',
    priority: 6,
    enabled: true
  }
});
// Legacy constants for backward compatibility
export const DEFAULT_HOOK_CONFIG =
/* istanbul ignore next */
(cov_nmq820egx().s[1]++, {
  maxConcurrentHooks: 10,
  defaultThrottleMs: 1000,
  defaultDebounceMs: 500,
  eventQueueSize: 1000,
  agentPoolSize: 50,
  enableMetrics: true,
  enablePersistence: true,
  logLevel: 'info',
  watchPatterns: ['**/*.md', '**/*.ts', '**/*.js', '**/*.json'],
  ignorePatterns: ['node_modules/**', '.git/**', 'dist/**', 'build/**']
});
export const HOOK_TRIGGERS =
/* istanbul ignore next */
(cov_nmq820egx().s[2]++, {
  FILE_SAVE: 'workflow-step',
  FILE_CHANGE: 'workflow-step',
  FILE_CREATE: 'workflow-start',
  FILE_DELETE: 'workflow-complete',
  TASK_COMPLETE: 'workflow-complete',
  TASK_FAIL: 'workflow-error',
  SPEC_UPDATE: 'workflow-step',
  CODE_CHANGE: 'workflow-step',
  AGENT_SPAWN: 'workflow-start',
  WORKFLOW_PHASE: 'workflow-step',
  TIME_INTERVAL: 'performance-metric'
});
export const AGENT_TYPES =
/* istanbul ignore next */
(cov_nmq820egx().s[3]++, {
  QUALITY_ASSURANCE: 'quality_assurance',
  SECURITY_SCAN: 'security_scan',
  DOCUMENTATION_SYNC: 'documentation_sync',
  PERFORMANCE_ANALYSIS: 'performance_analysis'
});
/**
 * Migration utility class
 * Provides backward compatibility while encouraging migration to agentic-flow-hooks
 */
export class HookUtils {
  /**
   * @deprecated Use agenticHookManager.register() instead
   */
  static createFilePatternCondition(pattern) {
    /* istanbul ignore next */
    cov_nmq820egx().f[0]++;
    cov_nmq820egx().s[4]++;
    console.warn('HookUtils.createFilePatternCondition is deprecated. Use agenticHookManager.register() with proper HookFilter instead.');
    /* istanbul ignore next */
    cov_nmq820egx().s[5]++;
    return {
      type: 'file_pattern',
      pattern
    };
  }
  /**
   * @deprecated Use agenticHookManager.register() instead
   */
  static createSpawnAgentAction(agentType, config) {
    /* istanbul ignore next */
    cov_nmq820egx().f[1]++;
    cov_nmq820egx().s[6]++;
    console.warn('HookUtils.createSpawnAgentAction is deprecated. Use agenticHookManager.register() with proper hook handlers instead.');
    /* istanbul ignore next */
    cov_nmq820egx().s[7]++;
    return {
      type: 'spawn_agent',
      agentType,
      agentConfig: config
    };
  }
  /**
   * @deprecated Use agenticHookManager.register() instead
   */
  static createQualityHook(options) {
    /* istanbul ignore next */
    cov_nmq820egx().f[2]++;
    cov_nmq820egx().s[8]++;
    console.warn('HookUtils.createQualityHook is deprecated. Use agenticHookManager.register() with workflow-step hooks instead.');
    /* istanbul ignore next */
    cov_nmq820egx().s[9]++;
    return QUALITY_HOOKS.CODE_QUALITY;
  }
  /**
   * @deprecated Use agenticHookManager.register() instead
   */
  static createSecurityHook(options) {
    /* istanbul ignore next */
    cov_nmq820egx().f[3]++;
    cov_nmq820egx().s[10]++;
    console.warn('HookUtils.createSecurityHook is deprecated. Use agenticHookManager.register() with workflow-step hooks instead.');
    /* istanbul ignore next */
    cov_nmq820egx().s[11]++;
    return QUALITY_HOOKS.SECURITY_SCAN;
  }
  /**
   * @deprecated Use agenticHookManager.register() instead
   */
  static createDocumentationHook(options) {
    /* istanbul ignore next */
    cov_nmq820egx().f[4]++;
    cov_nmq820egx().s[12]++;
    console.warn('HookUtils.createDocumentationHook is deprecated. Use agenticHookManager.register() with workflow-step hooks instead.');
    /* istanbul ignore next */
    cov_nmq820egx().s[13]++;
    return QUALITY_HOOKS.DOCUMENTATION_SYNC;
  }
  /**
   * @deprecated Use agenticHookManager.register() instead
   */
  static createPerformanceHook(options) {
    /* istanbul ignore next */
    cov_nmq820egx().f[5]++;
    cov_nmq820egx().s[14]++;
    console.warn('HookUtils.createPerformanceHook is deprecated. Use agenticHookManager.register() with performance-metric hooks instead.');
    /* istanbul ignore next */
    cov_nmq820egx().s[15]++;
    return QUALITY_HOOKS.PERFORMANCE_MONITOR;
  }
}
/**
 * @deprecated Use initializeAgenticFlowHooks() instead
 */
export function createHookEngine(config) {
  /* istanbul ignore next */
  cov_nmq820egx().f[6]++;
  cov_nmq820egx().s[16]++;
  console.warn('createHookEngine is deprecated. Use initializeAgenticFlowHooks() and agenticHookManager instead.');
  /* istanbul ignore next */
  cov_nmq820egx().s[17]++;
  return {
    registerHook: () => {
      /* istanbul ignore next */
      cov_nmq820egx().f[7]++;
      cov_nmq820egx().s[18]++;
      return console.warn('Use agenticHookManager.register() instead');
    },
    start: () => {
      /* istanbul ignore next */
      cov_nmq820egx().f[8]++;
      cov_nmq820egx().s[19]++;
      return console.warn('Hooks are automatically initialized with agenticHookManager');
    },
    stop: () => {
      /* istanbul ignore next */
      cov_nmq820egx().f[9]++;
      cov_nmq820egx().s[20]++;
      return console.warn('Use agenticHookManager shutdown methods instead');
    }
  };
}
/**
 * @deprecated Use agenticHookManager.register() for individual hooks instead
 */
export async function setupDefaultHooks(engine) {
  /* istanbul ignore next */
  cov_nmq820egx().f[10]++;
  cov_nmq820egx().s[21]++;
  console.warn('setupDefaultHooks is deprecated. Use agenticHookManager.register() to register specific hooks instead.');
  /* istanbul ignore next */
  cov_nmq820egx().s[22]++;
  console.info('Consider migrating to agentic-flow-hooks for advanced pipeline management and neural integration.');
  /* istanbul ignore next */
  cov_nmq820egx().s[23]++;
  return 4; // Return count for backward compatibility
}
// Migration notice for users
/* istanbul ignore next */
cov_nmq820egx().s[24]++;
console.info(`
🔄 MIGRATION NOTICE: Hook System Consolidation

The legacy hook system in src/hooks/ has been consolidated with the advanced
agentic-flow-hooks system for better performance and functionality.

✅ New System Features:
  - Advanced pipeline management
  - Neural pattern learning  
  - Performance optimization
  - Memory coordination hooks
  - LLM integration hooks

📖 Migration Guide:
  - Replace AgentHookEngine with agenticHookManager
  - Update hook registrations to use modern HookRegistration interface
  - Leverage new hook types: LLM, memory, neural, performance, workflow
  - See docs/maestro/specs/hooks-refactoring-plan.md for details

🚀 Get Started:
  import { agenticHookManager, initializeAgenticFlowHooks } from '../services/agentic-flow-hooks/'
  await initializeAgenticFlowHooks()
  agenticHookManager.register({ ... })
`);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,