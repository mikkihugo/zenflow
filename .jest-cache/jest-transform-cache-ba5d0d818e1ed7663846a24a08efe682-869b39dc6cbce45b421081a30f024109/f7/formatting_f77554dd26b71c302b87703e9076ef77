7beea7d1c6a73f81fbb93bc67dc4598e
/* istanbul ignore next */
function cov_2osygnd09n() {
  var path = "/home/mhugo/code/claude-code-flow/src/cli/utils/formatting.ts";
  var hash = "b9e41b6a56b23d858ec294d21c67b51849a34836";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/cli/utils/formatting.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "2": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "3": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "4": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "5": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "6": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "7": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "8": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 77
        }
      },
      "9": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "10": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 50
        }
      },
      "11": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 46
        }
      },
      "12": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "13": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 20
        }
      },
      "14": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "15": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 78
        }
      },
      "16": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 21
        }
      },
      "17": {
        start: {
          line: 60,
          column: 19
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "18": {
        start: {
          line: 61,
          column: 18
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "19": {
        start: {
          line: 62,
          column: 18
        },
        end: {
          line: 62,
          column: 20
        }
      },
      "20": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "21": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "22": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "23": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 87
        }
      },
      "24": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "25": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 35
        }
      },
      "26": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "27": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 87
        }
      },
      "28": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 35
        }
      },
      "29": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 73
        }
      },
      "30": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 79
        }
      },
      "32": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "33": {
        start: {
          line: 90,
          column: 18
        },
        end: {
          line: 90,
          column: 34
        }
      },
      "34": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 75
        }
      },
      "35": {
        start: {
          line: 91,
          column: 43
        },
        end: {
          line: 91,
          column: 74
        }
      },
      "36": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 35
        }
      },
      "37": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "38": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 18
        }
      },
      "39": {
        start: {
          line: 101,
          column: 152
        },
        end: {
          line: 101,
          column: 159
        }
      },
      "40": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 72
        }
      },
      "41": {
        start: {
          line: 104,
          column: 19
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "42": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "43": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "44": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "45": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 73
        }
      },
      "46": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "47": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "48": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 82
        }
      },
      "49": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "50": {
        start: {
          line: 120,
          column: 53
        },
        end: {
          line: 120,
          column: 60
        }
      },
      "51": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 121,
          column: 69
        }
      },
      "52": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "53": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 123,
          column: 63
        }
      },
      "54": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "55": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 26
        }
      },
      "56": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 58
        }
      },
      "57": {
        start: {
          line: 129,
          column: 18
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "58": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "59": {
        start: {
          line: 132,
          column: 26
        },
        end: {
          line: 132,
          column: 84
        }
      },
      "60": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "61": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 23
        }
      },
      "62": {
        start: {
          line: 137,
          column: 22
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "63": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "64": {
        start: {
          line: 139,
          column: 26
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "65": {
        start: {
          line: 140,
          column: 30
        },
        end: {
          line: 140,
          column: 53
        }
      },
      "66": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 41
        }
      },
      "67": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "68": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 55
        }
      },
      "69": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 66
        }
      },
      "70": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "71": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 82
        }
      },
      "72": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 33
        }
      },
      "73": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "74": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 46
        }
      },
      "75": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 36
        }
      },
      "76": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "77": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 160,
          column: 83
        }
      },
      "78": {
        start: {
          line: 160,
          column: 49
        },
        end: {
          line: 160,
          column: 66
        }
      },
      "79": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 31
        }
      },
      "80": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "81": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 45
        }
      },
      "82": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "83": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "84": {
        start: {
          line: 168,
          column: 38
        },
        end: {
          line: 168,
          column: 94
        }
      },
      "85": {
        start: {
          line: 168,
          column: 60
        },
        end: {
          line: 168,
          column: 77
        }
      },
      "86": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 42
        }
      },
      "87": {
        start: {
          line: 172,
          column: 38
        },
        end: {
          line: 172,
          column: 79
        }
      },
      "88": {
        start: {
          line: 172,
          column: 54
        },
        end: {
          line: 172,
          column: 67
        }
      },
      "89": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 42
        }
      },
      "90": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 180,
          column: 7
        }
      },
      "91": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "92": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "93": {
        start: {
          line: 183,
          column: 27
        },
        end: {
          line: 183,
          column: 83
        }
      },
      "94": {
        start: {
          line: 183,
          column: 49
        },
        end: {
          line: 183,
          column: 66
        }
      },
      "95": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 31
        }
      },
      "96": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 28
        }
      },
      "97": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "98": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 18
        }
      },
      "99": {
        start: {
          line: 195,
          column: 126
        },
        end: {
          line: 195,
          column: 133
        }
      },
      "100": {
        start: {
          line: 196,
          column: 22
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "101": {
        start: {
          line: 197,
          column: 18
        },
        end: {
          line: 197,
          column: 20
        }
      },
      "102": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 230,
          column: 7
        }
      },
      "103": {
        start: {
          line: 199,
          column: 21
        },
        end: {
          line: 199,
          column: 23
        }
      },
      "104": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "105": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 84
        }
      },
      "106": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "107": {
        start: {
          line: 205,
          column: 31
        },
        end: {
          line: 205,
          column: 66
        }
      },
      "108": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 86
        }
      },
      "109": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 22
        }
      },
      "110": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 73
        }
      },
      "111": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 22
        }
      },
      "112": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 32
        }
      },
      "113": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 22
        }
      },
      "114": {
        start: {
          line: 215,
          column: 27
        },
        end: {
          line: 215,
          column: 51
        }
      },
      "115": {
        start: {
          line: 216,
          column: 31
        },
        end: {
          line: 216,
          column: 69
        }
      },
      "116": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "117": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 47
        }
      },
      "118": {
        start: {
          line: 222,
          column: 33
        },
        end: {
          line: 224,
          column: 14
        }
      },
      "119": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 64
        }
      },
      "120": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 228,
          column: 15
        }
      },
      "121": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 33
        }
      },
      "122": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 28
        }
      },
      "123": {
        start: {
          line: 237,
          column: 152
        },
        end: {
          line: 237,
          column: 159
        }
      },
      "124": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 238,
          column: 74
        }
      },
      "125": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 62
        }
      },
      "126": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 240,
          column: 42
        }
      },
      "127": {
        start: {
          line: 241,
          column: 22
        },
        end: {
          line: 241,
          column: 85
        }
      },
      "128": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "129": {
        start: {
          line: 243,
          column: 27
        },
        end: {
          line: 243,
          column: 94
        }
      },
      "130": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 244,
          column: 87
        }
      },
      "131": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 45
        }
      },
      "132": {
        start: {
          line: 247,
          column: 18
        },
        end: {
          line: 247,
          column: 20
        }
      },
      "133": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "134": {
        start: {
          line: 249,
          column: 26
        },
        end: {
          line: 249,
          column: 84
        }
      },
      "135": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 30
        }
      },
      "136": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 35
        }
      },
      "137": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 257,
          column: 5
        }
      },
      "138": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 55
        }
      },
      "139": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 255,
          column: 99
        }
      },
      "140": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 35
        }
      },
      "141": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "142": {
        start: {
          line: 259,
          column: 27
        },
        end: {
          line: 259,
          column: 48
        }
      },
      "143": {
        start: {
          line: 260,
          column: 30
        },
        end: {
          line: 260,
          column: 98
        }
      },
      "144": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 41
        }
      },
      "145": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 27
        }
      },
      "146": {
        start: {
          line: 269,
          column: 59
        },
        end: {
          line: 269,
          column: 66
        }
      },
      "147": {
        start: {
          line: 270,
          column: 15
        },
        end: {
          line: 270,
          column: 63
        }
      },
      "148": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 279,
          column: 5
        }
      },
      "149": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 278,
          column: 70
        }
      },
      "150": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 16
        }
      },
      "151": {
        start: {
          line: 286,
          column: 42
        },
        end: {
          line: 286,
          column: 49
        }
      },
      "152": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "153": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "154": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "155": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 72
        }
      },
      "156": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "157": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 77
        }
      },
      "158": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "159": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 89
        }
      },
      "160": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "161": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 90
        }
      },
      "162": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "163": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "164": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 28
        }
      },
      "165": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 104
        }
      },
      "166": {
        start: {
          line: 305,
          column: 37
        },
        end: {
          line: 305,
          column: 93
        }
      },
      "167": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "168": {
        start: {
          line: 308,
          column: 28
        },
        end: {
          line: 308,
          column: 49
        }
      },
      "169": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "170": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 28
        }
      },
      "171": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 321,
          column: 24
        }
      },
      "172": {
        start: {
          line: 313,
          column: 31
        },
        end: {
          line: 313,
          column: 83
        }
      },
      "173": {
        start: {
          line: 314,
          column: 31
        },
        end: {
          line: 314,
          column: 58
        }
      },
      "174": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 320,
          column: 17
        }
      },
      "175": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 63
        }
      },
      "176": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 319,
          column: 71
        }
      },
      "177": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 32
        }
      },
      "178": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 36
        }
      },
      "179": {
        start: {
          line: 331,
          column: 61
        },
        end: {
          line: 331,
          column: 68
        }
      },
      "180": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "181": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 23
        }
      },
      "182": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 349,
          column: 113
        }
      },
      "183": {
        start: {
          line: 338,
          column: 22
        },
        end: {
          line: 338,
          column: 35
        }
      },
      "184": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 339,
          column: 62
        }
      },
      "185": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 58
        }
      },
      "186": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "187": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 35
        }
      },
      "188": {
        start: {
          line: 358,
          column: 20
        },
        end: {
          line: 358,
          column: 51
        }
      },
      "189": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 361,
          column: 5
        }
      },
      "190": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 29
        }
      },
      "191": {
        start: {
          line: 362,
          column: 20
        },
        end: {
          line: 362,
          column: 44
        }
      },
      "192": {
        start: {
          line: 363,
          column: 29
        },
        end: {
          line: 363,
          column: 41
        }
      },
      "193": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "194": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 89
        }
      },
      "195": {
        start: {
          line: 367,
          column: 18
        },
        end: {
          line: 367,
          column: 42
        }
      },
      "196": {
        start: {
          line: 368,
          column: 29
        },
        end: {
          line: 368,
          column: 41
        }
      },
      "197": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 371,
          column: 5
        }
      },
      "198": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 85
        }
      },
      "199": {
        start: {
          line: 372,
          column: 17
        },
        end: {
          line: 372,
          column: 39
        }
      },
      "200": {
        start: {
          line: 373,
          column: 27
        },
        end: {
          line: 373,
          column: 37
        }
      },
      "201": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 75
        }
      },
      "202": {
        start: {
          line: 380,
          column: 18
        },
        end: {
          line: 380,
          column: 47
        }
      },
      "203": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 383,
          column: 5
        }
      },
      "204": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 21
        }
      },
      "205": {
        start: {
          line: 384,
          column: 14
        },
        end: {
          line: 384,
          column: 58
        }
      },
      "206": {
        start: {
          line: 385,
          column: 17
        },
        end: {
          line: 385,
          column: 42
        }
      },
      "207": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 386,
          column: 58
        }
      },
      "208": {
        start: {
          line: 392,
          column: 54
        },
        end: {
          line: 392,
          column: 61
        }
      },
      "209": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 393,
          column: 34
        }
      },
      "210": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "211": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 30
        }
      },
      "212": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 417,
          column: 5
        }
      },
      "213": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 41
        }
      },
      "214": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 403,
          column: 47
        }
      },
      "215": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 47
        }
      },
      "216": {
        start: {
          line: 408,
          column: 25
        },
        end: {
          line: 408,
          column: 46
        }
      },
      "217": {
        start: {
          line: 409,
          column: 26
        },
        end: {
          line: 409,
          column: 78
        }
      },
      "218": {
        start: {
          line: 410,
          column: 24
        },
        end: {
          line: 410,
          column: 69
        }
      },
      "219": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 415,
          column: 13
        }
      },
      "220": {
        start: {
          line: 412,
          column: 30
        },
        end: {
          line: 412,
          column: 76
        }
      },
      "221": {
        start: {
          line: 413,
          column: 32
        },
        end: {
          line: 413,
          column: 80
        }
      },
      "222": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 414,
          column: 69
        }
      },
      "223": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 45
        }
      },
      "224": {
        start: {
          line: 423,
          column: 20
        },
        end: {
          line: 423,
          column: 34
        }
      },
      "225": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 424,
          column: 26
        }
      },
      "226": {
        start: {
          line: 425,
          column: 19
        },
        end: {
          line: 425,
          column: 52
        }
      },
      "227": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "228": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 31
        }
      },
      "229": {
        start: {
          line: 429,
          column: 20
        },
        end: {
          line: 429,
          column: 45
        }
      },
      "230": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 44
        }
      },
      "231": {
        start: {
          line: 431,
          column: 18
        },
        end: {
          line: 431,
          column: 42
        }
      },
      "232": {
        start: {
          line: 432,
          column: 17
        },
        end: {
          line: 432,
          column: 39
        }
      },
      "233": {
        start: {
          line: 433,
          column: 18
        },
        end: {
          line: 433,
          column: 38
        }
      },
      "234": {
        start: {
          line: 434,
          column: 19
        },
        end: {
          line: 434,
          column: 40
        }
      },
      "235": {
        start: {
          line: 435,
          column: 18
        },
        end: {
          line: 435,
          column: 40
        }
      },
      "236": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 438,
          column: 5
        }
      },
      "237": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 58
        }
      },
      "238": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "239": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 61
        }
      },
      "240": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 444,
          column: 5
        }
      },
      "241": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 58
        }
      },
      "242": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 447,
          column: 5
        }
      },
      "243": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 55
        }
      },
      "244": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 450,
          column: 5
        }
      },
      "245": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 58
        }
      },
      "246": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 453,
          column: 5
        }
      },
      "247": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 452,
          column: 64
        }
      },
      "248": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "getTerminalWidth",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 32
          }
        },
        loc: {
          start: {
            line: 11,
            column: 35
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "stripAnsi",
        decl: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 32
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "getDisplayWidth",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 24
          }
        },
        loc: {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "padText",
        decl: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 72
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "truncateText",
        decl: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 28
          }
        },
        loc: {
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 47
      },
      "5": {
        name: "wrapText",
        decl: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 24
          }
        },
        loc: {
          start: {
            line: 59,
            column: 55
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 59
      },
      "6": {
        name: "alignText",
        decl: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 89,
            column: 25
          }
        },
        loc: {
          start: {
            line: 89,
            column: 59
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 91,
            column: 36
          }
        },
        loc: {
          start: {
            line: 91,
            column: 43
          },
          end: {
            line: 91,
            column: 74
          }
        },
        line: 91
      },
      "8": {
        name: "formatTable",
        decl: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 97,
            column: 27
          }
        },
        loc: {
          start: {
            line: 97,
            column: 48
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 97
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 29
          }
        },
        loc: {
          start: {
            line: 109,
            column: 43
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 109
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 22
          }
        },
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 118,
            column: 9
          }
        },
        line: 114
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 115,
            column: 25
          }
        },
        loc: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 117,
            column: 13
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 120,
            column: 41
          },
          end: {
            line: 120,
            column: 42
          }
        },
        loc: {
          start: {
            line: 120,
            column: 53
          },
          end: {
            line: 120,
            column: 60
          }
        },
        line: 120
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 22
          },
          end: {
            line: 137,
            column: 23
          }
        },
        loc: {
          start: {
            line: 137,
            column: 49
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 31
          }
        },
        loc: {
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 138
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 160,
            column: 44
          },
          end: {
            line: 160,
            column: 45
          }
        },
        loc: {
          start: {
            line: 160,
            column: 49
          },
          end: {
            line: 160,
            column: 66
          }
        },
        line: 160
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 168,
            column: 55
          },
          end: {
            line: 168,
            column: 56
          }
        },
        loc: {
          start: {
            line: 168,
            column: 60
          },
          end: {
            line: 168,
            column: 77
          }
        },
        line: 168
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 172,
            column: 49
          },
          end: {
            line: 172,
            column: 50
          }
        },
        loc: {
          start: {
            line: 172,
            column: 54
          },
          end: {
            line: 172,
            column: 67
          }
        },
        line: 172
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 178,
            column: 17
          },
          end: {
            line: 178,
            column: 18
          }
        },
        loc: {
          start: {
            line: 178,
            column: 24
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 178
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 183,
            column: 44
          },
          end: {
            line: 183,
            column: 45
          }
        },
        loc: {
          start: {
            line: 183,
            column: 49
          },
          end: {
            line: 183,
            column: 66
          }
        },
        line: 183
      },
      "20": {
        name: "formatList",
        decl: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 26
          }
        },
        loc: {
          start: {
            line: 191,
            column: 48
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 191
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 198,
            column: 18
          },
          end: {
            line: 198,
            column: 19
          }
        },
        loc: {
          start: {
            line: 198,
            column: 35
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 198
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 226,
            column: 43
          }
        },
        loc: {
          start: {
            line: 226,
            column: 50
          },
          end: {
            line: 228,
            column: 13
          }
        },
        line: 226
      },
      "23": {
        name: "formatProgress",
        decl: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 236,
            column: 30
          }
        },
        loc: {
          start: {
            line: 236,
            column: 40
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 236
      },
      "24": {
        name: "formatJson",
        decl: {
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 268,
            column: 26
          }
        },
        loc: {
          start: {
            line: 268,
            column: 47
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 268
      },
      "25": {
        name: "formatYaml",
        decl: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 26
          }
        },
        loc: {
          start: {
            line: 285,
            column: 47
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 285
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 287,
            column: 25
          }
        },
        loc: {
          start: {
            line: 287,
            column: 46
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 287
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 305,
            column: 29
          },
          end: {
            line: 305,
            column: 30
          }
        },
        loc: {
          start: {
            line: 305,
            column: 37
          },
          end: {
            line: 305,
            column: 93
          }
        },
        line: 305
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 312,
            column: 31
          },
          end: {
            line: 312,
            column: 32
          }
        },
        loc: {
          start: {
            line: 312,
            column: 47
          },
          end: {
            line: 321,
            column: 13
          }
        },
        line: 312
      },
      "29": {
        name: "formatMarkdown",
        decl: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 330,
            column: 30
          }
        },
        loc: {
          start: {
            line: 330,
            column: 54
          },
          end: {
            line: 350,
            column: 1
          }
        },
        line: 330
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 337,
            column: 40
          },
          end: {
            line: 337,
            column: 41
          }
        },
        loc: {
          start: {
            line: 337,
            column: 61
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 337
      },
      "31": {
        name: "formatDuration",
        decl: {
          start: {
            line: 354,
            column: 16
          },
          end: {
            line: 354,
            column: 30
          }
        },
        loc: {
          start: {
            line: 354,
            column: 45
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 354
      },
      "32": {
        name: "formatBytes",
        decl: {
          start: {
            line: 379,
            column: 16
          },
          end: {
            line: 379,
            column: 27
          }
        },
        loc: {
          start: {
            line: 379,
            column: 35
          },
          end: {
            line: 387,
            column: 1
          }
        },
        line: 379
      },
      "33": {
        name: "formatDate",
        decl: {
          start: {
            line: 391,
            column: 16
          },
          end: {
            line: 391,
            column: 26
          }
        },
        loc: {
          start: {
            line: 391,
            column: 47
          },
          end: {
            line: 418,
            column: 1
          }
        },
        line: 391
      },
      "34": {
        name: "formatRelativeTime",
        decl: {
          start: {
            line: 422,
            column: 16
          },
          end: {
            line: 422,
            column: 34
          }
        },
        loc: {
          start: {
            line: 422,
            column: 41
          },
          end: {
            line: 455,
            column: 1
          }
        },
        line: 422
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 33
          }
        }, {
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 39
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 49
          },
          end: {
            line: 29,
            column: 55
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 57
          },
          end: {
            line: 29,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 67
          },
          end: {
            line: 29,
            column: 70
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 77
          }
        }, {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 50
          }
        }, {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 50
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 47,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 56
          },
          end: {
            line: 47,
            column: 61
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 59,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 51
          },
          end: {
            line: 59,
            column: 53
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 44
          }
        }, {
          start: {
            line: 60,
            column: 48
          },
          end: {
            line: 60,
            column: 49
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 39
          },
          end: {
            line: 65,
            column: 63
          }
        }, {
          start: {
            line: 65,
            column: 66
          },
          end: {
            line: 65,
            column: 70
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 66,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 54
          },
          end: {
            line: 66,
            column: 76
          }
        }, {
          start: {
            line: 66,
            column: 79
          },
          end: {
            line: 66,
            column: 87
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 79,
            column: 9
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: 75,
            column: 17
          },
          end: {
            line: 78,
            column: 13
          }
        }],
        line: 71
      },
      "12": {
        loc: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 46
          },
          end: {
            line: 72,
            column: 71
          }
        }, {
          start: {
            line: 72,
            column: 74
          },
          end: {
            line: 72,
            column: 85
          }
        }],
        line: 72
      },
      "13": {
        loc: {
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 77,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 46
          },
          end: {
            line: 77,
            column: 64
          }
        }, {
          start: {
            line: 77,
            column: 67
          },
          end: {
            line: 77,
            column: 71
          }
        }],
        line: 77
      },
      "14": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 82,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 38
          },
          end: {
            line: 82,
            column: 63
          }
        }, {
          start: {
            line: 82,
            column: 66
          },
          end: {
            line: 82,
            column: 77
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 89,
            column: 39
          },
          end: {
            line: 89,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 51
          },
          end: {
            line: 89,
            column: 57
          }
        }],
        line: 89
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 34
          },
          end: {
            line: 97,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 44
          },
          end: {
            line: 97,
            column: 46
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "19": {
        loc: {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 34
          },
          end: {
            line: 101,
            column: 36
          }
        }],
        line: 101
      },
      "20": {
        loc: {
          start: {
            line: 101,
            column: 38
          },
          end: {
            line: 101,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 101,
            column: 52
          }
        }],
        line: 101
      },
      "21": {
        loc: {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 72
          },
          end: {
            line: 101,
            column: 76
          }
        }],
        line: 101
      },
      "22": {
        loc: {
          start: {
            line: 101,
            column: 85
          },
          end: {
            line: 101,
            column: 114
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 96
          },
          end: {
            line: 101,
            column: 114
          }
        }],
        line: 101
      },
      "23": {
        loc: {
          start: {
            line: 101,
            column: 116
          },
          end: {
            line: 101,
            column: 131
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 127
          },
          end: {
            line: 101,
            column: 131
          }
        }],
        line: 101
      },
      "24": {
        loc: {
          start: {
            line: 101,
            column: 133
          },
          end: {
            line: 101,
            column: 146
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 142
          },
          end: {
            line: 101,
            column: 146
          }
        }],
        line: 101
      },
      "25": {
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 44
          }
        }, {
          start: {
            line: 103,
            column: 48
          },
          end: {
            line: 103,
            column: 49
          }
        }],
        line: 103
      },
      "26": {
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 103,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 103,
            column: 66
          }
        }, {
          start: {
            line: 103,
            column: 70
          },
          end: {
            line: 103,
            column: 71
          }
        }],
        line: 103
      },
      "27": {
        loc: {
          start: {
            line: 104,
            column: 19
          },
          end: {
            line: 104,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 19
          },
          end: {
            line: 104,
            column: 33
          }
        }, {
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 63
          }
        }],
        line: 104
      },
      "28": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "29": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "30": {
        loc: {
          start: {
            line: 121,
            column: 28
          },
          end: {
            line: 121,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 38
          },
          end: {
            line: 121,
            column: 55
          }
        }, {
          start: {
            line: 121,
            column: 58
          },
          end: {
            line: 121,
            column: 69
          }
        }],
        line: 121
      },
      "31": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "32": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "33": {
        loc: {
          start: {
            line: 132,
            column: 26
          },
          end: {
            line: 132,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 35
          },
          end: {
            line: 132,
            column: 76
          }
        }, {
          start: {
            line: 132,
            column: 79
          },
          end: {
            line: 132,
            column: 84
          }
        }],
        line: 132
      },
      "34": {
        loc: {
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 137,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 137,
            column: 39
          },
          end: {
            line: 137,
            column: 44
          }
        }],
        line: 137
      },
      "35": {
        loc: {
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 35
          }
        }, {
          start: {
            line: 139,
            column: 39
          },
          end: {
            line: 139,
            column: 41
          }
        }],
        line: 139
      },
      "36": {
        loc: {
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 43
          }
        }, {
          start: {
            line: 140,
            column: 47
          },
          end: {
            line: 140,
            column: 53
          }
        }],
        line: 140
      },
      "37": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "38": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 142,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 142,
            column: 24
          }
        }, {
          start: {
            line: 142,
            column: 28
          },
          end: {
            line: 142,
            column: 60
          }
        }],
        line: 142
      },
      "39": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "40": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 22
          }
        }, {
          start: {
            line: 146,
            column: 26
          },
          end: {
            line: 146,
            column: 34
          }
        }],
        line: 146
      },
      "41": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: 154,
            column: 13
          },
          end: {
            line: 156,
            column: 9
          }
        }],
        line: 151
      },
      "42": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "43": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "44": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "45": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: 171,
            column: 17
          },
          end: {
            line: 174,
            column: 13
          }
        }],
        line: 167
      },
      "46": {
        loc: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "47": {
        loc: {
          start: {
            line: 191,
            column: 34
          },
          end: {
            line: 191,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 44
          },
          end: {
            line: 191,
            column: 46
          }
        }],
        line: 191
      },
      "48": {
        loc: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "49": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 195,
            column: 28
          }
        }],
        line: 195
      },
      "50": {
        loc: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 195,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 39
          },
          end: {
            line: 195,
            column: 42
          }
        }],
        line: 195
      },
      "51": {
        loc: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 195,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 53
          },
          end: {
            line: 195,
            column: 54
          }
        }],
        line: 195
      },
      "52": {
        loc: {
          start: {
            line: 195,
            column: 56
          },
          end: {
            line: 195,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 65
          },
          end: {
            line: 195,
            column: 69
          }
        }],
        line: 195
      },
      "53": {
        loc: {
          start: {
            line: 195,
            column: 71
          },
          end: {
            line: 195,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 82
          },
          end: {
            line: 195,
            column: 100
          }
        }],
        line: 195
      },
      "54": {
        loc: {
          start: {
            line: 195,
            column: 102
          },
          end: {
            line: 195,
            column: 120
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 116
          },
          end: {
            line: 195,
            column: 120
          }
        }],
        line: 195
      },
      "55": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 203,
            column: 22
          }
        }, {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 207,
            column: 22
          }
        }, {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 22
          }
        }, {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 22
          }
        }],
        line: 200
      },
      "56": {
        loc: {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 34
          },
          end: {
            line: 202,
            column: 74
          }
        }, {
          start: {
            line: 202,
            column: 77
          },
          end: {
            line: 202,
            column: 83
          }
        }],
        line: 202
      },
      "57": {
        loc: {
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 45
          },
          end: {
            line: 205,
            column: 60
          }
        }, {
          start: {
            line: 205,
            column: 63
          },
          end: {
            line: 205,
            column: 66
          }
        }],
        line: 205
      },
      "58": {
        loc: {
          start: {
            line: 206,
            column: 25
          },
          end: {
            line: 206,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 34
          },
          end: {
            line: 206,
            column: 76
          }
        }, {
          start: {
            line: 206,
            column: 79
          },
          end: {
            line: 206,
            column: 85
          }
        }],
        line: 206
      },
      "59": {
        loc: {
          start: {
            line: 209,
            column: 25
          },
          end: {
            line: 209,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 34
          },
          end: {
            line: 209,
            column: 66
          }
        }, {
          start: {
            line: 209,
            column: 69
          },
          end: {
            line: 209,
            column: 72
          }
        }],
        line: 209
      },
      "60": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: 220,
            column: 13
          },
          end: {
            line: 229,
            column: 9
          }
        }],
        line: 217
      },
      "61": {
        loc: {
          start: {
            line: 225,
            column: 39
          },
          end: {
            line: 225,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 39
          },
          end: {
            line: 225,
            column: 54
          }
        }, {
          start: {
            line: 225,
            column: 58
          },
          end: {
            line: 225,
            column: 60
          }
        }],
        line: 225
      },
      "62": {
        loc: {
          start: {
            line: 237,
            column: 21
          },
          end: {
            line: 237,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 29
          },
          end: {
            line: 237,
            column: 32
          }
        }],
        line: 237
      },
      "63": {
        loc: {
          start: {
            line: 237,
            column: 34
          },
          end: {
            line: 237,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 42
          },
          end: {
            line: 237,
            column: 44
          }
        }],
        line: 237
      },
      "64": {
        loc: {
          start: {
            line: 237,
            column: 46
          },
          end: {
            line: 237,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 61
          },
          end: {
            line: 237,
            column: 64
          }
        }],
        line: 237
      },
      "65": {
        loc: {
          start: {
            line: 237,
            column: 66
          },
          end: {
            line: 237,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 78
          },
          end: {
            line: 237,
            column: 81
          }
        }],
        line: 237
      },
      "66": {
        loc: {
          start: {
            line: 237,
            column: 83
          },
          end: {
            line: 237,
            column: 104
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 100
          },
          end: {
            line: 237,
            column: 104
          }
        }],
        line: 237
      },
      "67": {
        loc: {
          start: {
            line: 237,
            column: 106
          },
          end: {
            line: 237,
            column: 124
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 119
          },
          end: {
            line: 237,
            column: 124
          }
        }],
        line: 237
      },
      "68": {
        loc: {
          start: {
            line: 237,
            column: 133
          },
          end: {
            line: 237,
            column: 146
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 142
          },
          end: {
            line: 237,
            column: 146
          }
        }],
        line: 237
      },
      "69": {
        loc: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "70": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "71": {
        loc: {
          start: {
            line: 249,
            column: 26
          },
          end: {
            line: 249,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 35
          },
          end: {
            line: 249,
            column: 76
          }
        }, {
          start: {
            line: 249,
            column: 79
          },
          end: {
            line: 249,
            column: 84
          }
        }],
        line: 249
      },
      "72": {
        loc: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "73": {
        loc: {
          start: {
            line: 255,
            column: 31
          },
          end: {
            line: 255,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 40
          },
          end: {
            line: 255,
            column: 85
          }
        }, {
          start: {
            line: 255,
            column: 88
          },
          end: {
            line: 255,
            column: 99
          }
        }],
        line: 255
      },
      "74": {
        loc: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "75": {
        loc: {
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 260,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 39
          },
          end: {
            line: 260,
            column: 85
          }
        }, {
          start: {
            line: 260,
            column: 88
          },
          end: {
            line: 260,
            column: 98
          }
        }],
        line: 260
      },
      "76": {
        loc: {
          start: {
            line: 268,
            column: 33
          },
          end: {
            line: 268,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 268,
            column: 45
          }
        }],
        line: 268
      },
      "77": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 269,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 269,
            column: 21
          },
          end: {
            line: 269,
            column: 22
          }
        }],
        line: 269
      },
      "78": {
        loc: {
          start: {
            line: 269,
            column: 24
          },
          end: {
            line: 269,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 269,
            column: 33
          },
          end: {
            line: 269,
            column: 37
          }
        }],
        line: 269
      },
      "79": {
        loc: {
          start: {
            line: 269,
            column: 39
          },
          end: {
            line: 269,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 269,
            column: 49
          },
          end: {
            line: 269,
            column: 54
          }
        }],
        line: 269
      },
      "80": {
        loc: {
          start: {
            line: 270,
            column: 42
          },
          end: {
            line: 270,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 52
          },
          end: {
            line: 270,
            column: 53
          }
        }, {
          start: {
            line: 270,
            column: 56
          },
          end: {
            line: 270,
            column: 62
          }
        }],
        line: 270
      },
      "81": {
        loc: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "82": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 271,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 271,
            column: 14
          }
        }, {
          start: {
            line: 271,
            column: 18
          },
          end: {
            line: 271,
            column: 26
          }
        }],
        line: 271
      },
      "83": {
        loc: {
          start: {
            line: 285,
            column: 33
          },
          end: {
            line: 285,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 285,
            column: 43
          },
          end: {
            line: 285,
            column: 45
          }
        }],
        line: 285
      },
      "84": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 286,
            column: 22
          }
        }],
        line: 286
      },
      "85": {
        loc: {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 286,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 286,
            column: 33
          },
          end: {
            line: 286,
            column: 37
          }
        }],
        line: 286
      },
      "86": {
        loc: {
          start: {
            line: 287,
            column: 32
          },
          end: {
            line: 287,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 41
          }
        }],
        line: 287
      },
      "87": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "88": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 289,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 289,
            column: 26
          }
        }, {
          start: {
            line: 289,
            column: 30
          },
          end: {
            line: 289,
            column: 49
          }
        }],
        line: 289
      },
      "89": {
        loc: {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 28
          },
          end: {
            line: 290,
            column: 62
          }
        }, {
          start: {
            line: 290,
            column: 65
          },
          end: {
            line: 290,
            column: 71
          }
        }],
        line: 290
      },
      "90": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "91": {
        loc: {
          start: {
            line: 293,
            column: 19
          },
          end: {
            line: 293,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 28
          },
          end: {
            line: 293,
            column: 68
          }
        }, {
          start: {
            line: 293,
            column: 71
          },
          end: {
            line: 293,
            column: 76
          }
        }],
        line: 293
      },
      "92": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "93": {
        loc: {
          start: {
            line: 296,
            column: 19
          },
          end: {
            line: 296,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 28
          },
          end: {
            line: 296,
            column: 69
          }
        }, {
          start: {
            line: 296,
            column: 72
          },
          end: {
            line: 296,
            column: 88
          }
        }],
        line: 296
      },
      "94": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "95": {
        loc: {
          start: {
            line: 299,
            column: 19
          },
          end: {
            line: 299,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 28
          },
          end: {
            line: 299,
            column: 70
          }
        }, {
          start: {
            line: 299,
            column: 73
          },
          end: {
            line: 299,
            column: 89
          }
        }],
        line: 299
      },
      "96": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "97": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "98": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "99": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "100": {
        loc: {
          start: {
            line: 313,
            column: 31
          },
          end: {
            line: 313,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 40
          },
          end: {
            line: 313,
            column: 77
          }
        }, {
          start: {
            line: 313,
            column: 80
          },
          end: {
            line: 313,
            column: 83
          }
        }],
        line: 313
      },
      "101": {
        loc: {
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        }, {
          start: {
            line: 318,
            column: 21
          },
          end: {
            line: 320,
            column: 17
          }
        }],
        line: 315
      },
      "102": {
        loc: {
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 315,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 315,
            column: 43
          }
        }, {
          start: {
            line: 315,
            column: 47
          },
          end: {
            line: 315,
            column: 59
          }
        }, {
          start: {
            line: 315,
            column: 63
          },
          end: {
            line: 315,
            column: 82
          }
        }],
        line: 315
      },
      "103": {
        loc: {
          start: {
            line: 330,
            column: 40
          },
          end: {
            line: 330,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 330,
            column: 50
          },
          end: {
            line: 330,
            column: 52
          }
        }],
        line: 330
      },
      "104": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 331,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 331,
            column: 21
          },
          end: {
            line: 331,
            column: 25
          }
        }],
        line: 331
      },
      "105": {
        loc: {
          start: {
            line: 331,
            column: 27
          },
          end: {
            line: 331,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 331,
            column: 38
          },
          end: {
            line: 331,
            column: 56
          }
        }],
        line: 331
      },
      "106": {
        loc: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "107": {
        loc: {
          start: {
            line: 339,
            column: 22
          },
          end: {
            line: 339,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 35
          },
          end: {
            line: 339,
            column: 48
          }
        }, {
          start: {
            line: 339,
            column: 51
          },
          end: {
            line: 339,
            column: 62
          }
        }],
        line: 339
      },
      "108": {
        loc: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "109": {
        loc: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "110": {
        loc: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "111": {
        loc: {
          start: {
            line: 365,
            column: 15
          },
          end: {
            line: 365,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 38
          },
          end: {
            line: 365,
            column: 72
          }
        }, {
          start: {
            line: 365,
            column: 75
          },
          end: {
            line: 365,
            column: 88
          }
        }],
        line: 365
      },
      "112": {
        loc: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "113": {
        loc: {
          start: {
            line: 370,
            column: 15
          },
          end: {
            line: 370,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 370,
            column: 38
          },
          end: {
            line: 370,
            column: 70
          }
        }, {
          start: {
            line: 370,
            column: 73
          },
          end: {
            line: 370,
            column: 84
          }
        }],
        line: 370
      },
      "114": {
        loc: {
          start: {
            line: 374,
            column: 11
          },
          end: {
            line: 374,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 32
          },
          end: {
            line: 374,
            column: 61
          }
        }, {
          start: {
            line: 374,
            column: 64
          },
          end: {
            line: 374,
            column: 74
          }
        }],
        line: 374
      },
      "115": {
        loc: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "116": {
        loc: {
          start: {
            line: 386,
            column: 27
          },
          end: {
            line: 386,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 386,
            column: 37
          },
          end: {
            line: 386,
            column: 38
          }
        }, {
          start: {
            line: 386,
            column: 41
          },
          end: {
            line: 386,
            column: 42
          }
        }],
        line: 386
      },
      "117": {
        loc: {
          start: {
            line: 391,
            column: 33
          },
          end: {
            line: 391,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 391,
            column: 43
          },
          end: {
            line: 391,
            column: 45
          }
        }],
        line: 391
      },
      "118": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 392,
            column: 21
          },
          end: {
            line: 392,
            column: 28
          }
        }],
        line: 392
      },
      "119": {
        loc: {
          start: {
            line: 392,
            column: 30
          },
          end: {
            line: 392,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 392,
            column: 44
          },
          end: {
            line: 392,
            column: 49
          }
        }],
        line: 392
      },
      "120": {
        loc: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "121": {
        loc: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 399,
            column: 41
          }
        }, {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 403,
            column: 47
          }
        }, {
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 405,
            column: 47
          }
        }, {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 406,
            column: 21
          }
        }, {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 416,
            column: 45
          }
        }],
        line: 397
      },
      "122": {
        loc: {
          start: {
            line: 401,
            column: 19
          },
          end: {
            line: 403,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 402,
            column: 18
          },
          end: {
            line: 402,
            column: 42
          }
        }, {
          start: {
            line: 403,
            column: 18
          },
          end: {
            line: 403,
            column: 46
          }
        }],
        line: 401
      },
      "123": {
        loc: {
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "124": {
        loc: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "125": {
        loc: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "126": {
        loc: {
          start: {
            line: 437,
            column: 31
          },
          end: {
            line: 437,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 437,
            column: 43
          },
          end: {
            line: 437,
            column: 46
          }
        }, {
          start: {
            line: 437,
            column: 49
          },
          end: {
            line: 437,
            column: 51
          }
        }],
        line: 437
      },
      "127": {
        loc: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "128": {
        loc: {
          start: {
            line: 440,
            column: 33
          },
          end: {
            line: 440,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 46
          },
          end: {
            line: 440,
            column: 49
          }
        }, {
          start: {
            line: 440,
            column: 52
          },
          end: {
            line: 440,
            column: 54
          }
        }],
        line: 440
      },
      "129": {
        loc: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "130": {
        loc: {
          start: {
            line: 443,
            column: 31
          },
          end: {
            line: 443,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 443,
            column: 43
          },
          end: {
            line: 443,
            column: 46
          }
        }, {
          start: {
            line: 443,
            column: 49
          },
          end: {
            line: 443,
            column: 51
          }
        }],
        line: 443
      },
      "131": {
        loc: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "132": {
        loc: {
          start: {
            line: 446,
            column: 29
          },
          end: {
            line: 446,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 446,
            column: 40
          },
          end: {
            line: 446,
            column: 43
          }
        }, {
          start: {
            line: 446,
            column: 46
          },
          end: {
            line: 446,
            column: 48
          }
        }],
        line: 446
      },
      "133": {
        loc: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "134": {
        loc: {
          start: {
            line: 449,
            column: 31
          },
          end: {
            line: 449,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 449,
            column: 43
          },
          end: {
            line: 449,
            column: 46
          }
        }, {
          start: {
            line: 449,
            column: 49
          },
          end: {
            line: 449,
            column: 51
          }
        }],
        line: 449
      },
      "135": {
        loc: {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "136": {
        loc: {
          start: {
            line: 452,
            column: 35
          },
          end: {
            line: 452,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 49
          },
          end: {
            line: 452,
            column: 52
          }
        }, {
          start: {
            line: 452,
            column: 55
          },
          end: {
            line: 452,
            column: 57
          }
        }],
        line: 452
      },
      "137": {
        loc: {
          start: {
            line: 454,
            column: 11
          },
          end: {
            line: 454,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 454,
            column: 25
          },
          end: {
            line: 454,
            column: 49
          }
        }, {
          start: {
            line: 454,
            column: 52
          },
          end: {
            line: 454,
            column: 62
          }
        }],
        line: 454
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0, 0, 0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0, 0],
      "49": [0],
      "50": [0],
      "51": [0],
      "52": [0],
      "53": [0],
      "54": [0],
      "55": [0, 0, 0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0],
      "63": [0],
      "64": [0],
      "65": [0],
      "66": [0],
      "67": [0],
      "68": [0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0],
      "77": [0],
      "78": [0],
      "79": [0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0],
      "84": [0],
      "85": [0],
      "86": [0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0, 0],
      "103": [0],
      "104": [0],
      "105": [0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0],
      "118": [0],
      "119": [0],
      "120": [0, 0],
      "121": [0, 0, 0, 0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0],
      "137": [0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/cli/utils/formatting.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/cli/utils/formatting.ts"],
      sourcesContent: ["/**\n * Formatting Utilities\n * \n * Provides output formatting functions for tables, lists, progress bars, and text.\n * Supports various output formats and terminal-aware formatting.\n */\n\nimport { Colors } from './logger.js';\n\n/**\n * Text alignment options\n */\nexport type TextAlignment = 'left' | 'center' | 'right';\n\n/**\n * Table formatting options\n */\nexport interface TableOptions {\n  /** Table headers */\n  headers?: string[];\n  \n  /** Column alignments */\n  alignments?: TextAlignment[];\n  \n  /** Column widths (auto-calculated if not provided) */\n  widths?: number[];\n  \n  /** Show borders */\n  borders?: boolean;\n  \n  /** Show header separator */\n  headerSeparator?: boolean;\n  \n  /** Table title */\n  title?: string;\n  \n  /** Maximum table width */\n  maxWidth?: number;\n  \n  /** Truncate long content */\n  truncate?: boolean;\n  \n  /** Use colors */\n  colors?: boolean;\n}\n\n/**\n * List formatting options\n */\nexport interface ListOptions {\n  /** List style (bullet, number, dash) */\n  style?: 'bullet' | 'number' | 'dash' | 'custom';\n  \n  /** Custom bullet character */\n  bullet?: string;\n  \n  /** Indentation level */\n  indent?: number;\n  \n  /** Use colors */\n  colors?: boolean;\n  \n  /** Maximum item width */\n  maxWidth?: number;\n  \n  /** Show item numbers (for numbered lists) */\n  showNumbers?: boolean;\n}\n\n/**\n * Progress bar options\n */\nexport interface ProgressOptions {\n  /** Current progress (0-100) */\n  current: number;\n  \n  /** Total progress (default: 100) */\n  total?: number;\n  \n  /** Progress bar width */\n  width?: number;\n  \n  /** Progress bar character */\n  progressChar?: string;\n  \n  /** Empty character */\n  emptyChar?: string;\n  \n  /** Show percentage */\n  showPercentage?: boolean;\n  \n  /** Show current/total values */\n  showValues?: boolean;\n  \n  /** Progress bar label */\n  label?: string;\n  \n  /** Use colors */\n  colors?: boolean;\n}\n\n/**\n * General formatting options\n */\nexport interface FormattingOptions {\n  /** Use colors */\n  colors?: boolean;\n  \n  /** Maximum width */\n  maxWidth?: number;\n  \n  /** Indentation */\n  indent?: number;\n  \n  /** Line prefix */\n  prefix?: string;\n  \n  /** Line suffix */\n  suffix?: string;\n}\n\n/**\n * Get terminal width\n */\nexport function getTerminalWidth(): number {\n  return process.stdout.columns || 80;\n}\n\n/**\n * Strip ANSI escape codes from text\n */\nexport function stripAnsi(text: string): string {\n  return text.replace(/\\x1b\\[[0-9;]*m/g, '');\n}\n\n/**\n * Get the display width of text (excluding ANSI codes)\n */\nfunction getDisplayWidth(text: string): number {\n  return stripAnsi(text).length;\n}\n\n/**\n * Pad text to a specific width\n */\nexport function padText(\n  text: string,\n  width: number,\n  alignment: TextAlignment = 'left',\n  padChar: string = ' '\n): string {\n  const displayWidth = getDisplayWidth(text);\n  const padding = Math.max(0, width - displayWidth);\n  \n  switch (alignment) {\n    case 'center':\n      const leftPad = Math.floor(padding / 2);\n      const rightPad = padding - leftPad;\n      return padChar.repeat(leftPad) + text + padChar.repeat(rightPad);\n    \n    case 'right':\n      return padChar.repeat(padding) + text;\n    \n    case 'left':\n    default:\n      return text + padChar.repeat(padding);\n  }\n}\n\n/**\n * Truncate text to a maximum width\n */\nexport function truncateText(\n  text: string,\n  maxWidth: number,\n  ellipsis: string = '...'\n): string {\n  const displayWidth = getDisplayWidth(text);\n  \n  if (displayWidth <= maxWidth) {\n    return text;\n  }\n  \n  const stripped = stripAnsi(text);\n  const truncated = stripped.slice(0, maxWidth - ellipsis.length) + ellipsis;\n  \n  return truncated;\n}\n\n/**\n * Wrap text to multiple lines\n */\nexport function wrapText(\n  text: string,\n  maxWidth: number,\n  options: {\n    indent?: number;\n    preserveWhitespace?: boolean;\n  } = {}\n): string[] {\n  const indent = ' '.repeat(options.indent || 0);\n  const words = text.split(' ');\n  const lines: string[] = [];\n  let currentLine = '';\n  \n  for (const word of words) {\n    const testLine = currentLine ? `${currentLine} ${word}` : word;\n    const testLineWithIndent = lines.length > 0 ? `${indent}${testLine}` : testLine;\n    \n    if (getDisplayWidth(testLineWithIndent) <= maxWidth) {\n      currentLine = testLine;\n    } else {\n      if (currentLine) {\n        lines.push(lines.length > 0 ? `${indent}${currentLine}` : currentLine);\n        currentLine = word;\n      } else {\n        // Word is too long, force break\n        lines.push(lines.length > 0 ? `${indent}${word}` : word);\n      }\n    }\n  }\n  \n  if (currentLine) {\n    lines.push(lines.length > 0 ? `${indent}${currentLine}` : currentLine);\n  }\n  \n  return lines;\n}\n\n/**\n * Align text within a container\n */\nexport function alignText(\n  text: string,\n  width: number,\n  alignment: TextAlignment = 'left'\n): string {\n  const lines = text.split('\\n');\n  const alignedLines = lines.map(line => padText(line, width, alignment));\n  \n  return alignedLines.join('\\n');\n}\n\n/**\n * Format a table from data\n */\nexport function formatTable(\n  data: string[][],\n  options: TableOptions = {}\n): string {\n  if (data.length === 0) {\n    return '';\n  }\n  \n  const {\n    headers,\n    alignments = [],\n    borders = true,\n    headerSeparator = true,\n    title,\n    maxWidth = getTerminalWidth(),\n    truncate = true,\n    colors = true,\n  } = options;\n  \n  // Calculate column widths\n  const numCols = Math.max(\n    data[0]?.length || 0,\n    headers?.length || 0\n  );\n  \n  const widths = options.widths || new Array(numCols).fill(0);\n  \n  // Auto-calculate widths if not provided\n  if (!options.widths) {\n    // Check headers\n    if (headers) {\n      headers.forEach((header, i) => {\n        widths[i] = Math.max(widths[i], getDisplayWidth(header));\n      });\n    }\n    \n    // Check data\n    data.forEach(row => {\n      row.forEach((cell, i) => {\n        widths[i] = Math.max(widths[i], getDisplayWidth(cell.toString()));\n      });\n    });\n    \n    // Adjust for max width\n    const totalWidth = widths.reduce((sum, w) => sum + w, 0);\n    const borderWidth = borders ? (numCols + 1) * 3 : numCols - 1; // Account for borders/separators\n    \n    if (totalWidth + borderWidth > maxWidth) {\n      const ratio = (maxWidth - borderWidth) / totalWidth;\n      for (let i = 0; i < widths.length; i++) {\n        widths[i] = Math.floor(widths[i] * ratio);\n      }\n    }\n  }\n  \n  const lines: string[] = [];\n  \n  // Title\n  if (title) {\n    const titleLine = colors ? `${Colors.bright}${title}${Colors.reset}` : title;\n    lines.push(titleLine);\n    lines.push('');\n  }\n  \n  // Helper function to format a row\n  const formatRow = (row: string[], isHeader: boolean = false): string => {\n    const cells = row.map((cell, i) => {\n      const width = widths[i] || 10;\n      const alignment = alignments[i] || 'left';\n      let content = cell.toString();\n      \n      if (truncate && getDisplayWidth(content) > width) {\n        content = truncateText(content, width);\n      }\n      \n      let formattedCell = padText(content, width, alignment);\n      \n      if (colors && isHeader) {\n        formattedCell = `${Colors.bright}${formattedCell}${Colors.reset}`;\n      }\n      \n      return formattedCell;\n    });\n    \n    if (borders) {\n      return `| ${cells.join(' | ')} |`;\n    } else {\n      return cells.join('  ');\n    }\n  };\n  \n  // Top border\n  if (borders) {\n    const borderLine = '+' + widths.map(w => '-'.repeat(w + 2)).join('+') + '+';\n    lines.push(borderLine);\n  }\n  \n  // Headers\n  if (headers) {\n    lines.push(formatRow(headers, true));\n    \n    if (headerSeparator) {\n      if (borders) {\n        const separatorLine = '+' + widths.map(w => '-'.repeat(w + 2)).join('+') + '+';\n        lines.push(separatorLine);\n      } else {\n        const separatorLine = widths.map(w => '-'.repeat(w)).join('  ');\n        lines.push(separatorLine);\n      }\n    }\n  }\n  \n  // Data rows\n  data.forEach(row => {\n    lines.push(formatRow(row));\n  });\n  \n  // Bottom border\n  if (borders) {\n    const borderLine = '+' + widths.map(w => '-'.repeat(w + 2)).join('+') + '+';\n    lines.push(borderLine);\n  }\n  \n  return lines.join('\\n');\n}\n\n/**\n * Format a list from items\n */\nexport function formatList(\n  items: string[],\n  options: ListOptions = {}\n): string {\n  if (items.length === 0) {\n    return '';\n  }\n  \n  const {\n    style = 'bullet',\n    bullet = '\u2022',\n    indent = 0,\n    colors = true,\n    maxWidth = getTerminalWidth(),\n    showNumbers = true,\n  } = options;\n  \n  const indentStr = ' '.repeat(indent);\n  const lines: string[] = [];\n  \n  items.forEach((item, index) => {\n    let prefix = '';\n    \n    switch (style) {\n      case 'bullet':\n        prefix = colors ? `${Colors.cyan}${bullet}${Colors.reset}` : bullet;\n        break;\n      \n      case 'number':\n        const number = showNumbers ? `${index + 1}.` : '-';\n        prefix = colors ? `${Colors.yellow}${number}${Colors.reset}` : number;\n        break;\n      \n      case 'dash':\n        prefix = colors ? `${Colors.cyan}-${Colors.reset}` : '-';\n        break;\n      \n      case 'custom':\n        prefix = bullet;\n        break;\n    }\n    \n    const fullPrefix = `${indentStr}${prefix} `;\n    const availableWidth = maxWidth - getDisplayWidth(fullPrefix);\n    \n    if (getDisplayWidth(item) <= availableWidth) {\n      lines.push(`${fullPrefix}${item}`);\n    } else {\n      // Wrap long items\n      const wrappedLines = wrapText(item, availableWidth, {\n        indent: getDisplayWidth(fullPrefix),\n      });\n      \n      lines.push(`${fullPrefix}${wrappedLines[0] || ''}`);\n      wrappedLines.slice(1).forEach(line => {\n        lines.push(line);\n      });\n    }\n  });\n  \n  return lines.join('\\n');\n}\n\n/**\n * Format a progress bar\n */\nexport function formatProgress(options: ProgressOptions): string {\n  const {\n    current,\n    total = 100,\n    width = 40,\n    progressChar = '\u2588',\n    emptyChar = '\u2591',\n    showPercentage = true,\n    showValues = false,\n    label,\n    colors = true,\n  } = options;\n  \n  const percentage = Math.min(100, Math.max(0, (current / total) * 100));\n  const filledWidth = Math.round((percentage / 100) * width);\n  const emptyWidth = width - filledWidth;\n  \n  let progressBar = progressChar.repeat(filledWidth) + emptyChar.repeat(emptyWidth);\n  \n  if (colors) {\n    const filledPart = `${Colors.green}${progressChar.repeat(filledWidth)}${Colors.reset}`;\n    const emptyPart = `${Colors.dim}${emptyChar.repeat(emptyWidth)}${Colors.reset}`;\n    progressBar = filledPart + emptyPart;\n  }\n  \n  const parts: string[] = [];\n  \n  if (label) {\n    const labelText = colors ? `${Colors.bright}${label}${Colors.reset}` : label;\n    parts.push(labelText);\n  }\n  \n  parts.push(`[${progressBar}]`);\n  \n  if (showPercentage) {\n    const percentText = `${percentage.toFixed(1)}%`;\n    const coloredPercent = colors ? `${Colors.cyan}${percentText}${Colors.reset}` : percentText;\n    parts.push(coloredPercent);\n  }\n  \n  if (showValues) {\n    const valuesText = `${current}/${total}`;\n    const coloredValues = colors ? `${Colors.yellow}${valuesText}${Colors.reset}` : valuesText;\n    parts.push(`(${coloredValues})`);\n  }\n  \n  return parts.join(' ');\n}\n\n/**\n * Format JSON with syntax highlighting\n */\nexport function formatJson(\n  data: any,\n  options: {\n    indent?: number;\n    colors?: boolean;\n    compact?: boolean;\n  } = {}\n): string {\n  const { indent = 2, colors = true, compact = false } = options;\n  \n  let json = JSON.stringify(data, null, compact ? 0 : indent);\n  \n  if (colors && !compact) {\n    // Basic JSON syntax highlighting\n    json = json\n      .replace(/\"([^\"]+)\":/g, `${Colors.blue}\"$1\"${Colors.reset}:`) // Keys\n      .replace(/: \"([^\"]*)\"/g, `: ${Colors.green}\"$1\"${Colors.reset}`) // String values\n      .replace(/: (\\d+)/g, `: ${Colors.yellow}$1${Colors.reset}`) // Numbers\n      .replace(/: (true|false)/g, `: ${Colors.magenta}$1${Colors.reset}`) // Booleans\n      .replace(/: null/g, `: ${Colors.dim}null${Colors.reset}`); // Null\n  }\n  \n  return json;\n}\n\n/**\n * Format YAML-like output\n */\nexport function formatYaml(\n  data: any,\n  options: {\n    indent?: number;\n    colors?: boolean;\n  } = {}\n): string {\n  const { indent = 2, colors = true } = options;\n  \n  const formatValue = (value: any, level: number = 0): string => {\n    const indentStr = ' '.repeat(level * indent);\n    \n    if (value === null || value === undefined) {\n      return colors ? `${Colors.dim}null${Colors.reset}` : 'null';\n    }\n    \n    if (typeof value === 'string') {\n      return colors ? `${Colors.green}${value}${Colors.reset}` : value;\n    }\n    \n    if (typeof value === 'number') {\n      return colors ? `${Colors.yellow}${value}${Colors.reset}` : value.toString();\n    }\n    \n    if (typeof value === 'boolean') {\n      return colors ? `${Colors.magenta}${value}${Colors.reset}` : value.toString();\n    }\n    \n    if (Array.isArray(value)) {\n      if (value.length === 0) {\n        return '[]';\n      }\n      \n      return value.map(item => `\\n${indentStr}- ${formatValue(item, level + 1).trim()}`).join('');\n    }\n    \n    if (typeof value === 'object') {\n      const entries = Object.entries(value);\n      \n      if (entries.length === 0) {\n        return '{}';\n      }\n      \n      return entries.map(([key, val]) => {\n        const keyStr = colors ? `${Colors.blue}${key}${Colors.reset}` : key;\n        const valStr = formatValue(val, level + 1);\n        \n        if (typeof val === 'object' && val !== null && !Array.isArray(val)) {\n          return `\\n${indentStr}${keyStr}:${valStr}`;\n        } else {\n          return `\\n${indentStr}${keyStr}: ${valStr.trim()}`;\n        }\n      }).join('');\n    }\n    \n    return value.toString();\n  };\n  \n  return formatValue(data).trim();\n}\n\n/**\n * Format markdown-like output\n */\nexport function formatMarkdown(\n  content: string,\n  options: {\n    colors?: boolean;\n    maxWidth?: number;\n  } = {}\n): string {\n  const { colors = true, maxWidth = getTerminalWidth() } = options;\n  \n  if (!colors) {\n    return content;\n  }\n  \n  return content\n    // Headers\n    .replace(/^(#{1,6})\\s+(.+)$/gm, (_, hashes, text) => {\n      const level = hashes.length;\n      const color = level <= 2 ? Colors.bright : Colors.cyan;\n      return `${color}${hashes} ${text}${Colors.reset}`;\n    })\n    // Bold\n    .replace(/\\*\\*([^*]+)\\*\\*/g, `${Colors.bright}$1${Colors.reset}`)\n    // Italic\n    .replace(/\\*([^*]+)\\*/g, `${Colors.dim}$1${Colors.reset}`)\n    // Code\n    .replace(/`([^`]+)`/g, `${Colors.yellow}$1${Colors.reset}`)\n    // Links\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, `${Colors.blue}$1${Colors.reset} (${Colors.dim}$2${Colors.reset})`);\n}\n\n/**\n * Format duration in human-readable format\n */\nexport function formatDuration(milliseconds: number): string {\n  if (milliseconds < 1000) {\n    return `${milliseconds}ms`;\n  }\n  \n  const seconds = Math.floor(milliseconds / 1000);\n  if (seconds < 60) {\n    return `${seconds}s`;\n  }\n  \n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  \n  if (minutes < 60) {\n    return remainingSeconds > 0 ? `${minutes}m ${remainingSeconds}s` : `${minutes}m`;\n  }\n  \n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  \n  if (hours < 24) {\n    return remainingMinutes > 0 ? `${hours}h ${remainingMinutes}m` : `${hours}h`;\n  }\n  \n  const days = Math.floor(hours / 24);\n  const remainingHours = hours % 24;\n  \n  return remainingHours > 0 ? `${days}d ${remainingHours}h` : `${days}d`;\n}\n\n/**\n * Format bytes in human-readable format\n */\nexport function formatBytes(bytes: number): string {\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  \n  if (bytes === 0) {\n    return '0 B';\n  }\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  const size = bytes / Math.pow(1024, i);\n  \n  return `${size.toFixed(i === 0 ? 0 : 1)} ${sizes[i]}`;\n}\n\n/**\n * Format date in human-readable format\n */\nexport function formatDate(\n  date: Date | string | number,\n  options: {\n    format?: 'short' | 'long' | 'iso' | 'relative';\n    includeTime?: boolean;\n  } = {}\n): string {\n  const { format = 'short', includeTime = false } = options;\n  const dateObj = new Date(date);\n  \n  if (isNaN(dateObj.getTime())) {\n    return 'Invalid Date';\n  }\n  \n  switch (format) {\n    case 'iso':\n      return dateObj.toISOString();\n    \n    case 'long':\n      return includeTime\n        ? dateObj.toLocaleString()\n        : dateObj.toLocaleDateString();\n    \n    case 'relative':\n      return formatRelativeTime(dateObj);\n    \n    case 'short':\n    default:\n      const year = dateObj.getFullYear();\n      const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\n      const day = dateObj.getDate().toString().padStart(2, '0');\n      \n      if (includeTime) {\n        const hours = dateObj.getHours().toString().padStart(2, '0');\n        const minutes = dateObj.getMinutes().toString().padStart(2, '0');\n        return `${year}-${month}-${day} ${hours}:${minutes}`;\n      }\n      \n      return `${year}-${month}-${day}`;\n  }\n}\n\n/**\n * Format relative time (e.g., \"2 hours ago\")\n */\nexport function formatRelativeTime(date: Date | string | number): string {\n  const dateObj = new Date(date);\n  const now = new Date();\n  const diffMs = now.getTime() - dateObj.getTime();\n  \n  if (diffMs < 0) {\n    return 'in the future';\n  }\n  \n  const seconds = Math.floor(diffMs / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const weeks = Math.floor(days / 7);\n  const months = Math.floor(days / 30);\n  const years = Math.floor(days / 365);\n  \n  if (years > 0) {\n    return `${years} year${years > 1 ? 's' : ''} ago`;\n  }\n  \n  if (months > 0) {\n    return `${months} month${months > 1 ? 's' : ''} ago`;\n  }\n  \n  if (weeks > 0) {\n    return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n  }\n  \n  if (days > 0) {\n    return `${days} day${days > 1 ? 's' : ''} ago`;\n  }\n  \n  if (hours > 0) {\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n  }\n  \n  if (minutes > 0) {\n    return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n  }\n  \n  return seconds > 5 ? `${seconds} seconds ago` : 'just now';\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b9e41b6a56b23d858ec294d21c67b51849a34836"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2osygnd09n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2osygnd09n();
/**
 * Formatting Utilities
 *
 * Provides output formatting functions for tables, lists, progress bars, and text.
 * Supports various output formats and terminal-aware formatting.
 */
import { Colors } from './logger.js';
/**
 * Get terminal width
 */
export function getTerminalWidth() {
  /* istanbul ignore next */
  cov_2osygnd09n().f[0]++;
  cov_2osygnd09n().s[0]++;
  return /* istanbul ignore next */(cov_2osygnd09n().b[0][0]++, process.stdout.columns) ||
  /* istanbul ignore next */
  (cov_2osygnd09n().b[0][1]++, 80);
}
/**
 * Strip ANSI escape codes from text
 */
export function stripAnsi(text) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[1]++;
  cov_2osygnd09n().s[1]++;
  return text.replace(/\x1b\[[0-9;]*m/g, '');
}
/**
 * Get the display width of text (excluding ANSI codes)
 */
function getDisplayWidth(text) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[2]++;
  cov_2osygnd09n().s[2]++;
  return stripAnsi(text).length;
}
/**
 * Pad text to a specific width
 */
export function padText(text, width, alignment =
/* istanbul ignore next */
(cov_2osygnd09n().b[1][0]++, 'left'), padChar =
/* istanbul ignore next */
(cov_2osygnd09n().b[2][0]++, ' ')) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[3]++;
  const displayWidth =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[3]++, getDisplayWidth(text));
  const padding =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[4]++, Math.max(0, width - displayWidth));
  /* istanbul ignore next */
  cov_2osygnd09n().s[5]++;
  switch (alignment) {
    case 'center':
      /* istanbul ignore next */
      cov_2osygnd09n().b[3][0]++;
      const leftPad =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[6]++, Math.floor(padding / 2));
      const rightPad =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[7]++, padding - leftPad);
      /* istanbul ignore next */
      cov_2osygnd09n().s[8]++;
      return padChar.repeat(leftPad) + text + padChar.repeat(rightPad);
    case 'right':
      /* istanbul ignore next */
      cov_2osygnd09n().b[3][1]++;
      cov_2osygnd09n().s[9]++;
      return padChar.repeat(padding) + text;
    case 'left':
      /* istanbul ignore next */
      cov_2osygnd09n().b[3][2]++;
    default:
      /* istanbul ignore next */
      cov_2osygnd09n().b[3][3]++;
      cov_2osygnd09n().s[10]++;
      return text + padChar.repeat(padding);
  }
}
/**
 * Truncate text to a maximum width
 */
export function truncateText(text, maxWidth, ellipsis =
/* istanbul ignore next */
(cov_2osygnd09n().b[4][0]++, '...')) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[4]++;
  const displayWidth =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[11]++, getDisplayWidth(text));
  /* istanbul ignore next */
  cov_2osygnd09n().s[12]++;
  if (displayWidth <= maxWidth) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[5][0]++;
    cov_2osygnd09n().s[13]++;
    return text;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[5][1]++;
  }
  const stripped =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[14]++, stripAnsi(text));
  const truncated =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[15]++, stripped.slice(0, maxWidth - ellipsis.length) + ellipsis);
  /* istanbul ignore next */
  cov_2osygnd09n().s[16]++;
  return truncated;
}
/**
 * Wrap text to multiple lines
 */
export function wrapText(text, maxWidth, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[6][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[5]++;
  const indent =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[17]++, ' '.repeat(
  /* istanbul ignore next */
  (cov_2osygnd09n().b[7][0]++, options.indent) ||
  /* istanbul ignore next */
  (cov_2osygnd09n().b[7][1]++, 0)));
  const words =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[18]++, text.split(' '));
  const lines =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[19]++, []);
  let currentLine =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[20]++, '');
  /* istanbul ignore next */
  cov_2osygnd09n().s[21]++;
  for (const word of words) {
    const testLine =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[22]++, currentLine ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[8][0]++, `${currentLine} ${word}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[8][1]++, word));
    const testLineWithIndent =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[23]++, lines.length > 0 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[9][0]++, `${indent}${testLine}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[9][1]++, testLine));
    /* istanbul ignore next */
    cov_2osygnd09n().s[24]++;
    if (getDisplayWidth(testLineWithIndent) <= maxWidth) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[10][0]++;
      cov_2osygnd09n().s[25]++;
      currentLine = testLine;
    } else {
      /* istanbul ignore next */
      cov_2osygnd09n().b[10][1]++;
      cov_2osygnd09n().s[26]++;
      if (currentLine) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[11][0]++;
        cov_2osygnd09n().s[27]++;
        lines.push(lines.length > 0 ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[12][0]++, `${indent}${currentLine}`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[12][1]++, currentLine));
        /* istanbul ignore next */
        cov_2osygnd09n().s[28]++;
        currentLine = word;
      } else {
        /* istanbul ignore next */
        cov_2osygnd09n().b[11][1]++;
        cov_2osygnd09n().s[29]++;
        // Word is too long, force break
        lines.push(lines.length > 0 ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[13][0]++, `${indent}${word}`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[13][1]++, word));
      }
    }
  }
  /* istanbul ignore next */
  cov_2osygnd09n().s[30]++;
  if (currentLine) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[14][0]++;
    cov_2osygnd09n().s[31]++;
    lines.push(lines.length > 0 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[15][0]++, `${indent}${currentLine}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[15][1]++, currentLine));
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[14][1]++;
  }
  cov_2osygnd09n().s[32]++;
  return lines;
}
/**
 * Align text within a container
 */
export function alignText(text, width, alignment =
/* istanbul ignore next */
(cov_2osygnd09n().b[16][0]++, 'left')) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[6]++;
  const lines =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[33]++, text.split('\n'));
  const alignedLines =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[34]++, lines.map(line => {
    /* istanbul ignore next */
    cov_2osygnd09n().f[7]++;
    cov_2osygnd09n().s[35]++;
    return padText(line, width, alignment);
  }));
  /* istanbul ignore next */
  cov_2osygnd09n().s[36]++;
  return alignedLines.join('\n');
}
/**
 * Format a table from data
 */
export function formatTable(data, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[17][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[8]++;
  cov_2osygnd09n().s[37]++;
  if (data.length === 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[18][0]++;
    cov_2osygnd09n().s[38]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[18][1]++;
  }
  const {
    headers,
    alignments =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[19][0]++, []),
    borders =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[20][0]++, true),
    headerSeparator =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[21][0]++, true),
    title,
    maxWidth =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[22][0]++, getTerminalWidth()),
    truncate =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[23][0]++, true),
    colors =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[24][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[39]++, options);
  // Calculate column widths
  const numCols =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[40]++, Math.max(
  /* istanbul ignore next */
  (cov_2osygnd09n().b[25][0]++, data[0]?.length) ||
  /* istanbul ignore next */
  (cov_2osygnd09n().b[25][1]++, 0),
  /* istanbul ignore next */
  (cov_2osygnd09n().b[26][0]++, headers?.length) ||
  /* istanbul ignore next */
  (cov_2osygnd09n().b[26][1]++, 0)));
  const widths =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[41]++,
  /* istanbul ignore next */
  (cov_2osygnd09n().b[27][0]++, options.widths) ||
  /* istanbul ignore next */
  (cov_2osygnd09n().b[27][1]++, new Array(numCols).fill(0)));
  // Auto-calculate widths if not provided
  /* istanbul ignore next */
  cov_2osygnd09n().s[42]++;
  if (!options.widths) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[28][0]++;
    cov_2osygnd09n().s[43]++;
    // Check headers
    if (headers) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[29][0]++;
      cov_2osygnd09n().s[44]++;
      headers.forEach((header, i) => {
        /* istanbul ignore next */
        cov_2osygnd09n().f[9]++;
        cov_2osygnd09n().s[45]++;
        widths[i] = Math.max(widths[i], getDisplayWidth(header));
      });
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[29][1]++;
    }
    // Check data
    cov_2osygnd09n().s[46]++;
    data.forEach(row => {
      /* istanbul ignore next */
      cov_2osygnd09n().f[10]++;
      cov_2osygnd09n().s[47]++;
      row.forEach((cell, i) => {
        /* istanbul ignore next */
        cov_2osygnd09n().f[11]++;
        cov_2osygnd09n().s[48]++;
        widths[i] = Math.max(widths[i], getDisplayWidth(cell.toString()));
      });
    });
    // Adjust for max width
    const totalWidth =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[49]++, widths.reduce((sum, w) => {
      /* istanbul ignore next */
      cov_2osygnd09n().f[12]++;
      cov_2osygnd09n().s[50]++;
      return sum + w;
    }, 0));
    const borderWidth =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[51]++, borders ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[30][0]++, (numCols + 1) * 3) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[30][1]++, numCols - 1)); // Account for borders/separators
    /* istanbul ignore next */
    cov_2osygnd09n().s[52]++;
    if (totalWidth + borderWidth > maxWidth) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[31][0]++;
      const ratio =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[53]++, (maxWidth - borderWidth) / totalWidth);
      /* istanbul ignore next */
      cov_2osygnd09n().s[54]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[55]++, 0); i < widths.length; i++) {
        /* istanbul ignore next */
        cov_2osygnd09n().s[56]++;
        widths[i] = Math.floor(widths[i] * ratio);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[31][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[28][1]++;
  }
  const lines =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[57]++, []);
  // Title
  /* istanbul ignore next */
  cov_2osygnd09n().s[58]++;
  if (title) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[32][0]++;
    const titleLine =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[59]++, colors ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[33][0]++, `${Colors.bright}${title}${Colors.reset}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[33][1]++, title));
    /* istanbul ignore next */
    cov_2osygnd09n().s[60]++;
    lines.push(titleLine);
    /* istanbul ignore next */
    cov_2osygnd09n().s[61]++;
    lines.push('');
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[32][1]++;
  }
  // Helper function to format a row
  cov_2osygnd09n().s[62]++;
  const formatRow = (row, isHeader =
  /* istanbul ignore next */
  (cov_2osygnd09n().b[34][0]++, false)) => {
    /* istanbul ignore next */
    cov_2osygnd09n().f[13]++;
    const cells =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[63]++, row.map((cell, i) => {
      /* istanbul ignore next */
      cov_2osygnd09n().f[14]++;
      const width =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[64]++,
      /* istanbul ignore next */
      (cov_2osygnd09n().b[35][0]++, widths[i]) ||
      /* istanbul ignore next */
      (cov_2osygnd09n().b[35][1]++, 10));
      const alignment =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[65]++,
      /* istanbul ignore next */
      (cov_2osygnd09n().b[36][0]++, alignments[i]) ||
      /* istanbul ignore next */
      (cov_2osygnd09n().b[36][1]++, 'left'));
      let content =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[66]++, cell.toString());
      /* istanbul ignore next */
      cov_2osygnd09n().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_2osygnd09n().b[38][0]++, truncate) &&
      /* istanbul ignore next */
      (cov_2osygnd09n().b[38][1]++, getDisplayWidth(content) > width)) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[37][0]++;
        cov_2osygnd09n().s[68]++;
        content = truncateText(content, width);
      } else
      /* istanbul ignore next */
      {
        cov_2osygnd09n().b[37][1]++;
      }
      let formattedCell =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[69]++, padText(content, width, alignment));
      /* istanbul ignore next */
      cov_2osygnd09n().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_2osygnd09n().b[40][0]++, colors) &&
      /* istanbul ignore next */
      (cov_2osygnd09n().b[40][1]++, isHeader)) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[39][0]++;
        cov_2osygnd09n().s[71]++;
        formattedCell = `${Colors.bright}${formattedCell}${Colors.reset}`;
      } else
      /* istanbul ignore next */
      {
        cov_2osygnd09n().b[39][1]++;
      }
      cov_2osygnd09n().s[72]++;
      return formattedCell;
    }));
    /* istanbul ignore next */
    cov_2osygnd09n().s[73]++;
    if (borders) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[41][0]++;
      cov_2osygnd09n().s[74]++;
      return `| ${cells.join(' | ')} |`;
    } else {
      /* istanbul ignore next */
      cov_2osygnd09n().b[41][1]++;
      cov_2osygnd09n().s[75]++;
      return cells.join('  ');
    }
  };
  // Top border
  /* istanbul ignore next */
  cov_2osygnd09n().s[76]++;
  if (borders) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[42][0]++;
    const borderLine =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[77]++, '+' + widths.map(w => {
      /* istanbul ignore next */
      cov_2osygnd09n().f[15]++;
      cov_2osygnd09n().s[78]++;
      return '-'.repeat(w + 2);
    }).join('+') + '+');
    /* istanbul ignore next */
    cov_2osygnd09n().s[79]++;
    lines.push(borderLine);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[42][1]++;
  }
  // Headers
  cov_2osygnd09n().s[80]++;
  if (headers) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[43][0]++;
    cov_2osygnd09n().s[81]++;
    lines.push(formatRow(headers, true));
    /* istanbul ignore next */
    cov_2osygnd09n().s[82]++;
    if (headerSeparator) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[44][0]++;
      cov_2osygnd09n().s[83]++;
      if (borders) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[45][0]++;
        const separatorLine =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[84]++, '+' + widths.map(w => {
          /* istanbul ignore next */
          cov_2osygnd09n().f[16]++;
          cov_2osygnd09n().s[85]++;
          return '-'.repeat(w + 2);
        }).join('+') + '+');
        /* istanbul ignore next */
        cov_2osygnd09n().s[86]++;
        lines.push(separatorLine);
      } else {
        /* istanbul ignore next */
        cov_2osygnd09n().b[45][1]++;
        const separatorLine =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[87]++, widths.map(w => {
          /* istanbul ignore next */
          cov_2osygnd09n().f[17]++;
          cov_2osygnd09n().s[88]++;
          return '-'.repeat(w);
        }).join('  '));
        /* istanbul ignore next */
        cov_2osygnd09n().s[89]++;
        lines.push(separatorLine);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[44][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[43][1]++;
  }
  // Data rows
  cov_2osygnd09n().s[90]++;
  data.forEach(row => {
    /* istanbul ignore next */
    cov_2osygnd09n().f[18]++;
    cov_2osygnd09n().s[91]++;
    lines.push(formatRow(row));
  });
  // Bottom border
  /* istanbul ignore next */
  cov_2osygnd09n().s[92]++;
  if (borders) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[46][0]++;
    const borderLine =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[93]++, '+' + widths.map(w => {
      /* istanbul ignore next */
      cov_2osygnd09n().f[19]++;
      cov_2osygnd09n().s[94]++;
      return '-'.repeat(w + 2);
    }).join('+') + '+');
    /* istanbul ignore next */
    cov_2osygnd09n().s[95]++;
    lines.push(borderLine);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[46][1]++;
  }
  cov_2osygnd09n().s[96]++;
  return lines.join('\n');
}
/**
 * Format a list from items
 */
export function formatList(items, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[47][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[20]++;
  cov_2osygnd09n().s[97]++;
  if (items.length === 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[48][0]++;
    cov_2osygnd09n().s[98]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[48][1]++;
  }
  const {
    style =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[49][0]++, 'bullet'),
    bullet =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[50][0]++, '•'),
    indent =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[51][0]++, 0),
    colors =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[52][0]++, true),
    maxWidth =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[53][0]++, getTerminalWidth()),
    showNumbers =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[54][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[99]++, options);
  const indentStr =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[100]++, ' '.repeat(indent));
  const lines =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[101]++, []);
  /* istanbul ignore next */
  cov_2osygnd09n().s[102]++;
  items.forEach((item, index) => {
    /* istanbul ignore next */
    cov_2osygnd09n().f[21]++;
    let prefix =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[103]++, '');
    /* istanbul ignore next */
    cov_2osygnd09n().s[104]++;
    switch (style) {
      case 'bullet':
        /* istanbul ignore next */
        cov_2osygnd09n().b[55][0]++;
        cov_2osygnd09n().s[105]++;
        prefix = colors ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[56][0]++, `${Colors.cyan}${bullet}${Colors.reset}`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[56][1]++, bullet);
        /* istanbul ignore next */
        cov_2osygnd09n().s[106]++;
        break;
      case 'number':
        /* istanbul ignore next */
        cov_2osygnd09n().b[55][1]++;
        const number =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[107]++, showNumbers ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[57][0]++, `${index + 1}.`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[57][1]++, '-'));
        /* istanbul ignore next */
        cov_2osygnd09n().s[108]++;
        prefix = colors ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[58][0]++, `${Colors.yellow}${number}${Colors.reset}`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[58][1]++, number);
        /* istanbul ignore next */
        cov_2osygnd09n().s[109]++;
        break;
      case 'dash':
        /* istanbul ignore next */
        cov_2osygnd09n().b[55][2]++;
        cov_2osygnd09n().s[110]++;
        prefix = colors ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[59][0]++, `${Colors.cyan}-${Colors.reset}`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[59][1]++, '-');
        /* istanbul ignore next */
        cov_2osygnd09n().s[111]++;
        break;
      case 'custom':
        /* istanbul ignore next */
        cov_2osygnd09n().b[55][3]++;
        cov_2osygnd09n().s[112]++;
        prefix = bullet;
        /* istanbul ignore next */
        cov_2osygnd09n().s[113]++;
        break;
    }
    const fullPrefix =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[114]++, `${indentStr}${prefix} `);
    const availableWidth =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[115]++, maxWidth - getDisplayWidth(fullPrefix));
    /* istanbul ignore next */
    cov_2osygnd09n().s[116]++;
    if (getDisplayWidth(item) <= availableWidth) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[60][0]++;
      cov_2osygnd09n().s[117]++;
      lines.push(`${fullPrefix}${item}`);
    } else {
      /* istanbul ignore next */
      cov_2osygnd09n().b[60][1]++;
      // Wrap long items
      const wrappedLines =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[118]++, wrapText(item, availableWidth, {
        indent: getDisplayWidth(fullPrefix)
      }));
      /* istanbul ignore next */
      cov_2osygnd09n().s[119]++;
      lines.push(`${fullPrefix}${
      /* istanbul ignore next */
      (cov_2osygnd09n().b[61][0]++, wrappedLines[0]) ||
      /* istanbul ignore next */
      (cov_2osygnd09n().b[61][1]++, '')}`);
      /* istanbul ignore next */
      cov_2osygnd09n().s[120]++;
      wrappedLines.slice(1).forEach(line => {
        /* istanbul ignore next */
        cov_2osygnd09n().f[22]++;
        cov_2osygnd09n().s[121]++;
        lines.push(line);
      });
    }
  });
  /* istanbul ignore next */
  cov_2osygnd09n().s[122]++;
  return lines.join('\n');
}
/**
 * Format a progress bar
 */
export function formatProgress(options) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[23]++;
  const {
    current,
    total =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[62][0]++, 100),
    width =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[63][0]++, 40),
    progressChar =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[64][0]++, '█'),
    emptyChar =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[65][0]++, '░'),
    showPercentage =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[66][0]++, true),
    showValues =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[67][0]++, false),
    label,
    colors =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[68][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[123]++, options);
  const percentage =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[124]++, Math.min(100, Math.max(0, current / total * 100)));
  const filledWidth =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[125]++, Math.round(percentage / 100 * width));
  const emptyWidth =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[126]++, width - filledWidth);
  let progressBar =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[127]++, progressChar.repeat(filledWidth) + emptyChar.repeat(emptyWidth));
  /* istanbul ignore next */
  cov_2osygnd09n().s[128]++;
  if (colors) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[69][0]++;
    const filledPart =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[129]++, `${Colors.green}${progressChar.repeat(filledWidth)}${Colors.reset}`);
    const emptyPart =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[130]++, `${Colors.dim}${emptyChar.repeat(emptyWidth)}${Colors.reset}`);
    /* istanbul ignore next */
    cov_2osygnd09n().s[131]++;
    progressBar = filledPart + emptyPart;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[69][1]++;
  }
  const parts =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[132]++, []);
  /* istanbul ignore next */
  cov_2osygnd09n().s[133]++;
  if (label) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[70][0]++;
    const labelText =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[134]++, colors ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[71][0]++, `${Colors.bright}${label}${Colors.reset}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[71][1]++, label));
    /* istanbul ignore next */
    cov_2osygnd09n().s[135]++;
    parts.push(labelText);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[70][1]++;
  }
  cov_2osygnd09n().s[136]++;
  parts.push(`[${progressBar}]`);
  /* istanbul ignore next */
  cov_2osygnd09n().s[137]++;
  if (showPercentage) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[72][0]++;
    const percentText =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[138]++, `${percentage.toFixed(1)}%`);
    const coloredPercent =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[139]++, colors ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[73][0]++, `${Colors.cyan}${percentText}${Colors.reset}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[73][1]++, percentText));
    /* istanbul ignore next */
    cov_2osygnd09n().s[140]++;
    parts.push(coloredPercent);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[72][1]++;
  }
  cov_2osygnd09n().s[141]++;
  if (showValues) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[74][0]++;
    const valuesText =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[142]++, `${current}/${total}`);
    const coloredValues =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[143]++, colors ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[75][0]++, `${Colors.yellow}${valuesText}${Colors.reset}`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[75][1]++, valuesText));
    /* istanbul ignore next */
    cov_2osygnd09n().s[144]++;
    parts.push(`(${coloredValues})`);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[74][1]++;
  }
  cov_2osygnd09n().s[145]++;
  return parts.join(' ');
}
/**
 * Format JSON with syntax highlighting
 */
export function formatJson(data, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[76][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[24]++;
  const {
    indent =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[77][0]++, 2),
    colors =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[78][0]++, true),
    compact =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[79][0]++, false)
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[146]++, options);
  let json =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[147]++, JSON.stringify(data, null, compact ?
  /* istanbul ignore next */
  (cov_2osygnd09n().b[80][0]++, 0) :
  /* istanbul ignore next */
  (cov_2osygnd09n().b[80][1]++, indent)));
  /* istanbul ignore next */
  cov_2osygnd09n().s[148]++;
  if (
  /* istanbul ignore next */
  (cov_2osygnd09n().b[82][0]++, colors) &&
  /* istanbul ignore next */
  (cov_2osygnd09n().b[82][1]++, !compact)) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[81][0]++;
    cov_2osygnd09n().s[149]++;
    // Basic JSON syntax highlighting
    json = json.replace(/"([^"]+)":/g, `${Colors.blue}"$1"${Colors.reset}:`) // Keys
    .replace(/: "([^"]*)"/g, `: ${Colors.green}"$1"${Colors.reset}`) // String values
    .replace(/: (\d+)/g, `: ${Colors.yellow}$1${Colors.reset}`) // Numbers
    .replace(/: (true|false)/g, `: ${Colors.magenta}$1${Colors.reset}`) // Booleans
    .replace(/: null/g, `: ${Colors.dim}null${Colors.reset}`); // Null
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[81][1]++;
  }
  cov_2osygnd09n().s[150]++;
  return json;
}
/**
 * Format YAML-like output
 */
export function formatYaml(data, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[83][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[25]++;
  const {
    indent =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[84][0]++, 2),
    colors =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[85][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[151]++, options);
  /* istanbul ignore next */
  cov_2osygnd09n().s[152]++;
  const formatValue = (value, level =
  /* istanbul ignore next */
  (cov_2osygnd09n().b[86][0]++, 0)) => {
    /* istanbul ignore next */
    cov_2osygnd09n().f[26]++;
    const indentStr =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[153]++, ' '.repeat(level * indent));
    /* istanbul ignore next */
    cov_2osygnd09n().s[154]++;
    if (
    /* istanbul ignore next */
    (cov_2osygnd09n().b[88][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_2osygnd09n().b[88][1]++, value === undefined)) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[87][0]++;
      cov_2osygnd09n().s[155]++;
      return colors ?
      /* istanbul ignore next */
      (cov_2osygnd09n().b[89][0]++, `${Colors.dim}null${Colors.reset}`) :
      /* istanbul ignore next */
      (cov_2osygnd09n().b[89][1]++, 'null');
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[87][1]++;
    }
    cov_2osygnd09n().s[156]++;
    if (typeof value === 'string') {
      /* istanbul ignore next */
      cov_2osygnd09n().b[90][0]++;
      cov_2osygnd09n().s[157]++;
      return colors ?
      /* istanbul ignore next */
      (cov_2osygnd09n().b[91][0]++, `${Colors.green}${value}${Colors.reset}`) :
      /* istanbul ignore next */
      (cov_2osygnd09n().b[91][1]++, value);
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[90][1]++;
    }
    cov_2osygnd09n().s[158]++;
    if (typeof value === 'number') {
      /* istanbul ignore next */
      cov_2osygnd09n().b[92][0]++;
      cov_2osygnd09n().s[159]++;
      return colors ?
      /* istanbul ignore next */
      (cov_2osygnd09n().b[93][0]++, `${Colors.yellow}${value}${Colors.reset}`) :
      /* istanbul ignore next */
      (cov_2osygnd09n().b[93][1]++, value.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[92][1]++;
    }
    cov_2osygnd09n().s[160]++;
    if (typeof value === 'boolean') {
      /* istanbul ignore next */
      cov_2osygnd09n().b[94][0]++;
      cov_2osygnd09n().s[161]++;
      return colors ?
      /* istanbul ignore next */
      (cov_2osygnd09n().b[95][0]++, `${Colors.magenta}${value}${Colors.reset}`) :
      /* istanbul ignore next */
      (cov_2osygnd09n().b[95][1]++, value.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[94][1]++;
    }
    cov_2osygnd09n().s[162]++;
    if (Array.isArray(value)) {
      /* istanbul ignore next */
      cov_2osygnd09n().b[96][0]++;
      cov_2osygnd09n().s[163]++;
      if (value.length === 0) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[97][0]++;
        cov_2osygnd09n().s[164]++;
        return '[]';
      } else
      /* istanbul ignore next */
      {
        cov_2osygnd09n().b[97][1]++;
      }
      cov_2osygnd09n().s[165]++;
      return value.map(item => {
        /* istanbul ignore next */
        cov_2osygnd09n().f[27]++;
        cov_2osygnd09n().s[166]++;
        return `\n${indentStr}- ${formatValue(item, level + 1).trim()}`;
      }).join('');
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[96][1]++;
    }
    cov_2osygnd09n().s[167]++;
    if (typeof value === 'object') {
      /* istanbul ignore next */
      cov_2osygnd09n().b[98][0]++;
      const entries =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[168]++, Object.entries(value));
      /* istanbul ignore next */
      cov_2osygnd09n().s[169]++;
      if (entries.length === 0) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[99][0]++;
        cov_2osygnd09n().s[170]++;
        return '{}';
      } else
      /* istanbul ignore next */
      {
        cov_2osygnd09n().b[99][1]++;
      }
      cov_2osygnd09n().s[171]++;
      return entries.map(([key, val]) => {
        /* istanbul ignore next */
        cov_2osygnd09n().f[28]++;
        const keyStr =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[172]++, colors ?
        /* istanbul ignore next */
        (cov_2osygnd09n().b[100][0]++, `${Colors.blue}${key}${Colors.reset}`) :
        /* istanbul ignore next */
        (cov_2osygnd09n().b[100][1]++, key));
        const valStr =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[173]++, formatValue(val, level + 1));
        /* istanbul ignore next */
        cov_2osygnd09n().s[174]++;
        if (
        /* istanbul ignore next */
        (cov_2osygnd09n().b[102][0]++, typeof val === 'object') &&
        /* istanbul ignore next */
        (cov_2osygnd09n().b[102][1]++, val !== null) &&
        /* istanbul ignore next */
        (cov_2osygnd09n().b[102][2]++, !Array.isArray(val))) {
          /* istanbul ignore next */
          cov_2osygnd09n().b[101][0]++;
          cov_2osygnd09n().s[175]++;
          return `\n${indentStr}${keyStr}:${valStr}`;
        } else {
          /* istanbul ignore next */
          cov_2osygnd09n().b[101][1]++;
          cov_2osygnd09n().s[176]++;
          return `\n${indentStr}${keyStr}: ${valStr.trim()}`;
        }
      }).join('');
    } else
    /* istanbul ignore next */
    {
      cov_2osygnd09n().b[98][1]++;
    }
    cov_2osygnd09n().s[177]++;
    return value.toString();
  };
  /* istanbul ignore next */
  cov_2osygnd09n().s[178]++;
  return formatValue(data).trim();
}
/**
 * Format markdown-like output
 */
export function formatMarkdown(content, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[103][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[29]++;
  const {
    colors =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[104][0]++, true),
    maxWidth =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[105][0]++, getTerminalWidth())
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[179]++, options);
  /* istanbul ignore next */
  cov_2osygnd09n().s[180]++;
  if (!colors) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[106][0]++;
    cov_2osygnd09n().s[181]++;
    return content;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[106][1]++;
  }
  cov_2osygnd09n().s[182]++;
  return content
  // Headers
  .replace(/^(#{1,6})\s+(.+)$/gm, (_, hashes, text) => {
    /* istanbul ignore next */
    cov_2osygnd09n().f[30]++;
    const level =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[183]++, hashes.length);
    const color =
    /* istanbul ignore next */
    (cov_2osygnd09n().s[184]++, level <= 2 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[107][0]++, Colors.bright) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[107][1]++, Colors.cyan));
    /* istanbul ignore next */
    cov_2osygnd09n().s[185]++;
    return `${color}${hashes} ${text}${Colors.reset}`;
  })
  // Bold
  .replace(/\*\*([^*]+)\*\*/g, `${Colors.bright}$1${Colors.reset}`)
  // Italic
  .replace(/\*([^*]+)\*/g, `${Colors.dim}$1${Colors.reset}`)
  // Code
  .replace(/`([^`]+)`/g, `${Colors.yellow}$1${Colors.reset}`)
  // Links
  .replace(/\[([^\]]+)\]\(([^)]+)\)/g, `${Colors.blue}$1${Colors.reset} (${Colors.dim}$2${Colors.reset})`);
}
/**
 * Format duration in human-readable format
 */
export function formatDuration(milliseconds) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[31]++;
  cov_2osygnd09n().s[186]++;
  if (milliseconds < 1000) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[108][0]++;
    cov_2osygnd09n().s[187]++;
    return `${milliseconds}ms`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[108][1]++;
  }
  const seconds =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[188]++, Math.floor(milliseconds / 1000));
  /* istanbul ignore next */
  cov_2osygnd09n().s[189]++;
  if (seconds < 60) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[109][0]++;
    cov_2osygnd09n().s[190]++;
    return `${seconds}s`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[109][1]++;
  }
  const minutes =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[191]++, Math.floor(seconds / 60));
  const remainingSeconds =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[192]++, seconds % 60);
  /* istanbul ignore next */
  cov_2osygnd09n().s[193]++;
  if (minutes < 60) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[110][0]++;
    cov_2osygnd09n().s[194]++;
    return remainingSeconds > 0 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[111][0]++, `${minutes}m ${remainingSeconds}s`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[111][1]++, `${minutes}m`);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[110][1]++;
  }
  const hours =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[195]++, Math.floor(minutes / 60));
  const remainingMinutes =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[196]++, minutes % 60);
  /* istanbul ignore next */
  cov_2osygnd09n().s[197]++;
  if (hours < 24) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[112][0]++;
    cov_2osygnd09n().s[198]++;
    return remainingMinutes > 0 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[113][0]++, `${hours}h ${remainingMinutes}m`) :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[113][1]++, `${hours}h`);
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[112][1]++;
  }
  const days =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[199]++, Math.floor(hours / 24));
  const remainingHours =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[200]++, hours % 24);
  /* istanbul ignore next */
  cov_2osygnd09n().s[201]++;
  return remainingHours > 0 ?
  /* istanbul ignore next */
  (cov_2osygnd09n().b[114][0]++, `${days}d ${remainingHours}h`) :
  /* istanbul ignore next */
  (cov_2osygnd09n().b[114][1]++, `${days}d`);
}
/**
 * Format bytes in human-readable format
 */
export function formatBytes(bytes) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[32]++;
  const sizes =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[202]++, ['B', 'KB', 'MB', 'GB', 'TB']);
  /* istanbul ignore next */
  cov_2osygnd09n().s[203]++;
  if (bytes === 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[115][0]++;
    cov_2osygnd09n().s[204]++;
    return '0 B';
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[115][1]++;
  }
  const i =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[205]++, Math.floor(Math.log(bytes) / Math.log(1024)));
  const size =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[206]++, bytes / Math.pow(1024, i));
  /* istanbul ignore next */
  cov_2osygnd09n().s[207]++;
  return `${size.toFixed(i === 0 ?
  /* istanbul ignore next */
  (cov_2osygnd09n().b[116][0]++, 0) :
  /* istanbul ignore next */
  (cov_2osygnd09n().b[116][1]++, 1))} ${sizes[i]}`;
}
/**
 * Format date in human-readable format
 */
export function formatDate(date, options =
/* istanbul ignore next */
(cov_2osygnd09n().b[117][0]++, {})) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[33]++;
  const {
    format =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[118][0]++, 'short'),
    includeTime =
    /* istanbul ignore next */
    (cov_2osygnd09n().b[119][0]++, false)
  } =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[208]++, options);
  const dateObj =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[209]++, new Date(date));
  /* istanbul ignore next */
  cov_2osygnd09n().s[210]++;
  if (isNaN(dateObj.getTime())) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[120][0]++;
    cov_2osygnd09n().s[211]++;
    return 'Invalid Date';
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[120][1]++;
  }
  cov_2osygnd09n().s[212]++;
  switch (format) {
    case 'iso':
      /* istanbul ignore next */
      cov_2osygnd09n().b[121][0]++;
      cov_2osygnd09n().s[213]++;
      return dateObj.toISOString();
    case 'long':
      /* istanbul ignore next */
      cov_2osygnd09n().b[121][1]++;
      cov_2osygnd09n().s[214]++;
      return includeTime ?
      /* istanbul ignore next */
      (cov_2osygnd09n().b[122][0]++, dateObj.toLocaleString()) :
      /* istanbul ignore next */
      (cov_2osygnd09n().b[122][1]++, dateObj.toLocaleDateString());
    case 'relative':
      /* istanbul ignore next */
      cov_2osygnd09n().b[121][2]++;
      cov_2osygnd09n().s[215]++;
      return formatRelativeTime(dateObj);
    case 'short':
      /* istanbul ignore next */
      cov_2osygnd09n().b[121][3]++;
    default:
      /* istanbul ignore next */
      cov_2osygnd09n().b[121][4]++;
      const year =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[216]++, dateObj.getFullYear());
      const month =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[217]++, (dateObj.getMonth() + 1).toString().padStart(2, '0'));
      const day =
      /* istanbul ignore next */
      (cov_2osygnd09n().s[218]++, dateObj.getDate().toString().padStart(2, '0'));
      /* istanbul ignore next */
      cov_2osygnd09n().s[219]++;
      if (includeTime) {
        /* istanbul ignore next */
        cov_2osygnd09n().b[123][0]++;
        const hours =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[220]++, dateObj.getHours().toString().padStart(2, '0'));
        const minutes =
        /* istanbul ignore next */
        (cov_2osygnd09n().s[221]++, dateObj.getMinutes().toString().padStart(2, '0'));
        /* istanbul ignore next */
        cov_2osygnd09n().s[222]++;
        return `${year}-${month}-${day} ${hours}:${minutes}`;
      } else
      /* istanbul ignore next */
      {
        cov_2osygnd09n().b[123][1]++;
      }
      cov_2osygnd09n().s[223]++;
      return `${year}-${month}-${day}`;
  }
}
/**
 * Format relative time (e.g., "2 hours ago")
 */
export function formatRelativeTime(date) {
  /* istanbul ignore next */
  cov_2osygnd09n().f[34]++;
  const dateObj =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[224]++, new Date(date));
  const now =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[225]++, new Date());
  const diffMs =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[226]++, now.getTime() - dateObj.getTime());
  /* istanbul ignore next */
  cov_2osygnd09n().s[227]++;
  if (diffMs < 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[124][0]++;
    cov_2osygnd09n().s[228]++;
    return 'in the future';
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[124][1]++;
  }
  const seconds =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[229]++, Math.floor(diffMs / 1000));
  const minutes =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[230]++, Math.floor(seconds / 60));
  const hours =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[231]++, Math.floor(minutes / 60));
  const days =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[232]++, Math.floor(hours / 24));
  const weeks =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[233]++, Math.floor(days / 7));
  const months =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[234]++, Math.floor(days / 30));
  const years =
  /* istanbul ignore next */
  (cov_2osygnd09n().s[235]++, Math.floor(days / 365));
  /* istanbul ignore next */
  cov_2osygnd09n().s[236]++;
  if (years > 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[125][0]++;
    cov_2osygnd09n().s[237]++;
    return `${years} year${years > 1 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[126][0]++, 's') :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[126][1]++, '')} ago`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[125][1]++;
  }
  cov_2osygnd09n().s[238]++;
  if (months > 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[127][0]++;
    cov_2osygnd09n().s[239]++;
    return `${months} month${months > 1 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[128][0]++, 's') :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[128][1]++, '')} ago`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[127][1]++;
  }
  cov_2osygnd09n().s[240]++;
  if (weeks > 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[129][0]++;
    cov_2osygnd09n().s[241]++;
    return `${weeks} week${weeks > 1 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[130][0]++, 's') :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[130][1]++, '')} ago`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[129][1]++;
  }
  cov_2osygnd09n().s[242]++;
  if (days > 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[131][0]++;
    cov_2osygnd09n().s[243]++;
    return `${days} day${days > 1 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[132][0]++, 's') :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[132][1]++, '')} ago`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[131][1]++;
  }
  cov_2osygnd09n().s[244]++;
  if (hours > 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[133][0]++;
    cov_2osygnd09n().s[245]++;
    return `${hours} hour${hours > 1 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[134][0]++, 's') :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[134][1]++, '')} ago`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[133][1]++;
  }
  cov_2osygnd09n().s[246]++;
  if (minutes > 0) {
    /* istanbul ignore next */
    cov_2osygnd09n().b[135][0]++;
    cov_2osygnd09n().s[247]++;
    return `${minutes} minute${minutes > 1 ?
    /* istanbul ignore next */
    (cov_2osygnd09n().b[136][0]++, 's') :
    /* istanbul ignore next */
    (cov_2osygnd09n().b[136][1]++, '')} ago`;
  } else
  /* istanbul ignore next */
  {
    cov_2osygnd09n().b[135][1]++;
  }
  cov_2osygnd09n().s[248]++;
  return seconds > 5 ?
  /* istanbul ignore next */
  (cov_2osygnd09n().b[137][0]++, `${seconds} seconds ago`) :
  /* istanbul ignore next */
  (cov_2osygnd09n().b[137][1]++, 'just now');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,