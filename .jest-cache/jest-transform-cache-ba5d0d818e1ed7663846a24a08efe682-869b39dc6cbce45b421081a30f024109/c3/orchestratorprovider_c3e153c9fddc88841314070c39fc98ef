f517971acd2a32ecc3c9d41353d0ad70
/* istanbul ignore next */
function cov_1ay22lrg0g() {
  var path = "/home/mhugo/code/claude-code-flow/src/utils/orchestrator-provider.ts";
  var hash = "a70de79cfd72910e0b99ce302a6174ab6acf9ed0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/utils/orchestrator-provider.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "2": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "3": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "4": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "5": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "6": {
        start: {
          line: 16,
          column: 32
        },
        end: {
          line: 16,
          column: 86
        }
      },
      "7": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 80
        }
      },
      "8": {
        start: {
          line: 18,
          column: 36
        },
        end: {
          line: 18,
          column: 98
        }
      },
      "9": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 69
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 138
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "12": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "getOrchestratorInstance",
        decl: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 39
          }
        },
        loc: {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "setOrchestratorInstance",
        decl: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 39
          }
        },
        loc: {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/utils/orchestrator-provider.ts",
      mappings: "AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACvD,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAE5D,IAAI,oBAAoB,GAAwB,IAAI,CAAC;AAErD,MAAM,UAAU,uBAAuB;IACrC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC1B,MAAM,aAAa,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;QAClD,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;QACpC,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,MAAM,eAAe,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC/E,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QACzE,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC3F,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAE9D,oBAAoB,GAAG,IAAI,YAAY,CACrC,MAAM,EACN,eAAe,EACf,aAAa,EACb,mBAAmB,EACnB,SAAS,EACT,QAAQ,EACR,MAAM,CACP,CAAC;IACJ,CAAC;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAsB;IAC5D,oBAAoB,GAAG,QAAQ,CAAC;AAClC,CAAC",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/utils/orchestrator-provider.ts"],
      sourcesContent: ["import { Orchestrator } from '../core/orchestrator.js';\nimport { TerminalManager } from '../terminal/manager.js';\nimport { MemoryManager } from '../memory/manager.js';\nimport { CoordinationManager } from '../coordination/manager.js';\nimport { MCPServer } from '../mcp/server.js';\nimport { EventBus } from '../core/event-bus.js';\nimport { Logger } from '../core/logger.js';\nimport { ConfigManager } from '../config/config-manager.js';\n\nlet orchestratorInstance: Orchestrator | null = null;\n\nexport function getOrchestratorInstance(): Orchestrator {\n  if (!orchestratorInstance) {\n    const configManager = ConfigManager.getInstance();\n    const config = configManager.config;\n    const logger = new Logger(config.logger);\n    const eventBus = new EventBus();\n    const terminalManager = new TerminalManager(config.terminal, logger, eventBus);\n    const memoryManager = new MemoryManager(config.memory, logger, eventBus);\n    const coordinationManager = new CoordinationManager(config.coordination, logger, eventBus);\n    const mcpServer = new MCPServer(config.mcp, logger, eventBus);\n\n    orchestratorInstance = new Orchestrator(\n      config,\n      terminalManager,\n      memoryManager,\n      coordinationManager,\n      mcpServer,\n      eventBus,\n      logger,\n    );\n  }\n  return orchestratorInstance;\n}\n\nexport function setOrchestratorInstance(instance: Orchestrator): void {\n  orchestratorInstance = instance;\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a70de79cfd72910e0b99ce302a6174ab6acf9ed0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ay22lrg0g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ay22lrg0g();
import { Orchestrator } from '../core/orchestrator.js';
import { TerminalManager } from '../terminal/manager.js';
import { MemoryManager } from '../memory/manager.js';
import { CoordinationManager } from '../coordination/manager.js';
import { MCPServer } from '../mcp/server.js';
import { EventBus } from '../core/event-bus.js';
import { Logger } from '../core/logger.js';
import { ConfigManager } from '../config/config-manager.js';
let orchestratorInstance =
/* istanbul ignore next */
(cov_1ay22lrg0g().s[0]++, null);
export function getOrchestratorInstance() {
  /* istanbul ignore next */
  cov_1ay22lrg0g().f[0]++;
  cov_1ay22lrg0g().s[1]++;
  if (!orchestratorInstance) {
    /* istanbul ignore next */
    cov_1ay22lrg0g().b[0][0]++;
    const configManager =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[2]++, ConfigManager.getInstance());
    const config =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[3]++, configManager.config);
    const logger =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[4]++, new Logger(config.logger));
    const eventBus =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[5]++, new EventBus());
    const terminalManager =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[6]++, new TerminalManager(config.terminal, logger, eventBus));
    const memoryManager =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[7]++, new MemoryManager(config.memory, logger, eventBus));
    const coordinationManager =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[8]++, new CoordinationManager(config.coordination, logger, eventBus));
    const mcpServer =
    /* istanbul ignore next */
    (cov_1ay22lrg0g().s[9]++, new MCPServer(config.mcp, logger, eventBus));
    /* istanbul ignore next */
    cov_1ay22lrg0g().s[10]++;
    orchestratorInstance = new Orchestrator(config, terminalManager, memoryManager, coordinationManager, mcpServer, eventBus, logger);
  } else
  /* istanbul ignore next */
  {
    cov_1ay22lrg0g().b[0][1]++;
  }
  cov_1ay22lrg0g().s[11]++;
  return orchestratorInstance;
}
export function setOrchestratorInstance(instance) {
  /* istanbul ignore next */
  cov_1ay22lrg0g().f[1]++;
  cov_1ay22lrg0g().s[12]++;
  orchestratorInstance = instance;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWF5MjJscmcwZyIsImFjdHVhbENvdmVyYWdlIiwiT3JjaGVzdHJhdG9yIiwiVGVybWluYWxNYW5hZ2VyIiwiTWVtb3J5TWFuYWdlciIsIkNvb3JkaW5hdGlvbk1hbmFnZXIiLCJNQ1BTZXJ2ZXIiLCJFdmVudEJ1cyIsIkxvZ2dlciIsIkNvbmZpZ01hbmFnZXIiLCJvcmNoZXN0cmF0b3JJbnN0YW5jZSIsInMiLCJnZXRPcmNoZXN0cmF0b3JJbnN0YW5jZSIsImYiLCJiIiwiY29uZmlnTWFuYWdlciIsImdldEluc3RhbmNlIiwiY29uZmlnIiwibG9nZ2VyIiwiZXZlbnRCdXMiLCJ0ZXJtaW5hbE1hbmFnZXIiLCJ0ZXJtaW5hbCIsIm1lbW9yeU1hbmFnZXIiLCJtZW1vcnkiLCJjb29yZGluYXRpb25NYW5hZ2VyIiwiY29vcmRpbmF0aW9uIiwibWNwU2VydmVyIiwibWNwIiwic2V0T3JjaGVzdHJhdG9ySW5zdGFuY2UiLCJpbnN0YW5jZSJdLCJzb3VyY2VzIjpbIi9ob21lL21odWdvL2NvZGUvY2xhdWRlLWNvZGUtZmxvdy9zcmMvdXRpbHMvb3JjaGVzdHJhdG9yLXByb3ZpZGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9yY2hlc3RyYXRvciB9IGZyb20gJy4uL2NvcmUvb3JjaGVzdHJhdG9yLmpzJztcbmltcG9ydCB7IFRlcm1pbmFsTWFuYWdlciB9IGZyb20gJy4uL3Rlcm1pbmFsL21hbmFnZXIuanMnO1xuaW1wb3J0IHsgTWVtb3J5TWFuYWdlciB9IGZyb20gJy4uL21lbW9yeS9tYW5hZ2VyLmpzJztcbmltcG9ydCB7IENvb3JkaW5hdGlvbk1hbmFnZXIgfSBmcm9tICcuLi9jb29yZGluYXRpb24vbWFuYWdlci5qcyc7XG5pbXBvcnQgeyBNQ1BTZXJ2ZXIgfSBmcm9tICcuLi9tY3Avc2VydmVyLmpzJztcbmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAnLi4vY29yZS9ldmVudC1idXMuanMnO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi4vY29yZS9sb2dnZXIuanMnO1xuaW1wb3J0IHsgQ29uZmlnTWFuYWdlciB9IGZyb20gJy4uL2NvbmZpZy9jb25maWctbWFuYWdlci5qcyc7XG5cbmxldCBvcmNoZXN0cmF0b3JJbnN0YW5jZTogT3JjaGVzdHJhdG9yIHwgbnVsbCA9IG51bGw7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcmNoZXN0cmF0b3JJbnN0YW5jZSgpOiBPcmNoZXN0cmF0b3Ige1xuICBpZiAoIW9yY2hlc3RyYXRvckluc3RhbmNlKSB7XG4gICAgY29uc3QgY29uZmlnTWFuYWdlciA9IENvbmZpZ01hbmFnZXIuZ2V0SW5zdGFuY2UoKTtcbiAgICBjb25zdCBjb25maWcgPSBjb25maWdNYW5hZ2VyLmNvbmZpZztcbiAgICBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKGNvbmZpZy5sb2dnZXIpO1xuICAgIGNvbnN0IGV2ZW50QnVzID0gbmV3IEV2ZW50QnVzKCk7XG4gICAgY29uc3QgdGVybWluYWxNYW5hZ2VyID0gbmV3IFRlcm1pbmFsTWFuYWdlcihjb25maWcudGVybWluYWwsIGxvZ2dlciwgZXZlbnRCdXMpO1xuICAgIGNvbnN0IG1lbW9yeU1hbmFnZXIgPSBuZXcgTWVtb3J5TWFuYWdlcihjb25maWcubWVtb3J5LCBsb2dnZXIsIGV2ZW50QnVzKTtcbiAgICBjb25zdCBjb29yZGluYXRpb25NYW5hZ2VyID0gbmV3IENvb3JkaW5hdGlvbk1hbmFnZXIoY29uZmlnLmNvb3JkaW5hdGlvbiwgbG9nZ2VyLCBldmVudEJ1cyk7XG4gICAgY29uc3QgbWNwU2VydmVyID0gbmV3IE1DUFNlcnZlcihjb25maWcubWNwLCBsb2dnZXIsIGV2ZW50QnVzKTtcblxuICAgIG9yY2hlc3RyYXRvckluc3RhbmNlID0gbmV3IE9yY2hlc3RyYXRvcihcbiAgICAgIGNvbmZpZyxcbiAgICAgIHRlcm1pbmFsTWFuYWdlcixcbiAgICAgIG1lbW9yeU1hbmFnZXIsXG4gICAgICBjb29yZGluYXRpb25NYW5hZ2VyLFxuICAgICAgbWNwU2VydmVyLFxuICAgICAgZXZlbnRCdXMsXG4gICAgICBsb2dnZXIsXG4gICAgKTtcbiAgfVxuICByZXR1cm4gb3JjaGVzdHJhdG9ySW5zdGFuY2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRPcmNoZXN0cmF0b3JJbnN0YW5jZShpbnN0YW5jZTogT3JjaGVzdHJhdG9yKTogdm9pZCB7XG4gIG9yY2hlc3RyYXRvckluc3RhbmNlID0gaW5zdGFuY2U7XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQkk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQWpCSixTQUFTRSxZQUFZLFFBQVEseUJBQXlCO0FBQ3RELFNBQVNDLGVBQWUsUUFBUSx3QkFBd0I7QUFDeEQsU0FBU0MsYUFBYSxRQUFRLHNCQUFzQjtBQUNwRCxTQUFTQyxtQkFBbUIsUUFBUSw0QkFBNEI7QUFDaEUsU0FBU0MsU0FBUyxRQUFRLGtCQUFrQjtBQUM1QyxTQUFTQyxRQUFRLFFBQVEsc0JBQXNCO0FBQy9DLFNBQVNDLE1BQU0sUUFBUSxtQkFBbUI7QUFDMUMsU0FBU0MsYUFBYSxRQUFRLDZCQUE2QjtBQUUzRCxJQUFJQyxvQkFBb0I7QUFBQTtBQUFBLENBQUFWLGNBQUEsR0FBQVcsQ0FBQSxPQUF3QixJQUFJO0FBRXBELE9BQU0sU0FBVUMsdUJBQXVCQSxDQUFBO0VBQUE7RUFBQVosY0FBQSxHQUFBYSxDQUFBO0VBQUFiLGNBQUEsR0FBQVcsQ0FBQTtFQUNyQyxJQUFJLENBQUNELG9CQUFvQixFQUFFO0lBQUE7SUFBQVYsY0FBQSxHQUFBYyxDQUFBO0lBQ3pCLE1BQU1DLGFBQWE7SUFBQTtJQUFBLENBQUFmLGNBQUEsR0FBQVcsQ0FBQSxPQUFHRixhQUFhLENBQUNPLFdBQVcsRUFBRTtJQUNqRCxNQUFNQyxNQUFNO0lBQUE7SUFBQSxDQUFBakIsY0FBQSxHQUFBVyxDQUFBLE9BQUdJLGFBQWEsQ0FBQ0UsTUFBTTtJQUNuQyxNQUFNQyxNQUFNO0lBQUE7SUFBQSxDQUFBbEIsY0FBQSxHQUFBVyxDQUFBLE9BQUcsSUFBSUgsTUFBTSxDQUFDUyxNQUFNLENBQUNDLE1BQU0sQ0FBQztJQUN4QyxNQUFNQyxRQUFRO0lBQUE7SUFBQSxDQUFBbkIsY0FBQSxHQUFBVyxDQUFBLE9BQUcsSUFBSUosUUFBUSxFQUFFO0lBQy9CLE1BQU1hLGVBQWU7SUFBQTtJQUFBLENBQUFwQixjQUFBLEdBQUFXLENBQUEsT0FBRyxJQUFJUixlQUFlLENBQUNjLE1BQU0sQ0FBQ0ksUUFBUSxFQUFFSCxNQUFNLEVBQUVDLFFBQVEsQ0FBQztJQUM5RSxNQUFNRyxhQUFhO0lBQUE7SUFBQSxDQUFBdEIsY0FBQSxHQUFBVyxDQUFBLE9BQUcsSUFBSVAsYUFBYSxDQUFDYSxNQUFNLENBQUNNLE1BQU0sRUFBRUwsTUFBTSxFQUFFQyxRQUFRLENBQUM7SUFDeEUsTUFBTUssbUJBQW1CO0lBQUE7SUFBQSxDQUFBeEIsY0FBQSxHQUFBVyxDQUFBLE9BQUcsSUFBSU4sbUJBQW1CLENBQUNZLE1BQU0sQ0FBQ1EsWUFBWSxFQUFFUCxNQUFNLEVBQUVDLFFBQVEsQ0FBQztJQUMxRixNQUFNTyxTQUFTO0lBQUE7SUFBQSxDQUFBMUIsY0FBQSxHQUFBVyxDQUFBLE9BQUcsSUFBSUwsU0FBUyxDQUFDVyxNQUFNLENBQUNVLEdBQUcsRUFBRVQsTUFBTSxFQUFFQyxRQUFRLENBQUM7SUFBQztJQUFBbkIsY0FBQSxHQUFBVyxDQUFBO0lBRTlERCxvQkFBb0IsR0FBRyxJQUFJUixZQUFZLENBQ3JDZSxNQUFNLEVBQ05HLGVBQWUsRUFDZkUsYUFBYSxFQUNiRSxtQkFBbUIsRUFDbkJFLFNBQVMsRUFDVFAsUUFBUSxFQUNSRCxNQUFNLENBQ1A7RUFDSCxDQUFDO0VBQUE7RUFBQTtJQUFBbEIsY0FBQSxHQUFBYyxDQUFBO0VBQUE7RUFBQWQsY0FBQSxHQUFBVyxDQUFBO0VBQ0QsT0FBT0Qsb0JBQW9CO0FBQzdCO0FBRUEsT0FBTSxTQUFVa0IsdUJBQXVCQSxDQUFDQyxRQUFzQjtFQUFBO0VBQUE3QixjQUFBLEdBQUFhLENBQUE7RUFBQWIsY0FBQSxHQUFBVyxDQUFBO0VBQzVERCxvQkFBb0IsR0FBR21CLFFBQVE7QUFDakMiLCJpZ25vcmVMaXN0IjpbXX0=