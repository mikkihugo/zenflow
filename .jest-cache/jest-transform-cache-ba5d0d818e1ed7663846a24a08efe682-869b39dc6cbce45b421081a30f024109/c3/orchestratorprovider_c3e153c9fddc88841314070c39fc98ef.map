{"version":3,"names":["cov_1ay22lrg0g","actualCoverage","Orchestrator","TerminalManager","MemoryManager","CoordinationManager","MCPServer","EventBus","Logger","ConfigManager","orchestratorInstance","s","getOrchestratorInstance","f","b","configManager","getInstance","config","logger","eventBus","terminalManager","terminal","memoryManager","memory","coordinationManager","coordination","mcpServer","mcp","setOrchestratorInstance","instance"],"sources":["/home/mhugo/code/claude-code-flow/src/utils/orchestrator-provider.ts"],"sourcesContent":["import { Orchestrator } from '../core/orchestrator.js';\nimport { TerminalManager } from '../terminal/manager.js';\nimport { MemoryManager } from '../memory/manager.js';\nimport { CoordinationManager } from '../coordination/manager.js';\nimport { MCPServer } from '../mcp/server.js';\nimport { EventBus } from '../core/event-bus.js';\nimport { Logger } from '../core/logger.js';\nimport { ConfigManager } from '../config/config-manager.js';\n\nlet orchestratorInstance: Orchestrator | null = null;\n\nexport function getOrchestratorInstance(): Orchestrator {\n  if (!orchestratorInstance) {\n    const configManager = ConfigManager.getInstance();\n    const config = configManager.config;\n    const logger = new Logger(config.logger);\n    const eventBus = new EventBus();\n    const terminalManager = new TerminalManager(config.terminal, logger, eventBus);\n    const memoryManager = new MemoryManager(config.memory, logger, eventBus);\n    const coordinationManager = new CoordinationManager(config.coordination, logger, eventBus);\n    const mcpServer = new MCPServer(config.mcp, logger, eventBus);\n\n    orchestratorInstance = new Orchestrator(\n      config,\n      terminalManager,\n      memoryManager,\n      coordinationManager,\n      mcpServer,\n      eventBus,\n      logger,\n    );\n  }\n  return orchestratorInstance;\n}\n\nexport function setOrchestratorInstance(instance: Orchestrator): void {\n  orchestratorInstance = instance;\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBI;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAjBJ,SAASE,YAAY,QAAQ,yBAAyB;AACtD,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,aAAa,QAAQ,6BAA6B;AAE3D,IAAIC,oBAAoB;AAAA;AAAA,CAAAV,cAAA,GAAAW,CAAA,OAAwB,IAAI;AAEpD,OAAM,SAAUC,uBAAuBA,CAAA;EAAA;EAAAZ,cAAA,GAAAa,CAAA;EAAAb,cAAA,GAAAW,CAAA;EACrC,IAAI,CAACD,oBAAoB,EAAE;IAAA;IAAAV,cAAA,GAAAc,CAAA;IACzB,MAAMC,aAAa;IAAA;IAAA,CAAAf,cAAA,GAAAW,CAAA,OAAGF,aAAa,CAACO,WAAW,EAAE;IACjD,MAAMC,MAAM;IAAA;IAAA,CAAAjB,cAAA,GAAAW,CAAA,OAAGI,aAAa,CAACE,MAAM;IACnC,MAAMC,MAAM;IAAA;IAAA,CAAAlB,cAAA,GAAAW,CAAA,OAAG,IAAIH,MAAM,CAACS,MAAM,CAACC,MAAM,CAAC;IACxC,MAAMC,QAAQ;IAAA;IAAA,CAAAnB,cAAA,GAAAW,CAAA,OAAG,IAAIJ,QAAQ,EAAE;IAC/B,MAAMa,eAAe;IAAA;IAAA,CAAApB,cAAA,GAAAW,CAAA,OAAG,IAAIR,eAAe,CAACc,MAAM,CAACI,QAAQ,EAAEH,MAAM,EAAEC,QAAQ,CAAC;IAC9E,MAAMG,aAAa;IAAA;IAAA,CAAAtB,cAAA,GAAAW,CAAA,OAAG,IAAIP,aAAa,CAACa,MAAM,CAACM,MAAM,EAAEL,MAAM,EAAEC,QAAQ,CAAC;IACxE,MAAMK,mBAAmB;IAAA;IAAA,CAAAxB,cAAA,GAAAW,CAAA,OAAG,IAAIN,mBAAmB,CAACY,MAAM,CAACQ,YAAY,EAAEP,MAAM,EAAEC,QAAQ,CAAC;IAC1F,MAAMO,SAAS;IAAA;IAAA,CAAA1B,cAAA,GAAAW,CAAA,OAAG,IAAIL,SAAS,CAACW,MAAM,CAACU,GAAG,EAAET,MAAM,EAAEC,QAAQ,CAAC;IAAC;IAAAnB,cAAA,GAAAW,CAAA;IAE9DD,oBAAoB,GAAG,IAAIR,YAAY,CACrCe,MAAM,EACNG,eAAe,EACfE,aAAa,EACbE,mBAAmB,EACnBE,SAAS,EACTP,QAAQ,EACRD,MAAM,CACP;EACH,CAAC;EAAA;EAAA;IAAAlB,cAAA,GAAAc,CAAA;EAAA;EAAAd,cAAA,GAAAW,CAAA;EACD,OAAOD,oBAAoB;AAC7B;AAEA,OAAM,SAAUkB,uBAAuBA,CAACC,QAAsB;EAAA;EAAA7B,cAAA,GAAAa,CAAA;EAAAb,cAAA,GAAAW,CAAA;EAC5DD,oBAAoB,GAAGmB,QAAQ;AACjC","ignoreList":[]}