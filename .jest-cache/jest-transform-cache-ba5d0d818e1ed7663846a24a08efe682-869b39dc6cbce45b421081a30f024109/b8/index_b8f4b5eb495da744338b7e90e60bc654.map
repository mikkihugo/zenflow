{"version":3,"names":["cov_s9wawre05","actualCoverage","useSwarmStatus","useConfig","HookUtils","s","createAsyncState","initialData","b","f","data","loading","error","refetch","debounce","func","wait","timeout","args","clearTimeout","setTimeout","throttle","limit","inThrottle"],"sources":["/home/mhugo/code/claude-code-flow/src/cli/ui/hooks/index.ts"],"sourcesContent":["/**\n * UI Hooks - Hook Exports\n * \n * This module exports custom React hooks for the Claude Flow CLI.\n * Hooks provide reusable state management and side effects.\n */\n\n// Custom hooks\nexport { useSwarmStatus } from './use-swarm-status';\nexport { useConfig } from './use-config';\n\n// Hook types\nexport type { SwarmStatusHook, SwarmStatusData } from './use-swarm-status';\nexport type { ConfigHook, ConfigData } from './use-config';\n\n// Common hook utilities\nexport interface UseAsyncState<T> {\n  data: T | null;\n  loading: boolean;\n  error: Error | null;\n  refetch: () => Promise<void>;\n}\n\nexport interface UsePeriodicRefresh {\n  isActive: boolean;\n  interval: number;\n  start: () => void;\n  stop: () => void;\n  setInterval: (ms: number) => void;\n}\n\n// Hook utility functions\nexport const HookUtils = {\n  createAsyncState: <T>(initialData: T | null = null): UseAsyncState<T> => ({\n    data: initialData,\n    loading: false,\n    error: null,\n    refetch: async () => {},\n  }),\n  \n  debounce: <T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): ((...args: Parameters<T>) => void) => {\n    let timeout: NodeJS.Timeout;\n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), wait);\n    };\n  },\n  \n  throttle: <T extends (...args: any[]) => any>(\n    func: T,\n    limit: number\n  ): ((...args: Parameters<T>) => void) => {\n    let inThrottle: boolean;\n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  },\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqCI;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AArCJ;;;;;;AAOA;AACA,SAASE,cAAc,QAAQ,oBAAoB;AACnD,SAASC,SAAS,QAAQ,cAAc;AAsBxC;AACA,OAAO,MAAMC,SAAS;AAAA;AAAA,CAAAJ,aAAA,GAAAK,CAAA,OAAG;EACvBC,gBAAgB,EAAEA,CAAIC,WAAA;EAAA;EAAA,CAAAP,aAAA,GAAAQ,CAAA,UAAwB,IAAI,MAAwB;IAAA;IAAAR,aAAA,GAAAS,CAAA;IAAAT,aAAA,GAAAK,CAAA;IAAA;MACxEK,IAAI,EAAEH,WAAW;MACjBI,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAb,aAAA,GAAAS,CAAA;MAAE;KACvB;GAAC;EAEFK,QAAQ,EAAEA,CACRC,IAAO,EACPC,IAAY,KAC0B;IAAA;IAAAhB,aAAA,GAAAS,CAAA;IACtC,IAAIQ,OAAuB;IAAC;IAAAjB,aAAA,GAAAK,CAAA;IAC5B,OAAO,CAAC,GAAGa,IAAmB,KAAI;MAAA;MAAAlB,aAAA,GAAAS,CAAA;MAAAT,aAAA,GAAAK,CAAA;MAChCc,YAAY,CAACF,OAAO,CAAC;MAAC;MAAAjB,aAAA,GAAAK,CAAA;MACtBY,OAAO,GAAGG,UAAU,CAAC,MAAM;QAAA;QAAApB,aAAA,GAAAS,CAAA;QAAAT,aAAA,GAAAK,CAAA;QAAA,OAAAU,IAAI,CAAC,GAAGG,IAAI,CAAC;MAAD,CAAC,EAAEF,IAAI,CAAC;IACjD,CAAC;EACH,CAAC;EAEDK,QAAQ,EAAEA,CACRN,IAAO,EACPO,KAAa,KACyB;IAAA;IAAAtB,aAAA,GAAAS,CAAA;IACtC,IAAIc,UAAmB;IAAC;IAAAvB,aAAA,GAAAK,CAAA;IACxB,OAAO,CAAC,GAAGa,IAAmB,KAAI;MAAA;MAAAlB,aAAA,GAAAS,CAAA;MAAAT,aAAA,GAAAK,CAAA;MAChC,IAAI,CAACkB,UAAU,EAAE;QAAA;QAAAvB,aAAA,GAAAQ,CAAA;QAAAR,aAAA,GAAAK,CAAA;QACfU,IAAI,CAAC,GAAGG,IAAI,CAAC;QAAC;QAAAlB,aAAA,GAAAK,CAAA;QACdkB,UAAU,GAAG,IAAI;QAAC;QAAAvB,aAAA,GAAAK,CAAA;QAClBe,UAAU,CAAC,MAAM;UAAA;UAAApB,aAAA,GAAAS,CAAA;UAAAT,aAAA,GAAAK,CAAA;UAAA,OAAAkB,UAAU,GAAG,KAAK;QAAL,CAAK,EAAED,KAAK,CAAC;MAC7C,CAAC;MAAA;MAAA;QAAAtB,aAAA,GAAAQ,CAAA;MAAA;IACH,CAAC;EACH;CACD","ignoreList":[]}