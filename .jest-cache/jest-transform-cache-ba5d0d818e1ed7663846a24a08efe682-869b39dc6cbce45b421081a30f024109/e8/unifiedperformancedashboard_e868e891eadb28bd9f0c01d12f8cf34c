51238dbfc9b1b8c4f0171a1a73b47d09
/* istanbul ignore next */
function cov_174p0x1fhv() {
  var path = "/home/mhugo/code/claude-code-flow/src/dashboard/unified-performance-dashboard.ts";
  var hash = "a3cb58c700e88abc5ad90884af55bf6a076f55a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/dashboard/unified-performance-dashboard.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 21
        }
      },
      "1": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 16
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 26,
          column: 10
        }
      },
      "6": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "7": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "8": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "10": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 36,
          column: 44
        }
      },
      "11": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 39
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "17": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "19": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 45
        }
      },
      "20": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "24": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "25": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "26": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "27": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "28": {
        start: {
          line: 60,
          column: 67
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "29": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 80
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "31": {
        start: {
          line: 86,
          column: 23
        },
        end: {
          line: 86,
          column: 25
        }
      },
      "32": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 88,
          column: 96
        }
      },
      "33": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 109
        }
      },
      "34": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "35": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "36": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 101,
          column: 40
        }
      },
      "37": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "38": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "39": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 112,
          column: 19
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "41": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "42": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 122,
          column: 85
        }
      },
      "43": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "44": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "45": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 132,
          column: 82
        }
      },
      "46": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 134,
          column: 72
        }
      },
      "47": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "48": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "49": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "50": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 34
        }
      },
      "51": {
        start: {
          line: 152,
          column: 17
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "52": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 33
        }
      },
      "53": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "54": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 30
        }
      },
      "55": {
        start: {
          line: 160,
          column: 13
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "56": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 29
        }
      },
      "57": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 25
        }
      },
      "58": {
        start: {
          line: 168,
          column: 22
        },
        end: {
          line: 168,
          column: 40
        }
      },
      "59": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 53
        }
      },
      "60": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "61": {
        start: {
          line: 174,
          column: 27
        },
        end: {
          line: 174,
          column: 55
        }
      },
      "62": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 46
        }
      },
      "63": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "64": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 50
        }
      },
      "65": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 63
        }
      },
      "66": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 62
        }
      },
      "67": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 61
        }
      },
      "68": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 77
        }
      },
      "69": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 103
        }
      },
      "70": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 44
        }
      },
      "71": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 76
        }
      },
      "72": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 99
        }
      },
      "73": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 105
        }
      },
      "74": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 24
        }
      },
      "75": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 24
        }
      },
      "76": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 76
        }
      },
      "77": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 76
        }
      },
      "78": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 204,
          column: 60
        }
      },
      "79": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 93
        }
      },
      "80": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 46
        }
      },
      "81": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 116
        }
      },
      "82": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 125
        }
      },
      "83": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 131
        }
      },
      "84": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 125
        }
      },
      "85": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 41
        }
      },
      "86": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 128
        }
      },
      "87": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 98
        }
      },
      "88": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 82
        }
      },
      "89": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 82
        }
      },
      "90": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 78
        }
      },
      "91": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 97
        }
      },
      "92": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "93": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 47
        }
      },
      "94": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "95": {
        start: {
          line: 224,
          column: 35
        },
        end: {
          line: 225,
          column: 59
        }
      },
      "96": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 85
        }
      },
      "97": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 76
        }
      },
      "98": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 55
        }
      },
      "99": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "100": {
        start: {
          line: 235,
          column: 28
        },
        end: {
          line: 235,
          column: 39
        }
      },
      "101": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 40
        }
      },
      "102": {
        start: {
          line: 237,
          column: 29
        },
        end: {
          line: 237,
          column: 40
        }
      },
      "103": {
        start: {
          line: 238,
          column: 21
        },
        end: {
          line: 238,
          column: 32
        }
      },
      "104": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 243,
          column: 51
        }
      },
      "105": {
        start: {
          line: 244,
          column: 32
        },
        end: {
          line: 244,
          column: 80
        }
      },
      "106": {
        start: {
          line: 245,
          column: 23
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "107": {
        start: {
          line: 253,
          column: 87
        },
        end: {
          line: 253,
          column: 102
        }
      },
      "108": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 66
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 44
          },
          end: {
            line: 34,
            column: 45
          }
        },
        loc: {
          start: {
            line: 34,
            column: 50
          },
          end: {
            line: 36,
            column: 13
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 60
          },
          end: {
            line: 60,
            column: 61
          }
        },
        loc: {
          start: {
            line: 60,
            column: 67
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 57
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 85
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 70
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 147
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 20
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 167
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 172
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 186
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 33
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 198
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 223,
            column: 41
          },
          end: {
            line: 223,
            column: 42
          }
        },
        loc: {
          start: {
            line: 223,
            column: 52
          },
          end: {
            line: 227,
            column: 13
          }
        },
        line: 223
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 27
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 233
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 27
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 242
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 253,
            column: 82
          },
          end: {
            line: 253,
            column: 83
          }
        },
        loc: {
          start: {
            line: 253,
            column: 87
          },
          end: {
            line: 253,
            column: 102
          }
        },
        line: 253
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 53
          },
          end: {
            line: 11,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 62
          },
          end: {
            line: 11,
            column: 64
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: 17,
            column: 55
          },
          end: {
            line: 17,
            column: 59
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 49
          }
        }, {
          start: {
            line: 18,
            column: 53
          },
          end: {
            line: 18,
            column: 57
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 47
          }
        }, {
          start: {
            line: 19,
            column: 51
          },
          end: {
            line: 19,
            column: 55
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 56
          }
        }, {
          start: {
            line: 21,
            column: 60
          },
          end: {
            line: 21,
            column: 64
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 60
          }
        }, {
          start: {
            line: 22,
            column: 64
          },
          end: {
            line: 22,
            column: 68
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 64
          }
        }, {
          start: {
            line: 23,
            column: 68
          },
          end: {
            line: 23,
            column: 85
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 92,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 92,
            column: 58
          }
        }, {
          start: {
            line: 92,
            column: 61
          },
          end: {
            line: 92,
            column: 68
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "14": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "15": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 34
          }
        }, {
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 113,
            column: 62
          }
        }],
        line: 113
      },
      "16": {
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 64
          },
          end: {
            line: 122,
            column: 73
          }
        }, {
          start: {
            line: 122,
            column: 76
          },
          end: {
            line: 122,
            column: 85
          }
        }],
        line: 122
      },
      "17": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "18": {
        loc: {
          start: {
            line: 133,
            column: 24
          },
          end: {
            line: 134,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 64
          },
          end: {
            line: 133,
            column: 74
          }
        }, {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 72
          }
        }],
        line: 133
      },
      "19": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 134,
            column: 60
          }
        }, {
          start: {
            line: 134,
            column: 63
          },
          end: {
            line: 134,
            column: 72
          }
        }],
        line: 134
      },
      "20": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "21": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 34
          }
        }, {
          start: {
            line: 148,
            column: 38
          },
          end: {
            line: 148,
            column: 49
          }
        }],
        line: 148
      },
      "22": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: 152,
            column: 17
          },
          end: {
            line: 154,
            column: 13
          }
        }],
        line: 149
      },
      "23": {
        loc: {
          start: {
            line: 152,
            column: 17
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 17
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "24": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 163,
            column: 9
          }
        }],
        line: 156
      },
      "25": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 157,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 61
          }
        }, {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 157,
            column: 65
          }
        }],
        line: 156
      },
      "26": {
        loc: {
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "27": {
        loc: {
          start: {
            line: 160,
            column: 17
          },
          end: {
            line: 161,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 17
          },
          end: {
            line: 160,
            column: 62
          }
        }, {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 161,
            column: 61
          }
        }],
        line: 160
      },
      "28": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "29": {
        loc: {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 190,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 77
          },
          end: {
            line: 190,
            column: 86
          }
        }, {
          start: {
            line: 190,
            column: 89
          },
          end: {
            line: 190,
            column: 99
          }
        }],
        line: 190
      },
      "30": {
        loc: {
          start: {
            line: 203,
            column: 28
          },
          end: {
            line: 204,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 66
          },
          end: {
            line: 203,
            column: 69
          }
        }, {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 60
          }
        }],
        line: 203
      },
      "31": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 50
          },
          end: {
            line: 204,
            column: 54
          }
        }, {
          start: {
            line: 204,
            column: 57
          },
          end: {
            line: 204,
            column: 60
          }
        }],
        line: 204
      },
      "32": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "33": {
        loc: {
          start: {
            line: 224,
            column: 35
          },
          end: {
            line: 225,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 61
          },
          end: {
            line: 224,
            column: 64
          }
        }, {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 225,
            column: 59
          }
        }],
        line: 224
      },
      "34": {
        loc: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 225,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 48
          },
          end: {
            line: 225,
            column: 52
          }
        }, {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 225,
            column: 59
          }
        }],
        line: 225
      },
      "35": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 235,
            column: 39
          }
        }, {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 40
          }
        }, {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 40
          }
        }, {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 32
          }
        }],
        line: 234
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/dashboard/unified-performance-dashboard.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/dashboard/unified-performance-dashboard.ts"],
      sourcesContent: ["/** Unified Performance Dashboard */\n/** Real-time monitoring and analytics for Claude Flow systems */\n\nimport { EventEmitter } from 'node:events';\nimport MCPPerformanceMetrics from '../mcp/performance-metrics.js';\nimport EnhancedMemory from '../memory/enhanced-memory.js';\nimport LanceDBInterface from '../database/lancedb-interface.js';\n\ninterface DashboardConfig {\n  refreshInterval?: number;\n  enableRealtime?: boolean;\n  maxDataPoints?: number;\n  alertThresholds?: {\n    latency?: number;\n    errorRate?: number;\n    memoryUsage?: number;\n  };\n}\n\ninterface SystemHealth {\n  overall: 'healthy' | 'warning' | 'critical';\n  components: {\n    mcp: 'healthy' | 'warning' | 'critical';\n    memory: 'healthy' | 'warning' | 'critical';\n    database: 'healthy' | 'warning' | 'critical';\n    neural: 'healthy' | 'warning' | 'critical';\n  };\n  alerts: Array<{\n    level: 'info' | 'warning' | 'error';\n    component: string;\n    message: string;\n    timestamp: number;\n  }>;\n}\n\nexport class UnifiedPerformanceDashboard extends EventEmitter {\n  private mcpMetrics: MCPPerformanceMetrics;\n  private enhancedMemory: EnhancedMemory;\n  private lanceDB: LanceDBInterface;\n  private config: Required<DashboardConfig>;\n  private refreshTimer?: NodeJS.Timeout;\n  private isRunning = false;\n\n  constructor(\n    mcpMetrics: MCPPerformanceMetrics,\n    enhancedMemory: EnhancedMemory,\n    lanceDB: LanceDBInterface,\n    config: DashboardConfig = {}\n  ) {\n    super();\n    \n    this.mcpMetrics = mcpMetrics;\n    this.enhancedMemory = enhancedMemory;\n    this.lanceDB = lanceDB;\n    \n    this.config = {\n      refreshInterval: config.refreshInterval ?? 1000,\n      enableRealtime: config.enableRealtime ?? true,\n      maxDataPoints: config.maxDataPoints ?? 1000,\n      alertThresholds: {\n        latency: config.alertThresholds?.latency ?? 1000,\n        errorRate: config.alertThresholds?.errorRate ?? 0.05,\n        memoryUsage: config.alertThresholds?.memoryUsage ?? 100 * 1024 * 1024,\n        ...config.alertThresholds\n      }\n    };\n  }\n\n  /** Start the dashboard monitoring */\n  async start(): Promise<void> {\n    if (this.isRunning) return;\n    \n    console.log('\uD83D\uDE80 Starting Unified Performance Dashboard...');\n    \n    if (this.config.enableRealtime) {\n      this.refreshTimer = setInterval(() => {\n        this.updateDashboard();\n      }, this.config.refreshInterval);\n    }\n    \n    this.isRunning = true;\n    this.emit('started');\n    \n    console.log('\u2705 Dashboard started successfully');\n    this.displayInitialStatus();\n  }\n\n  /** Stop the dashboard monitoring */\n  async stop(): Promise<void> {\n    if (!this.isRunning) return;\n    \n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\n      this.refreshTimer = undefined;\n    }\n    \n    this.isRunning = false;\n    this.emit('stopped');\n    \n    console.log('\u23F9\uFE0F Dashboard stopped');\n  }\n\n  /** Get comprehensive system status */\n  async getSystemStatus(): Promise<{\n    health: SystemHealth;\n    metrics: {\n      mcp: any;\n      memory: any;\n      database: any;\n      neural: any;\n    };\n    performance: {\n      uptime: number;\n      totalOperations: number;\n      systemLoad: number;\n      memoryUsage: number;\n    };\n  }> {\n    const mcpMetrics = this.mcpMetrics.getMetrics();\n    const mcpSummary = this.mcpMetrics.getPerformanceSummary();\n    const memoryStats = this.enhancedMemory.getStats();\n    const dbStats = await this.lanceDB.getStats().catch(() => ({\n      totalVectors: 0,\n      totalTables: 0,\n      averageSearchTime: 0,\n      indexedVectors: 0,\n      cacheHitRate: 0\n    }));\n\n    const health = this.assessSystemHealth(mcpMetrics, memoryStats, dbStats);\n    \n    return {\n      health,\n      metrics: {\n        mcp: mcpMetrics,\n        memory: memoryStats,\n        database: dbStats,\n        neural: mcpMetrics.neural\n      },\n      performance: {\n        uptime: mcpSummary.uptime,\n        totalOperations: mcpSummary.totalOperations,\n        systemLoad: this.getSystemLoad(),\n        memoryUsage: process.memoryUsage().heapUsed\n      }\n    };\n  }\n\n  /** Assess overall system health */\n  private assessSystemHealth(mcpMetrics: any, memoryStats: any, dbStats: any): SystemHealth {\n    const alerts: SystemHealth['alerts'] = [];\n    \n    // Check MCP health\n    const mcpErrorRate = mcpMetrics.requests.failed / Math.max(1, mcpMetrics.requests.total);\n    const mcpHealth = this.assessComponentHealth(\n      mcpMetrics.requests.averageLatency,\n      mcpErrorRate,\n      'mcp'\n    );\n    \n    if (mcpHealth !== 'healthy') {\n      alerts.push({\n        level: mcpHealth === 'warning' ? 'warning' : 'error',\n        component: 'MCP',\n        message: `High latency (${mcpMetrics.requests.averageLatency}ms) or error rate (${(mcpErrorRate * 100).toFixed(1)}%)`,\n        timestamp: Date.now()\n      });\n    }\n\n    // Check memory health\n    const memoryHealth = this.assessComponentHealth(\n      0, // No latency for memory\n      0, // No error rate for memory\n      'memory',\n      memoryStats.totalSize\n    );\n    \n    if (memoryHealth !== 'healthy') {\n      alerts.push({\n        level: 'warning',\n        component: 'Memory',\n        message: `High memory usage: ${Math.round(memoryStats.totalSize / 1024 / 1024)}MB`,\n        timestamp: Date.now()\n      });\n    }\n\n    // Check database health\n    const dbHealth = this.assessComponentHealth(\n      dbStats.averageSearchTime,\n      0, // No error rate available\n      'database'\n    );\n    \n    if (dbHealth !== 'healthy' && dbStats.totalVectors > 0) {\n      alerts.push({\n        level: 'warning',\n        component: 'Database',\n        message: `Slow search performance: ${dbStats.averageSearchTime}ms average`,\n        timestamp: Date.now()\n      });\n    }\n\n    // Check neural health\n    const neuralHealth = mcpMetrics.neural.accuracy < 0.8 ? 'warning' : 'healthy';\n    \n    if (neuralHealth !== 'healthy') {\n      alerts.push({\n        level: 'warning',\n        component: 'Neural',\n        message: `Low accuracy: ${(mcpMetrics.neural.accuracy * 100).toFixed(1)}%`,\n        timestamp: Date.now()\n      });\n    }\n\n    // Determine overall health\n    const componentHealths = [mcpHealth, memoryHealth, dbHealth, neuralHealth];\n    const overall = componentHealths.includes('critical') ? 'critical' :\n      componentHealths.includes('warning') ? 'warning' : 'healthy';\n\n    return {\n      overall,\n      components: {\n        mcp: mcpHealth,\n        memory: memoryHealth,\n        database: dbHealth,\n        neural: neuralHealth\n      },\n      alerts\n    };\n  }\n\n  /** Assess individual component health */\n  private assessComponentHealth(\n    latency: number,\n    errorRate: number,\n    component: string,\n    memoryUsage?: number\n  ): 'healthy' | 'warning' | 'critical' {\n    if (component === 'memory' && memoryUsage) {\n      if (memoryUsage > this.config.alertThresholds.memoryUsage! * 2) {\n        return 'critical';\n      } else if (memoryUsage > this.config.alertThresholds.memoryUsage!) {\n        return 'warning';\n      }\n    }\n    \n    if (latency > this.config.alertThresholds.latency! * 2 || \n        errorRate > this.config.alertThresholds.errorRate! * 2) {\n      return 'critical';\n    } else if (latency > this.config.alertThresholds.latency! || \n               errorRate > this.config.alertThresholds.errorRate!) {\n      return 'warning';\n    }\n    \n    return 'healthy';\n  }\n\n  /** Get system load (simplified) */\n  private getSystemLoad(): number {\n    const usage = process.cpuUsage();\n    return (usage.user + usage.system) / 1000000; // Convert to seconds\n  }\n\n  /** Update dashboard display */\n  private async updateDashboard(): Promise<void> {\n    try {\n      const status = await this.getSystemStatus();\n      this.emit('statusUpdate', status);\n      \n      // Display console output if no UI is connected\n      if (this.listenerCount('statusUpdate') === 0) {\n        this.displayConsoleStatus(status);\n      }\n    } catch (error) {\n      console.error('\u274C Dashboard update failed:', error);\n    }\n  }\n\n  /** Display initial status */\n  private displayInitialStatus(): void {\n    console.log('\\n\uD83D\uDCCA Claude Flow Performance Dashboard');\n    console.log('=====================================');\n    console.log(`\uD83D\uDD04 Refresh interval: ${this.config.refreshInterval}ms`);\n    console.log(`\uD83D\uDCC8 Real-time monitoring: ${this.config.enableRealtime ? 'Enabled' : 'Disabled'}`);\n    console.log(`\u26A0\uFE0F Alert thresholds:`);\n    console.log(`   Latency: ${this.config.alertThresholds.latency}ms`);\n    console.log(`   Error Rate: ${(this.config.alertThresholds.errorRate! * 100).toFixed(1)}%`);\n    console.log(`   Memory: ${Math.round(this.config.alertThresholds.memoryUsage! / 1024 / 1024)}MB`);\n    console.log('');\n  }\n\n  /** Display console status (fallback) */\n  private displayConsoleStatus(status: any): void {\n    console.clear();\n    console.log('\\n\uD83D\uDCCA Claude Flow Performance Dashboard - Live Status');\n    console.log('====================================================');\n    \n    // Overall health\n    const healthEmoji = status.health.overall === 'healthy' ? '\u2705' : \n      status.health.overall === 'warning' ? '\u26A0\uFE0F' : '\u274C';\n    console.log(`${healthEmoji} Overall Health: ${status.health.overall.toUpperCase()}`);\n    \n    // Component status\n    console.log('\\n\uD83D\uDD27 Component Status:');\n    console.log(`   MCP: ${this.getHealthEmoji(status.health.components.mcp)} ${status.health.components.mcp}`);\n    console.log(`   Memory: ${this.getHealthEmoji(status.health.components.memory)} ${status.health.components.memory}`);\n    console.log(`   Database: ${this.getHealthEmoji(status.health.components.database)} ${status.health.components.database}`);\n    console.log(`   Neural: ${this.getHealthEmoji(status.health.components.neural)} ${status.health.components.neural}`);\n    \n    // Key metrics\n    console.log('\\n\uD83D\uDCC8 Key Metrics:');\n    console.log(`   Requests: ${status.metrics.mcp.requests.total} (${status.metrics.mcp.requests.successful} successful)`);\n    console.log(`   Avg Latency: ${status.metrics.mcp.requests.averageLatency.toFixed(1)}ms`);\n    console.log(`   Tool Executions: ${status.metrics.mcp.tools.executions}`);\n    console.log(`   Memory Sessions: ${status.metrics.memory.totalSessions}`);\n    console.log(`   DB Vectors: ${status.metrics.database.totalVectors}`);\n    console.log(`   Neural Accuracy: ${(status.metrics.neural.accuracy * 100).toFixed(1)}%`);\n    \n    // Alerts\n    if (status.health.alerts.length > 0) {\n      console.log('\\n\uD83D\uDEA8 Active Alerts:');\n      status.health.alerts.forEach((alert: any) => {\n        const alertEmoji = alert.level === 'error' ? '\u274C' : \n          alert.level === 'warning' ? '\u26A0\uFE0F' : '\u2139\uFE0F';\n        console.log(`   ${alertEmoji} ${alert.component}: ${alert.message}`);\n      });\n    }\n    \n    console.log(`\\n\u23F0 Last Updated: ${new Date().toLocaleTimeString()}`);\n    console.log('Press Ctrl+C to stop monitoring');\n  }\n\n  /** Get health status emoji */\n  private getHealthEmoji(health: string): string {\n    switch (health) {\n      case 'healthy': return '\u2705';\n      case 'warning': return '\u26A0\uFE0F';\n      case 'critical': return '\u274C';\n      default: return '\u2753';\n    }\n  }\n\n  /** Generate comprehensive report */\n  async generateReport(): Promise<string> {\n    const status = await this.getSystemStatus();\n    const recommendations = this.mcpMetrics.getOptimizationRecommendations();\n    \n    const report = {\n      timestamp: new Date().toISOString(),\n      dashboard: 'Claude Flow Performance Dashboard',\n      version: '2.0.0',\n      status,\n      recommendations,\n      summary: {\n        totalComponents: 4,\n        healthyComponents: Object.values(status.health.components).filter(h => h === 'healthy').length,\n        totalAlerts: status.health.alerts.length,\n        uptime: status.performance.uptime,\n        systemLoad: status.performance.systemLoad\n      }\n    };\n    \n    return JSON.stringify(report, null, 2);\n  }\n}\n\nexport default UnifiedPerformanceDashboard;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3cb58c700e88abc5ad90884af55bf6a076f55a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_174p0x1fhv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_174p0x1fhv();
/** Unified Performance Dashboard */
/** Real-time monitoring and analytics for Claude Flow systems */
import { EventEmitter } from 'node:events';
export class UnifiedPerformanceDashboard extends EventEmitter {
  mcpMetrics;
  enhancedMemory;
  lanceDB;
  config;
  refreshTimer;
  isRunning =
  /* istanbul ignore next */
  (cov_174p0x1fhv().s[0]++, false);
  constructor(mcpMetrics, enhancedMemory, lanceDB, config =
  /* istanbul ignore next */
  (cov_174p0x1fhv().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[0]++;
    cov_174p0x1fhv().s[1]++;
    super();
    /* istanbul ignore next */
    cov_174p0x1fhv().s[2]++;
    this.mcpMetrics = mcpMetrics;
    /* istanbul ignore next */
    cov_174p0x1fhv().s[3]++;
    this.enhancedMemory = enhancedMemory;
    /* istanbul ignore next */
    cov_174p0x1fhv().s[4]++;
    this.lanceDB = lanceDB;
    /* istanbul ignore next */
    cov_174p0x1fhv().s[5]++;
    this.config = {
      refreshInterval:
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[1][0]++, config.refreshInterval) ??
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[1][1]++, 1000),
      enableRealtime:
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[2][0]++, config.enableRealtime) ??
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[2][1]++, true),
      maxDataPoints:
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[3][0]++, config.maxDataPoints) ??
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[3][1]++, 1000),
      alertThresholds: {
        latency:
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[4][0]++, config.alertThresholds?.latency) ??
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[4][1]++, 1000),
        errorRate:
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[5][0]++, config.alertThresholds?.errorRate) ??
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[5][1]++, 0.05),
        memoryUsage:
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[6][0]++, config.alertThresholds?.memoryUsage) ??
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[6][1]++, 100 * 1024 * 1024),
        ...config.alertThresholds
      }
    };
  }
  /** Start the dashboard monitoring */
  async start() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[1]++;
    cov_174p0x1fhv().s[6]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[7][0]++;
      cov_174p0x1fhv().s[7]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[7][1]++;
    }
    cov_174p0x1fhv().s[8]++;
    console.log('🚀 Starting Unified Performance Dashboard...');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[9]++;
    if (this.config.enableRealtime) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[8][0]++;
      cov_174p0x1fhv().s[10]++;
      this.refreshTimer = setInterval(() => {
        /* istanbul ignore next */
        cov_174p0x1fhv().f[2]++;
        cov_174p0x1fhv().s[11]++;
        this.updateDashboard();
      }, this.config.refreshInterval);
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[8][1]++;
    }
    cov_174p0x1fhv().s[12]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_174p0x1fhv().s[13]++;
    this.emit('started');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[14]++;
    console.log('✅ Dashboard started successfully');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[15]++;
    this.displayInitialStatus();
  }
  /** Stop the dashboard monitoring */
  async stop() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[3]++;
    cov_174p0x1fhv().s[16]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[9][0]++;
      cov_174p0x1fhv().s[17]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[9][1]++;
    }
    cov_174p0x1fhv().s[18]++;
    if (this.refreshTimer) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[10][0]++;
      cov_174p0x1fhv().s[19]++;
      clearInterval(this.refreshTimer);
      /* istanbul ignore next */
      cov_174p0x1fhv().s[20]++;
      this.refreshTimer = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[10][1]++;
    }
    cov_174p0x1fhv().s[21]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_174p0x1fhv().s[22]++;
    this.emit('stopped');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[23]++;
    console.log('⏹️ Dashboard stopped');
  }
  /** Get comprehensive system status */
  async getSystemStatus() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[4]++;
    const mcpMetrics =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[24]++, this.mcpMetrics.getMetrics());
    const mcpSummary =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[25]++, this.mcpMetrics.getPerformanceSummary());
    const memoryStats =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[26]++, this.enhancedMemory.getStats());
    const dbStats =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[27]++, await this.lanceDB.getStats().catch(() => {
      /* istanbul ignore next */
      cov_174p0x1fhv().f[5]++;
      cov_174p0x1fhv().s[28]++;
      return {
        totalVectors: 0,
        totalTables: 0,
        averageSearchTime: 0,
        indexedVectors: 0,
        cacheHitRate: 0
      };
    }));
    const health =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[29]++, this.assessSystemHealth(mcpMetrics, memoryStats, dbStats));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[30]++;
    return {
      health,
      metrics: {
        mcp: mcpMetrics,
        memory: memoryStats,
        database: dbStats,
        neural: mcpMetrics.neural
      },
      performance: {
        uptime: mcpSummary.uptime,
        totalOperations: mcpSummary.totalOperations,
        systemLoad: this.getSystemLoad(),
        memoryUsage: process.memoryUsage().heapUsed
      }
    };
  }
  /** Assess overall system health */
  assessSystemHealth(mcpMetrics, memoryStats, dbStats) {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[6]++;
    const alerts =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[31]++, []);
    // Check MCP health
    const mcpErrorRate =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[32]++, mcpMetrics.requests.failed / Math.max(1, mcpMetrics.requests.total));
    const mcpHealth =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[33]++, this.assessComponentHealth(mcpMetrics.requests.averageLatency, mcpErrorRate, 'mcp'));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[34]++;
    if (mcpHealth !== 'healthy') {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[11][0]++;
      cov_174p0x1fhv().s[35]++;
      alerts.push({
        level: mcpHealth === 'warning' ?
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[12][0]++, 'warning') :
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[12][1]++, 'error'),
        component: 'MCP',
        message: `High latency (${mcpMetrics.requests.averageLatency}ms) or error rate (${(mcpErrorRate * 100).toFixed(1)}%)`,
        timestamp: Date.now()
      });
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[11][1]++;
    }
    // Check memory health
    const memoryHealth =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[36]++, this.assessComponentHealth(0,
    // No latency for memory
    0,
    // No error rate for memory
    'memory', memoryStats.totalSize));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[37]++;
    if (memoryHealth !== 'healthy') {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[13][0]++;
      cov_174p0x1fhv().s[38]++;
      alerts.push({
        level: 'warning',
        component: 'Memory',
        message: `High memory usage: ${Math.round(memoryStats.totalSize / 1024 / 1024)}MB`,
        timestamp: Date.now()
      });
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[13][1]++;
    }
    // Check database health
    const dbHealth =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[39]++, this.assessComponentHealth(dbStats.averageSearchTime, 0,
    // No error rate available
    'database'));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[15][0]++, dbHealth !== 'healthy') &&
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[15][1]++, dbStats.totalVectors > 0)) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[14][0]++;
      cov_174p0x1fhv().s[41]++;
      alerts.push({
        level: 'warning',
        component: 'Database',
        message: `Slow search performance: ${dbStats.averageSearchTime}ms average`,
        timestamp: Date.now()
      });
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[14][1]++;
    }
    // Check neural health
    const neuralHealth =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[42]++, mcpMetrics.neural.accuracy < 0.8 ?
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[16][0]++, 'warning') :
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[16][1]++, 'healthy'));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[43]++;
    if (neuralHealth !== 'healthy') {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[17][0]++;
      cov_174p0x1fhv().s[44]++;
      alerts.push({
        level: 'warning',
        component: 'Neural',
        message: `Low accuracy: ${(mcpMetrics.neural.accuracy * 100).toFixed(1)}%`,
        timestamp: Date.now()
      });
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[17][1]++;
    }
    // Determine overall health
    const componentHealths =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[45]++, [mcpHealth, memoryHealth, dbHealth, neuralHealth]);
    const overall =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[46]++, componentHealths.includes('critical') ?
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[18][0]++, 'critical') :
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[18][1]++, componentHealths.includes('warning') ?
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[19][0]++, 'warning') :
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[19][1]++, 'healthy')));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[47]++;
    return {
      overall,
      components: {
        mcp: mcpHealth,
        memory: memoryHealth,
        database: dbHealth,
        neural: neuralHealth
      },
      alerts
    };
  }
  /** Assess individual component health */
  assessComponentHealth(latency, errorRate, component, memoryUsage) {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[7]++;
    cov_174p0x1fhv().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[21][0]++, component === 'memory') &&
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[21][1]++, memoryUsage)) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[20][0]++;
      cov_174p0x1fhv().s[49]++;
      if (memoryUsage > this.config.alertThresholds.memoryUsage * 2) {
        /* istanbul ignore next */
        cov_174p0x1fhv().b[22][0]++;
        cov_174p0x1fhv().s[50]++;
        return 'critical';
      } else {
        /* istanbul ignore next */
        cov_174p0x1fhv().b[22][1]++;
        cov_174p0x1fhv().s[51]++;
        if (memoryUsage > this.config.alertThresholds.memoryUsage) {
          /* istanbul ignore next */
          cov_174p0x1fhv().b[23][0]++;
          cov_174p0x1fhv().s[52]++;
          return 'warning';
        } else
        /* istanbul ignore next */
        {
          cov_174p0x1fhv().b[23][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[20][1]++;
    }
    cov_174p0x1fhv().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[25][0]++, latency > this.config.alertThresholds.latency * 2) ||
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[25][1]++, errorRate > this.config.alertThresholds.errorRate * 2)) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[24][0]++;
      cov_174p0x1fhv().s[54]++;
      return 'critical';
    } else {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[24][1]++;
      cov_174p0x1fhv().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[27][0]++, latency > this.config.alertThresholds.latency) ||
      /* istanbul ignore next */
      (cov_174p0x1fhv().b[27][1]++, errorRate > this.config.alertThresholds.errorRate)) {
        /* istanbul ignore next */
        cov_174p0x1fhv().b[26][0]++;
        cov_174p0x1fhv().s[56]++;
        return 'warning';
      } else
      /* istanbul ignore next */
      {
        cov_174p0x1fhv().b[26][1]++;
      }
    }
    /* istanbul ignore next */
    cov_174p0x1fhv().s[57]++;
    return 'healthy';
  }
  /** Get system load (simplified) */
  getSystemLoad() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[8]++;
    const usage =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[58]++, process.cpuUsage());
    /* istanbul ignore next */
    cov_174p0x1fhv().s[59]++;
    return (usage.user + usage.system) / 1000000; // Convert to seconds
  }
  /** Update dashboard display */
  async updateDashboard() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[9]++;
    cov_174p0x1fhv().s[60]++;
    try {
      const status =
      /* istanbul ignore next */
      (cov_174p0x1fhv().s[61]++, await this.getSystemStatus());
      /* istanbul ignore next */
      cov_174p0x1fhv().s[62]++;
      this.emit('statusUpdate', status);
      // Display console output if no UI is connected
      /* istanbul ignore next */
      cov_174p0x1fhv().s[63]++;
      if (this.listenerCount('statusUpdate') === 0) {
        /* istanbul ignore next */
        cov_174p0x1fhv().b[28][0]++;
        cov_174p0x1fhv().s[64]++;
        this.displayConsoleStatus(status);
      } else
      /* istanbul ignore next */
      {
        cov_174p0x1fhv().b[28][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_174p0x1fhv().s[65]++;
      console.error('❌ Dashboard update failed:', error);
    }
  }
  /** Display initial status */
  displayInitialStatus() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[10]++;
    cov_174p0x1fhv().s[66]++;
    console.log('\n📊 Claude Flow Performance Dashboard');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[67]++;
    console.log('=====================================');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[68]++;
    console.log(`🔄 Refresh interval: ${this.config.refreshInterval}ms`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[69]++;
    console.log(`📈 Real-time monitoring: ${this.config.enableRealtime ?
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[29][0]++, 'Enabled') :
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[29][1]++, 'Disabled')}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[70]++;
    console.log(`⚠️ Alert thresholds:`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[71]++;
    console.log(`   Latency: ${this.config.alertThresholds.latency}ms`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[72]++;
    console.log(`   Error Rate: ${(this.config.alertThresholds.errorRate * 100).toFixed(1)}%`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[73]++;
    console.log(`   Memory: ${Math.round(this.config.alertThresholds.memoryUsage / 1024 / 1024)}MB`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[74]++;
    console.log('');
  }
  /** Display console status (fallback) */
  displayConsoleStatus(status) {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[11]++;
    cov_174p0x1fhv().s[75]++;
    console.clear();
    /* istanbul ignore next */
    cov_174p0x1fhv().s[76]++;
    console.log('\n📊 Claude Flow Performance Dashboard - Live Status');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[77]++;
    console.log('====================================================');
    // Overall health
    const healthEmoji =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[78]++, status.health.overall === 'healthy' ?
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[30][0]++, '✅') :
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[30][1]++, status.health.overall === 'warning' ?
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[31][0]++, '⚠️') :
    /* istanbul ignore next */
    (cov_174p0x1fhv().b[31][1]++, '❌')));
    /* istanbul ignore next */
    cov_174p0x1fhv().s[79]++;
    console.log(`${healthEmoji} Overall Health: ${status.health.overall.toUpperCase()}`);
    // Component status
    /* istanbul ignore next */
    cov_174p0x1fhv().s[80]++;
    console.log('\n🔧 Component Status:');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[81]++;
    console.log(`   MCP: ${this.getHealthEmoji(status.health.components.mcp)} ${status.health.components.mcp}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[82]++;
    console.log(`   Memory: ${this.getHealthEmoji(status.health.components.memory)} ${status.health.components.memory}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[83]++;
    console.log(`   Database: ${this.getHealthEmoji(status.health.components.database)} ${status.health.components.database}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[84]++;
    console.log(`   Neural: ${this.getHealthEmoji(status.health.components.neural)} ${status.health.components.neural}`);
    // Key metrics
    /* istanbul ignore next */
    cov_174p0x1fhv().s[85]++;
    console.log('\n📈 Key Metrics:');
    /* istanbul ignore next */
    cov_174p0x1fhv().s[86]++;
    console.log(`   Requests: ${status.metrics.mcp.requests.total} (${status.metrics.mcp.requests.successful} successful)`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[87]++;
    console.log(`   Avg Latency: ${status.metrics.mcp.requests.averageLatency.toFixed(1)}ms`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[88]++;
    console.log(`   Tool Executions: ${status.metrics.mcp.tools.executions}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[89]++;
    console.log(`   Memory Sessions: ${status.metrics.memory.totalSessions}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[90]++;
    console.log(`   DB Vectors: ${status.metrics.database.totalVectors}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[91]++;
    console.log(`   Neural Accuracy: ${(status.metrics.neural.accuracy * 100).toFixed(1)}%`);
    // Alerts
    /* istanbul ignore next */
    cov_174p0x1fhv().s[92]++;
    if (status.health.alerts.length > 0) {
      /* istanbul ignore next */
      cov_174p0x1fhv().b[32][0]++;
      cov_174p0x1fhv().s[93]++;
      console.log('\n🚨 Active Alerts:');
      /* istanbul ignore next */
      cov_174p0x1fhv().s[94]++;
      status.health.alerts.forEach(alert => {
        /* istanbul ignore next */
        cov_174p0x1fhv().f[12]++;
        const alertEmoji =
        /* istanbul ignore next */
        (cov_174p0x1fhv().s[95]++, alert.level === 'error' ?
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[33][0]++, '❌') :
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[33][1]++, alert.level === 'warning' ?
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[34][0]++, '⚠️') :
        /* istanbul ignore next */
        (cov_174p0x1fhv().b[34][1]++, 'ℹ️')));
        /* istanbul ignore next */
        cov_174p0x1fhv().s[96]++;
        console.log(`   ${alertEmoji} ${alert.component}: ${alert.message}`);
      });
    } else
    /* istanbul ignore next */
    {
      cov_174p0x1fhv().b[32][1]++;
    }
    cov_174p0x1fhv().s[97]++;
    console.log(`\n⏰ Last Updated: ${new Date().toLocaleTimeString()}`);
    /* istanbul ignore next */
    cov_174p0x1fhv().s[98]++;
    console.log('Press Ctrl+C to stop monitoring');
  }
  /** Get health status emoji */
  getHealthEmoji(health) {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[13]++;
    cov_174p0x1fhv().s[99]++;
    switch (health) {
      case 'healthy':
        /* istanbul ignore next */
        cov_174p0x1fhv().b[35][0]++;
        cov_174p0x1fhv().s[100]++;
        return '✅';
      case 'warning':
        /* istanbul ignore next */
        cov_174p0x1fhv().b[35][1]++;
        cov_174p0x1fhv().s[101]++;
        return '⚠️';
      case 'critical':
        /* istanbul ignore next */
        cov_174p0x1fhv().b[35][2]++;
        cov_174p0x1fhv().s[102]++;
        return '❌';
      default:
        /* istanbul ignore next */
        cov_174p0x1fhv().b[35][3]++;
        cov_174p0x1fhv().s[103]++;
        return '❓';
    }
  }
  /** Generate comprehensive report */
  async generateReport() {
    /* istanbul ignore next */
    cov_174p0x1fhv().f[14]++;
    const status =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[104]++, await this.getSystemStatus());
    const recommendations =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[105]++, this.mcpMetrics.getOptimizationRecommendations());
    const report =
    /* istanbul ignore next */
    (cov_174p0x1fhv().s[106]++, {
      timestamp: new Date().toISOString(),
      dashboard: 'Claude Flow Performance Dashboard',
      version: '2.0.0',
      status,
      recommendations,
      summary: {
        totalComponents: 4,
        healthyComponents: Object.values(status.health.components).filter(h => {
          /* istanbul ignore next */
          cov_174p0x1fhv().f[15]++;
          cov_174p0x1fhv().s[107]++;
          return h === 'healthy';
        }).length,
        totalAlerts: status.health.alerts.length,
        uptime: status.performance.uptime,
        systemLoad: status.performance.systemLoad
      }
    });
    /* istanbul ignore next */
    cov_174p0x1fhv().s[108]++;
    return JSON.stringify(report, null, 2);
  }
}
export default UnifiedPerformanceDashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,