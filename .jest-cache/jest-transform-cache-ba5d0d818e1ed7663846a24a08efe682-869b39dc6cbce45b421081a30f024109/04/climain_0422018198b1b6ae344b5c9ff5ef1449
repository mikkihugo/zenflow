3ea0ed655d642d744a014837776ae7be
#!/usr/bin/env node
/**
 * CLI Main Module
 *
 * Entry point for the Claude Flow CLI application.
 * Integrates the new CliApp architecture with services, utilities, and commands.
 */
/* istanbul ignore next */
function cov_1qptozqktq() {
  var path = "/home/mhugo/code/claude-code-flow/src/cli/cli-main.ts";
  var hash = "3ea9c4eb136e34e9987add8190db2889f8688fd6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/cli/cli-main.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "1": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "2": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "3": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "4": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 73
        }
      },
      "5": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "6": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "7": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 43
        }
      },
      "8": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "9": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 44
        }
      },
      "10": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 43
        }
      },
      "11": {
        start: {
          line: 58,
          column: 19
        },
        end: {
          line: 58,
          column: 50
        }
      },
      "12": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 40
        }
      },
      "13": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "14": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "15": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "16": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "17": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "18": {
        start: {
          line: 105,
          column: 21
        },
        end: {
          line: 105,
          column: 42
        }
      },
      "19": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "20": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 55
        }
      },
      "21": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 56
        }
      },
      "22": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "23": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "24": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "25": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "26": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "27": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "28": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 85
        }
      },
      "29": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "30": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 69
        }
      },
      "31": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 61
        }
      },
      "32": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 29
        }
      },
      "33": {
        start: {
          line: 130,
          column: 36
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "34": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 40
        }
      },
      "35": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 31
        }
      },
      "36": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 83
        }
      },
      "37": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 136,
          column: 75
        }
      },
      "38": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "39": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "40": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 54
        }
      },
      "41": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "42": {
        start: {
          line: 143,
          column: 40
        },
        end: {
          line: 143,
          column: 75
        }
      },
      "43": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 44
        }
      },
      "44": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 64
        }
      },
      "45": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 24
        }
      },
      "46": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 158,
          column: 3
        }
      },
      "47": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 48
        }
      },
      "48": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 20
        }
      },
      "49": {
        start: {
          line: 159,
          column: 0
        },
        end: {
          line: 162,
          column: 3
        }
      },
      "50": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 73
        }
      },
      "51": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 20
        }
      },
      "52": {
        start: {
          line: 164,
          column: 0
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "53": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 66
        }
      },
      "54": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "55": {
        start: {
          line: 167,
          column: 36
        },
        end: {
          line: 167,
          column: 71
        }
      },
      "56": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 40
        }
      },
      "57": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 55
        }
      },
      "58": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 20
        }
      },
      "59": {
        start: {
          line: 175,
          column: 0
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "60": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 65
        }
      },
      "61": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "62": {
        start: {
          line: 178,
          column: 36
        },
        end: {
          line: 178,
          column: 71
        }
      },
      "63": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 40
        }
      },
      "64": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 55
        }
      },
      "65": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 20
        }
      },
      "66": {
        start: {
          line: 187,
          column: 0
        },
        end: {
          line: 190,
          column: 3
        }
      },
      "67": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 49
        }
      },
      "68": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 189,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "getPackageInfo",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 23
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "registerCommands",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 25
          }
        },
        loc: {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 47
      },
      "2": {
        name: "main",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 19
          }
        },
        loc: {
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 57
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 31
          }
        },
        loc: {
          start: {
            line: 113,
            column: 36
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 113
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 32
          },
          end: {
            line: 116,
            column: 33
          }
        },
        loc: {
          start: {
            line: 116,
            column: 46
          },
          end: {
            line: 118,
            column: 9
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 36
          }
        },
        loc: {
          start: {
            line: 119,
            column: 57
          },
          end: {
            line: 121,
            column: 9
          }
        },
        line: 119
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 122,
            column: 32
          },
          end: {
            line: 122,
            column: 33
          }
        },
        loc: {
          start: {
            line: 122,
            column: 53
          },
          end: {
            line: 124,
            column: 9
          }
        },
        line: 122
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 33
          }
        },
        loc: {
          start: {
            line: 155,
            column: 43
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 155
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 34
          }
        },
        loc: {
          start: {
            line: 159,
            column: 54
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 159
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 164,
            column: 21
          },
          end: {
            line: 164,
            column: 22
          }
        },
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 164
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 175,
            column: 22
          },
          end: {
            line: 175,
            column: 23
          }
        },
        loc: {
          start: {
            line: 175,
            column: 34
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 175
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 187,
            column: 13
          },
          end: {
            line: 187,
            column: 14
          }
        },
        loc: {
          start: {
            line: 187,
            column: 24
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 187
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 34
          }
        }, {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 31,
            column: 51
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 40
          }
        }, {
          start: {
            line: 32,
            column: 44
          },
          end: {
            line: 32,
            column: 51
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 48
          }
        }, {
          start: {
            line: 33,
            column: 52
          },
          end: {
            line: 33,
            column: 69
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "4": {
        loc: {
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 135,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 54
          },
          end: {
            line: 135,
            column: 67
          }
        }, {
          start: {
            line: 135,
            column: 70
          },
          end: {
            line: 135,
            column: 83
          }
        }],
        line: 135
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 27
          },
          end: {
            line: 136,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 52
          },
          end: {
            line: 136,
            column: 63
          }
        }, {
          start: {
            line: 136,
            column: 66
          },
          end: {
            line: 136,
            column: 75
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/cli/cli-main.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/cli/cli-main.ts"],
      sourcesContent: ["#!/usr/bin/env node\n\n/**\n * CLI Main Module\n * \n * Entry point for the Claude Flow CLI application.\n * Integrates the new CliApp architecture with services, utilities, and commands.\n */\n\nimport { join, dirname } from 'path';\nimport { fileURLToPath } from 'url';\nimport { readFileSync } from 'fs';\nimport { CliApp } from './core/app.js';\nimport { initializeServices, Services } from './services/index.js';\nimport { createLogger } from './utils/logger.js';\n// import { renderTui } from '../ui/ink-tui.js'; // TODO: Implement TUI\n\n// ESM __dirname equivalent\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\n// Import command classes\nimport { InitCommand } from './commands/init/init-command.js';\nimport { StatusCommand } from './commands/status/status-command.js';\nimport { SwarmCommand } from './commands/swarm/swarm-command.js';\nimport { HelpCommand } from './commands/help/help-command.js';\n\n/**\n * Get package information\n */\nfunction getPackageInfo() {\n  try {\n    const packagePath = join(process.cwd(), 'package.json');\n    const packageData = JSON.parse(readFileSync(packagePath, 'utf8'));\n    return {\n      name: packageData.name || 'claude-flow',\n      version: packageData.version || '1.0.0',\n      description: packageData.description || 'Claude Flow CLI'\n    };\n  } catch (error) {\n    return {\n      name: 'claude-flow',\n      version: '1.0.0',\n      description: 'Claude Flow CLI'\n    };\n  }\n}\n\n/**\n * Register all built-in commands\n */\nfunction registerCommands(app: CliApp): void {\n  // Core commands\n  app.registerCommand(new InitCommand());\n  app.registerCommand(new StatusCommand());\n  app.registerCommand(new SwarmCommand());\n  app.registerCommand(new HelpCommand());\n}\n\n/**\n * Main CLI application entry point\n */\nasync function main(): Promise<void> {\n  const logger = createLogger({ prefix: 'CLI' });\n  const packageInfo = getPackageInfo();\n  \n  try {\n    // Initialize services first\n    logger.info('Initializing services...');\n    await initializeServices();\n    \n    // Create CLI application\n    const app = CliApp.create({\n      name: packageInfo.name,\n      version: packageInfo.version,\n      description: packageInfo.description,\n      config: {\n        files: [\n          'claude-flow.config.json',\n          '.claude-flow.json',\n        ],\n        envPrefix: 'CLAUDE_FLOW',\n        createDefault: true,\n      },\n      commandPaths: [\n        join(__dirname, 'commands'),\n      ],\n      pluginPaths: [\n        join(process.cwd(), 'plugins'),\n        join(process.cwd(), 'node_modules', '@claude-flow'),\n      ],\n      flags: {\n        ui: {\n          type: 'boolean',\n          description: 'Launch interactive UI',\n        },\n        dryRun: {\n          type: 'boolean',\n          description: 'Show what would be done without executing',\n        },\n        timeout: {\n          type: 'number',\n          description: 'Command timeout in milliseconds',\n        },\n      },\n      setupErrorHandlers: true,\n      colors: true,\n      helpOnEmpty: true,\n    });\n    \n    // Register built-in commands\n    registerCommands(app);\n    \n    // Handle special UI flag before normal processing\n    const args = process.argv.slice(2);\n    if (args.includes('--ui')) {\n      logger.info('Launching interactive UI...');\n      // TODO: Implement TUI mode\n      logger.warn('TUI mode not yet implemented');\n      return;\n    }\n    \n    // Set up application event handlers\n    app.on('initialized', () => {\n      logger.info('CLI application initialized');\n    });\n    \n    app.on('command-start', ({ name }) => {\n      logger.debug(`Executing command: ${name}`);\n    });\n    \n    app.on('command-complete', ({ name, result }) => {\n      logger.debug(`Command '${name}' completed in ${result.executionTime}ms`);\n    });\n    \n    app.on('command-error', ({ name, error }) => {\n      logger.error(`Command '${name}' failed:`, error.message);\n    });\n    \n    // Run the application\n    const exitCode = await app.run(process.argv.slice(2));\n    \n    // Clean shutdown\n    await app.shutdown();\n    \n    // Dispose services\n    const { serviceRegistry } = await import('./services/index.js');\n    await serviceRegistry.dispose();\n    \n    process.exit(exitCode);\n    \n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorStack = error instanceof Error ? error.stack : undefined;\n    logger.error('Fatal error in CLI application:', errorMessage);\n    if (errorStack) {\n      console.error('Stack trace:', errorStack);\n    }\n    \n    // Try to clean up services on error\n    try {\n      const { serviceRegistry } = await import('./services/index.js');\n      await serviceRegistry.dispose();\n    } catch (cleanupError) {\n      logger.error('Error during cleanup:', cleanupError);\n    }\n    \n    process.exit(1);\n  }\n}\n\n/**\n * Handle uncaught exceptions and rejections\n */\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught Exception:', error);\n  process.exit(1);\n});\n\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n  process.exit(1);\n});\n\n// Graceful shutdown on SIGINT and SIGTERM\nprocess.on('SIGINT', async () => {\n  console.log('\\nReceived SIGINT, shutting down gracefully...');\n  try {\n    const { serviceRegistry } = await import('./services/index.js');\n    await serviceRegistry.dispose();\n  } catch (error) {\n    console.error('Error during shutdown:', error);\n  }\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', async () => {\n  console.log('Received SIGTERM, shutting down gracefully...');\n  try {\n    const { serviceRegistry } = await import('./services/index.js');\n    await serviceRegistry.dispose();\n  } catch (error) {\n    console.error('Error during shutdown:', error);\n  }\n  process.exit(0);\n});\n\n// Start the application\nmain().catch((error) => {\n  console.error('\u274C CLI startup error:', error);\n  process.exit(1);\n});"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3ea9c4eb136e34e9987add8190db2889f8688fd6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qptozqktq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qptozqktq();
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';
import { readFileSync } from 'fs';
import { CliApp } from './core/app.js';
import { initializeServices } from './services/index.js';
import { createLogger } from './utils/logger.js';
// import { renderTui } from '../ui/ink-tui.js'; // TODO: Implement TUI
// ESM __dirname equivalent
const __filename =
/* istanbul ignore next */
(cov_1qptozqktq().s[0]++, fileURLToPath(import.meta.url));
const __dirname =
/* istanbul ignore next */
(cov_1qptozqktq().s[1]++, dirname(__filename));
// Import command classes
import { InitCommand } from './commands/init/init-command.js';
import { StatusCommand } from './commands/status/status-command.js';
import { SwarmCommand } from './commands/swarm/swarm-command.js';
import { HelpCommand } from './commands/help/help-command.js';
/**
 * Get package information
 */
function getPackageInfo() {
  /* istanbul ignore next */
  cov_1qptozqktq().f[0]++;
  cov_1qptozqktq().s[2]++;
  try {
    const packagePath =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[3]++, join(process.cwd(), 'package.json'));
    const packageData =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[4]++, JSON.parse(readFileSync(packagePath, 'utf8')));
    /* istanbul ignore next */
    cov_1qptozqktq().s[5]++;
    return {
      name:
      /* istanbul ignore next */
      (cov_1qptozqktq().b[0][0]++, packageData.name) ||
      /* istanbul ignore next */
      (cov_1qptozqktq().b[0][1]++, 'claude-flow'),
      version:
      /* istanbul ignore next */
      (cov_1qptozqktq().b[1][0]++, packageData.version) ||
      /* istanbul ignore next */
      (cov_1qptozqktq().b[1][1]++, '1.0.0'),
      description:
      /* istanbul ignore next */
      (cov_1qptozqktq().b[2][0]++, packageData.description) ||
      /* istanbul ignore next */
      (cov_1qptozqktq().b[2][1]++, 'Claude Flow CLI')
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1qptozqktq().s[6]++;
    return {
      name: 'claude-flow',
      version: '1.0.0',
      description: 'Claude Flow CLI'
    };
  }
}
/**
 * Register all built-in commands
 */
function registerCommands(app) {
  /* istanbul ignore next */
  cov_1qptozqktq().f[1]++;
  cov_1qptozqktq().s[7]++;
  // Core commands
  app.registerCommand(new InitCommand());
  /* istanbul ignore next */
  cov_1qptozqktq().s[8]++;
  app.registerCommand(new StatusCommand());
  /* istanbul ignore next */
  cov_1qptozqktq().s[9]++;
  app.registerCommand(new SwarmCommand());
  /* istanbul ignore next */
  cov_1qptozqktq().s[10]++;
  app.registerCommand(new HelpCommand());
}
/**
 * Main CLI application entry point
 */
async function main() {
  /* istanbul ignore next */
  cov_1qptozqktq().f[2]++;
  const logger =
  /* istanbul ignore next */
  (cov_1qptozqktq().s[11]++, createLogger({
    prefix: 'CLI'
  }));
  const packageInfo =
  /* istanbul ignore next */
  (cov_1qptozqktq().s[12]++, getPackageInfo());
  /* istanbul ignore next */
  cov_1qptozqktq().s[13]++;
  try {
    /* istanbul ignore next */
    cov_1qptozqktq().s[14]++;
    // Initialize services first
    logger.info('Initializing services...');
    /* istanbul ignore next */
    cov_1qptozqktq().s[15]++;
    await initializeServices();
    // Create CLI application
    const app =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[16]++, CliApp.create({
      name: packageInfo.name,
      version: packageInfo.version,
      description: packageInfo.description,
      config: {
        files: ['claude-flow.config.json', '.claude-flow.json'],
        envPrefix: 'CLAUDE_FLOW',
        createDefault: true
      },
      commandPaths: [join(__dirname, 'commands')],
      pluginPaths: [join(process.cwd(), 'plugins'), join(process.cwd(), 'node_modules', '@claude-flow')],
      flags: {
        ui: {
          type: 'boolean',
          description: 'Launch interactive UI'
        },
        dryRun: {
          type: 'boolean',
          description: 'Show what would be done without executing'
        },
        timeout: {
          type: 'number',
          description: 'Command timeout in milliseconds'
        }
      },
      setupErrorHandlers: true,
      colors: true,
      helpOnEmpty: true
    }));
    // Register built-in commands
    /* istanbul ignore next */
    cov_1qptozqktq().s[17]++;
    registerCommands(app);
    // Handle special UI flag before normal processing
    const args =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[18]++, process.argv.slice(2));
    /* istanbul ignore next */
    cov_1qptozqktq().s[19]++;
    if (args.includes('--ui')) {
      /* istanbul ignore next */
      cov_1qptozqktq().b[3][0]++;
      cov_1qptozqktq().s[20]++;
      logger.info('Launching interactive UI...');
      // TODO: Implement TUI mode
      /* istanbul ignore next */
      cov_1qptozqktq().s[21]++;
      logger.warn('TUI mode not yet implemented');
      /* istanbul ignore next */
      cov_1qptozqktq().s[22]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1qptozqktq().b[3][1]++;
    }
    // Set up application event handlers
    cov_1qptozqktq().s[23]++;
    app.on('initialized', () => {
      /* istanbul ignore next */
      cov_1qptozqktq().f[3]++;
      cov_1qptozqktq().s[24]++;
      logger.info('CLI application initialized');
    });
    /* istanbul ignore next */
    cov_1qptozqktq().s[25]++;
    app.on('command-start', ({
      name
    }) => {
      /* istanbul ignore next */
      cov_1qptozqktq().f[4]++;
      cov_1qptozqktq().s[26]++;
      logger.debug(`Executing command: ${name}`);
    });
    /* istanbul ignore next */
    cov_1qptozqktq().s[27]++;
    app.on('command-complete', ({
      name,
      result
    }) => {
      /* istanbul ignore next */
      cov_1qptozqktq().f[5]++;
      cov_1qptozqktq().s[28]++;
      logger.debug(`Command '${name}' completed in ${result.executionTime}ms`);
    });
    /* istanbul ignore next */
    cov_1qptozqktq().s[29]++;
    app.on('command-error', ({
      name,
      error
    }) => {
      /* istanbul ignore next */
      cov_1qptozqktq().f[6]++;
      cov_1qptozqktq().s[30]++;
      logger.error(`Command '${name}' failed:`, error.message);
    });
    // Run the application
    const exitCode =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[31]++, await app.run(process.argv.slice(2)));
    // Clean shutdown
    /* istanbul ignore next */
    cov_1qptozqktq().s[32]++;
    await app.shutdown();
    // Dispose services
    const {
      serviceRegistry
    } =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[33]++, await import('./services/index.js'));
    /* istanbul ignore next */
    cov_1qptozqktq().s[34]++;
    await serviceRegistry.dispose();
    /* istanbul ignore next */
    cov_1qptozqktq().s[35]++;
    process.exit(exitCode);
  } catch (error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[36]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_1qptozqktq().b[4][0]++, error.message) :
    /* istanbul ignore next */
    (cov_1qptozqktq().b[4][1]++, String(error)));
    const errorStack =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[37]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_1qptozqktq().b[5][0]++, error.stack) :
    /* istanbul ignore next */
    (cov_1qptozqktq().b[5][1]++, undefined));
    /* istanbul ignore next */
    cov_1qptozqktq().s[38]++;
    logger.error('Fatal error in CLI application:', errorMessage);
    /* istanbul ignore next */
    cov_1qptozqktq().s[39]++;
    if (errorStack) {
      /* istanbul ignore next */
      cov_1qptozqktq().b[6][0]++;
      cov_1qptozqktq().s[40]++;
      console.error('Stack trace:', errorStack);
    } else
    /* istanbul ignore next */
    {
      cov_1qptozqktq().b[6][1]++;
    }
    // Try to clean up services on error
    cov_1qptozqktq().s[41]++;
    try {
      const {
        serviceRegistry
      } =
      /* istanbul ignore next */
      (cov_1qptozqktq().s[42]++, await import('./services/index.js'));
      /* istanbul ignore next */
      cov_1qptozqktq().s[43]++;
      await serviceRegistry.dispose();
    } catch (cleanupError) {
      /* istanbul ignore next */
      cov_1qptozqktq().s[44]++;
      logger.error('Error during cleanup:', cleanupError);
    }
    /* istanbul ignore next */
    cov_1qptozqktq().s[45]++;
    process.exit(1);
  }
}
/**
 * Handle uncaught exceptions and rejections
 */
/* istanbul ignore next */
cov_1qptozqktq().s[46]++;
process.on('uncaughtException', error => {
  /* istanbul ignore next */
  cov_1qptozqktq().f[7]++;
  cov_1qptozqktq().s[47]++;
  console.error('Uncaught Exception:', error);
  /* istanbul ignore next */
  cov_1qptozqktq().s[48]++;
  process.exit(1);
});
/* istanbul ignore next */
cov_1qptozqktq().s[49]++;
process.on('unhandledRejection', (reason, promise) => {
  /* istanbul ignore next */
  cov_1qptozqktq().f[8]++;
  cov_1qptozqktq().s[50]++;
  console.error('Unhandled Rejection at:', promise, 'reason:', reason);
  /* istanbul ignore next */
  cov_1qptozqktq().s[51]++;
  process.exit(1);
});
// Graceful shutdown on SIGINT and SIGTERM
/* istanbul ignore next */
cov_1qptozqktq().s[52]++;
process.on('SIGINT', async () => {
  /* istanbul ignore next */
  cov_1qptozqktq().f[9]++;
  cov_1qptozqktq().s[53]++;
  console.log('\nReceived SIGINT, shutting down gracefully...');
  /* istanbul ignore next */
  cov_1qptozqktq().s[54]++;
  try {
    const {
      serviceRegistry
    } =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[55]++, await import('./services/index.js'));
    /* istanbul ignore next */
    cov_1qptozqktq().s[56]++;
    await serviceRegistry.dispose();
  } catch (error) {
    /* istanbul ignore next */
    cov_1qptozqktq().s[57]++;
    console.error('Error during shutdown:', error);
  }
  /* istanbul ignore next */
  cov_1qptozqktq().s[58]++;
  process.exit(0);
});
/* istanbul ignore next */
cov_1qptozqktq().s[59]++;
process.on('SIGTERM', async () => {
  /* istanbul ignore next */
  cov_1qptozqktq().f[10]++;
  cov_1qptozqktq().s[60]++;
  console.log('Received SIGTERM, shutting down gracefully...');
  /* istanbul ignore next */
  cov_1qptozqktq().s[61]++;
  try {
    const {
      serviceRegistry
    } =
    /* istanbul ignore next */
    (cov_1qptozqktq().s[62]++, await import('./services/index.js'));
    /* istanbul ignore next */
    cov_1qptozqktq().s[63]++;
    await serviceRegistry.dispose();
  } catch (error) {
    /* istanbul ignore next */
    cov_1qptozqktq().s[64]++;
    console.error('Error during shutdown:', error);
  }
  /* istanbul ignore next */
  cov_1qptozqktq().s[65]++;
  process.exit(0);
});
// Start the application
/* istanbul ignore next */
cov_1qptozqktq().s[66]++;
main().catch(error => {
  /* istanbul ignore next */
  cov_1qptozqktq().f[11]++;
  cov_1qptozqktq().s[67]++;
  console.error('❌ CLI startup error:', error);
  /* istanbul ignore next */
  cov_1qptozqktq().s[68]++;
  process.exit(1);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,