{"version":3,"names":["cov_x19s4lpk5","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","MCPErrorHandler","MCPServer","constructor","options","errorHandler","console","log","success","stop"],"sources":["/home/mhugo/code/claude-code-flow/src/mcp/mcp-server.ts"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * @fileoverview Refactored Claude-Zen MCP Server\n * Clean architecture implementation of the Model Context Protocol server\n * @module MCPServerRefactored\n */\n\nimport { fileURLToPath } from 'node:url';\nimport { NeuralEngine } from '../neural/neural-engine.js';\nimport { MCPErrorHandler } from './core/error-handler.js';\n\n// Placeholder implementation for MCP server\nexport class MCPServer {\n  constructor(options = {}) {\n    this.options = options;\n    this.errorHandler = new MCPErrorHandler();\n  }\n\n  async start() {\n    console.log('MCP Server starting...');\n    return { success: true };\n  }\n\n  async stop() {\n    console.log('MCP Server stopping...');\n    return { success: true };\n  }\n}\n\nexport default MCPServer;"],"mappings":"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","ignoreList":[]}