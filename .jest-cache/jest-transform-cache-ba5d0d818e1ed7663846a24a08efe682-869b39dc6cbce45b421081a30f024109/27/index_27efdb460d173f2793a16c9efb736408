046bf2d31c2347c321bc752193694489
/* istanbul ignore next */
function cov_mqlwvy4jp() {
  var path = "/home/mhugo/code/claude-code-flow/src/cli/ui/index.ts";
  var hash = "ed40bbe26b7e78d15accafec3503f0b2586245fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/cli/ui/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "1": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "2": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "3": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "4": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 42,
          column: 48
        }
      },
      "5": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 48
        }
      },
      "6": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "7": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "8": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 47
        }
      },
      "9": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "10": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "11": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "12": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 26
        }
      },
      "13": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 16
        }
      },
      "14": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 48
        }
      },
      "15": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "16": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "17": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "18": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 56
        }
      },
      "19": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 47
        }
      },
      "20": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 38,
            column: 21
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 19
          }
        },
        loc: {
          start: {
            line: 56,
            column: 39
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 61
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 44,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 44,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 28
          }
        }, {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 52
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/cli/ui/index.ts",
      mappings: "AAAA;;;;;GAKG;AAEH,oBAAoB;AACpB,cAAc,cAAc,CAAC;AAE7B,iBAAiB;AACjB,cAAc,WAAW,CAAC;AAE1B,eAAe;AACf,cAAc,SAAS,CAAC;AA0BxB,8BAA8B;AAC9B,MAAM,CAAC,MAAM,YAAY,GAAY;IACnC,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;QACpB,OAAO,EAAE,SAAS;QAClB,OAAO,EAAE,SAAS;QAClB,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,SAAS;KACtB;IACD,OAAO,EAAE;QACP,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,GAAG;QACV,OAAO,EAAE,GAAG;QACZ,IAAI,EAAE,GAAG;QACT,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;KAC5D;CACF,CAAC;AAEF,sBAAsB;AACtB,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,cAAc,EAAE,CAAC,EAAU,EAAU,EAAE;QACrC,IAAI,EAAE,GAAG,IAAI;YAAE,OAAO,GAAG,EAAE,IAAI,CAAC;QAChC,IAAI,EAAE,GAAG,KAAK;YAAE,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;QACpD,IAAI,EAAE,GAAG,OAAO;YAAE,OAAO,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;QACvD,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACzC,CAAC;IAED,WAAW,EAAE,CAAC,KAAa,EAAU,EAAE;QACrC,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC7C,KAAK,IAAI,IAAI,CAAC;YACd,CAAC,EAAE,CAAC;QACN,CAAC;QACD,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC1C,CAAC;IAED,YAAY,EAAE,CAAC,IAAY,EAAE,SAAiB,EAAU,EAAE;QACxD,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS;YAAE,OAAO,IAAI,CAAC;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAClD,CAAC;IAED,UAAU,EAAE,CAAC,IAAY,EAAE,KAAa,EAAU,EAAE;QAClD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,OAAO,GAAG,OAAO,CAAC;QACnC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;CACF,CAAC",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/cli/ui/index.ts"],
      sourcesContent: ["/**\n * Ink UI Components - Main Export Module\n * \n * This module exports all UI components, screens, and hooks for the Claude Flow CLI.\n * Built with Ink (React for CLI) for rich terminal user interfaces.\n */\n\n// Component exports\nexport * from './components';\n\n// Screen exports\nexport * from './screens';\n\n// Hook exports\nexport * from './hooks';\n\n// Type definitions for UI components\nexport interface UITheme {\n  colors: {\n    primary: string;\n    secondary: string;\n    success: string;\n    warning: string;\n    error: string;\n    info: string;\n    text: string;\n    dimText: string;\n    background: string;\n  };\n  symbols: {\n    check: string;\n    cross: string;\n    warning: string;\n    info: string;\n    arrow: string;\n    bullet: string;\n    spinner: string[];\n  };\n}\n\n// Default theme configuration\nexport const defaultTheme: UITheme = {\n  colors: {\n    primary: '#00D7FF',\n    secondary: '#6C7B7F',\n    success: '#00D100',\n    warning: '#FFAB00',\n    error: '#FF5722',\n    info: '#2196F3',\n    text: '#FFFFFF',\n    dimText: '#6C7B7F',\n    background: '#1A1A1A',\n  },\n  symbols: {\n    check: '\u2713',\n    cross: '\u2717',\n    warning: '\u26A0',\n    info: '\u2139',\n    arrow: '\u2192',\n    bullet: '\u2022',\n    spinner: ['\u280B', '\u2819', '\u2839', '\u2838', '\u283C', '\u2834', '\u2826', '\u2827', '\u2807', '\u280F'],\n  },\n};\n\n// Common UI utilities\nexport const UIUtils = {\n  formatDuration: (ms: number): string => {\n    if (ms < 1000) return `${ms}ms`;\n    if (ms < 60000) return `${(ms / 1000).toFixed(1)}s`;\n    if (ms < 3600000) return `${(ms / 60000).toFixed(1)}m`;\n    return `${(ms / 3600000).toFixed(1)}h`;\n  },\n  \n  formatBytes: (bytes: number): string => {\n    const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n    let i = 0;\n    while (bytes >= 1024 && i < units.length - 1) {\n      bytes /= 1024;\n      i++;\n    }\n    return `${bytes.toFixed(1)}${units[i]}`;\n  },\n  \n  truncateText: (text: string, maxLength: number): string => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength - 3) + '...';\n  },\n  \n  centerText: (text: string, width: number): string => {\n    const padding = Math.max(0, width - text.length);\n    const leftPad = Math.floor(padding / 2);\n    const rightPad = padding - leftPad;\n    return ' '.repeat(leftPad) + text + ' '.repeat(rightPad);\n  },\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed40bbe26b7e78d15accafec3503f0b2586245fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mqlwvy4jp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mqlwvy4jp();
/**
 * Ink UI Components - Main Export Module
 *
 * This module exports all UI components, screens, and hooks for the Claude Flow CLI.
 * Built with Ink (React for CLI) for rich terminal user interfaces.
 */
// Component exports
export * from './components';
// Screen exports
export * from './screens';
// Hook exports
export * from './hooks';
// Default theme configuration
export const defaultTheme =
/* istanbul ignore next */
(cov_mqlwvy4jp().s[0]++, {
  colors: {
    primary: '#00D7FF',
    secondary: '#6C7B7F',
    success: '#00D100',
    warning: '#FFAB00',
    error: '#FF5722',
    info: '#2196F3',
    text: '#FFFFFF',
    dimText: '#6C7B7F',
    background: '#1A1A1A'
  },
  symbols: {
    check: '✓',
    cross: '✗',
    warning: '⚠',
    info: 'ℹ',
    arrow: '→',
    bullet: '•',
    spinner: ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏']
  }
});
// Common UI utilities
export const UIUtils =
/* istanbul ignore next */
(cov_mqlwvy4jp().s[1]++, {
  formatDuration: ms => {
    /* istanbul ignore next */
    cov_mqlwvy4jp().f[0]++;
    cov_mqlwvy4jp().s[2]++;
    if (ms < 1000) {
      /* istanbul ignore next */
      cov_mqlwvy4jp().b[0][0]++;
      cov_mqlwvy4jp().s[3]++;
      return `${ms}ms`;
    } else
    /* istanbul ignore next */
    {
      cov_mqlwvy4jp().b[0][1]++;
    }
    cov_mqlwvy4jp().s[4]++;
    if (ms < 60000) {
      /* istanbul ignore next */
      cov_mqlwvy4jp().b[1][0]++;
      cov_mqlwvy4jp().s[5]++;
      return `${(ms / 1000).toFixed(1)}s`;
    } else
    /* istanbul ignore next */
    {
      cov_mqlwvy4jp().b[1][1]++;
    }
    cov_mqlwvy4jp().s[6]++;
    if (ms < 3600000) {
      /* istanbul ignore next */
      cov_mqlwvy4jp().b[2][0]++;
      cov_mqlwvy4jp().s[7]++;
      return `${(ms / 60000).toFixed(1)}m`;
    } else
    /* istanbul ignore next */
    {
      cov_mqlwvy4jp().b[2][1]++;
    }
    cov_mqlwvy4jp().s[8]++;
    return `${(ms / 3600000).toFixed(1)}h`;
  },
  formatBytes: bytes => {
    /* istanbul ignore next */
    cov_mqlwvy4jp().f[1]++;
    const units =
    /* istanbul ignore next */
    (cov_mqlwvy4jp().s[9]++, ['B', 'KB', 'MB', 'GB', 'TB']);
    let i =
    /* istanbul ignore next */
    (cov_mqlwvy4jp().s[10]++, 0);
    /* istanbul ignore next */
    cov_mqlwvy4jp().s[11]++;
    while (
    /* istanbul ignore next */
    (cov_mqlwvy4jp().b[3][0]++, bytes >= 1024) &&
    /* istanbul ignore next */
    (cov_mqlwvy4jp().b[3][1]++, i < units.length - 1)) {
      /* istanbul ignore next */
      cov_mqlwvy4jp().s[12]++;
      bytes /= 1024;
      /* istanbul ignore next */
      cov_mqlwvy4jp().s[13]++;
      i++;
    }
    /* istanbul ignore next */
    cov_mqlwvy4jp().s[14]++;
    return `${bytes.toFixed(1)}${units[i]}`;
  },
  truncateText: (text, maxLength) => {
    /* istanbul ignore next */
    cov_mqlwvy4jp().f[2]++;
    cov_mqlwvy4jp().s[15]++;
    if (text.length <= maxLength) {
      /* istanbul ignore next */
      cov_mqlwvy4jp().b[4][0]++;
      cov_mqlwvy4jp().s[16]++;
      return text;
    } else
    /* istanbul ignore next */
    {
      cov_mqlwvy4jp().b[4][1]++;
    }
    cov_mqlwvy4jp().s[17]++;
    return text.substring(0, maxLength - 3) + '...';
  },
  centerText: (text, width) => {
    /* istanbul ignore next */
    cov_mqlwvy4jp().f[3]++;
    const padding =
    /* istanbul ignore next */
    (cov_mqlwvy4jp().s[18]++, Math.max(0, width - text.length));
    const leftPad =
    /* istanbul ignore next */
    (cov_mqlwvy4jp().s[19]++, Math.floor(padding / 2));
    const rightPad =
    /* istanbul ignore next */
    (cov_mqlwvy4jp().s[20]++, padding - leftPad);
    /* istanbul ignore next */
    cov_mqlwvy4jp().s[21]++;
    return ' '.repeat(leftPad) + text + ' '.repeat(rightPad);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,