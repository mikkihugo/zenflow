{"version":3,"names":["cov_28kejc2mfq","actualCoverage","EventEmitter","WebSocketClient","url","options","ws","s","messageQueue","reconnectTimer","heartbeatTimer","isConnected","reconnectAttempts","constructor","b","f","reconnect","reconnectInterval","maxReconnectAttempts","timeout","connect","Promise","resolve","reject","WebSocket","setTimeout","Error","onopen","clearTimeout","emit","startHeartbeat","flushMessageQueue","onmessage","event","data","JSON","parse","onclose","stopHeartbeat","code","reason","scheduleReconnect","onerror","error","disconnect","close","send","message","stringify","queueMessage","push","length","shift","unshift","delay","setInterval","type","clearInterval","connected","connectionUrl","queuedMessages"],"sources":["/home/mhugo/code/claude-code-flow/src/api/websocket-client.ts"],"sourcesContent":["\n/** Node.js 22 Native WebSocket Client Implementation\n * Uses the built-in WebSocket client available in Node.js 22+\n * Provides high-performance, standards-compliant WebSocket connectivity\n */\n\nimport { EventEmitter } from 'node:events';\n\n// Use Node.js WebSocket API when available, fallback to DOM types\n\ninterface WebSocketClientOptions {\n  reconnect?: boolean;\n  reconnectInterval?: number;\n  maxReconnectAttempts?: number;\n  timeout?: number;\n}\n\n/** Native WebSocket Client using Node.js 22 built-in WebSocket\n *\n * Features:\n * - Auto-reconnection with exponential backoff\n * - Message queuing during disconnection\n * - Heartbeat/ping-pong support\n * - Connection state management\n * - Error handling and recovery\n */\n\nexport class WebSocketClient extends EventEmitter {\n  private url: string;\n  private options: WebSocketClientOptions;\n  private ws: WebSocket | null = null;\n  private messageQueue: string[] = [];\n  private reconnectTimer: NodeJS.Timeout | null = null;\n  private heartbeatTimer: NodeJS.Timeout | null = null;\n  private isConnected = false;\n  private reconnectAttempts = 0;\n\n  constructor(url: string, options: WebSocketClientOptions = {}) {\n    super();\n    this.url = url;\n    this.options = {\n      reconnect: true,\n      reconnectInterval: 1000,\n      maxReconnectAttempts: 10,\n      timeout: 30000,\n      ...options\n    };\n  }\n\n  /** Connect to WebSocket server */\n  async connect(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        // Use Node.js 22 built-in WebSocket\n        this.ws = new WebSocket(this.url);\n        \n        const timeout = setTimeout(() => {\n          reject(new Error('WebSocket connection timeout'));\n        }, this.options.timeout);\n\n        this.ws.onopen = () => {\n          clearTimeout(timeout);\n          this.isConnected = true;\n          this.reconnectAttempts = 0;\n          this.emit('connected');\n          this.startHeartbeat();\n          this.flushMessageQueue();\n          resolve();\n        };\n\n        this.ws.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            this.emit('message', data);\n          } catch {\n            this.emit('message', event.data);\n          }\n        };\n\n        this.ws.onclose = (event) => {\n          clearTimeout(timeout);\n          this.isConnected = false;\n          this.stopHeartbeat();\n          this.emit('disconnected', event.code, event.reason);\n\n          if (\n            this.options.reconnect &&\n            this.reconnectAttempts < this.options.maxReconnectAttempts!\n          ) {\n            this.scheduleReconnect();\n          }\n        };\n\n        this.ws.onerror = (error) => {\n          clearTimeout(timeout);\n          this.emit('error', error);\n          reject(error);\n        };\n      } catch(error) {\n        reject(error);\n      }\n    });\n  }\n\n  /** Disconnect from WebSocket server */\n  disconnect(): void {\n    if(this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    this.stopHeartbeat();\n    if(this.ws && this.isConnected) {\n      this.ws.close();\n    }\n    this.isConnected = false;\n  }\n\n  /** Send message to server */\n\nsend(data)\n: void\n  send(data: any): void {\n    const message = typeof data === 'string' ? data : JSON.stringify(data);\n    if(this.isConnected && this.ws) {\n      try {\n        this.ws.send(message);\n      } catch(error) {\n        this.emit('error', error);\n        this.queueMessage(message);\n      }\n    } else {\n      this.queueMessage(message);\n    }\n  }\n\n  /** Queue message for later sending */\n  private queueMessage(message: string): void {\n    this.messageQueue.push(message);\n    // Limit queue size to prevent memory issues\n    if(this.messageQueue.length > 1000) {\n      this.messageQueue.shift();\n    }\n  }\n\n  /** Send all queued messages */\n  private flushMessageQueue(): void {\n    while(this.messageQueue.length > 0 && this.isConnected) {\n      const message = this.messageQueue.shift();\n      if(message) {\n        try {\n          this.ws!.send(message);\n        } catch(error) {\n          this.emit('error', error);\n          this.messageQueue.unshift(message);\n          break;\n        }\n      }\n    }\n  }\n\n  /** Schedule reconnection attempt */\n  private scheduleReconnect(): void {\n    const delay = this.options.reconnectInterval! * 2 ** this.reconnectAttempts;\n    this.reconnectTimer = setTimeout(async() => {\n      this.reconnectAttempts++;\n      this.emit('reconnecting', this.reconnectAttempts);\n      try {\n        await this.connect();\n      } catch(error) {\n        this.emit('reconnectError', error);\n        if(this.reconnectAttempts < this.options.maxReconnectAttempts!) {\n          this.scheduleReconnect();\n        } else {\n          this.emit('reconnectFailed');\n        }\n      }\n    }, delay);\n  }\n\n  /** Start heartbeat mechanism */\n  private startHeartbeat(): void {\n    this.heartbeatTimer = setInterval(() => {\n      if(this.isConnected && this.ws) {\n        try {\n          // Note: WebSocket ping might not be available, use a message instead\n          this.ws.send(JSON.stringify({ type: 'ping' }));\n        } catch(error) {\n          this.emit('error', error);\n        }\n      }\n    }, 30000); // 30 seconds\n  }\n\n  /** Stop heartbeat mechanism */\n  private stopHeartbeat(): void {\n    if(this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  /** Get connection status */\n  get connected(): boolean {\n    return this.isConnected;\n  }\n\n  /** Get connection URL */\n  get connectionUrl(): string {\n    return this.url;\n  }\n\n  /** Get queued message count */\n  get queuedMessages(): number {\n    return this.messageQueue.length;\n  }\n}\n\n// Default export for convenience\nexport default WebSocketClient;\n"],"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","ignoreList":[]}