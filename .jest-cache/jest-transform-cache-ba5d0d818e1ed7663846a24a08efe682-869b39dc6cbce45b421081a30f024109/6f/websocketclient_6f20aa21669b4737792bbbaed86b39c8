35001aadb8dc9e4a379153b9c1830dd8
/* istanbul ignore next */
function cov_28kejc2mfq() {
  var path = "/home/mhugo/code/claude-code-flow/src/api/websocket-client.ts";
  var hash = "5bb8169648d7387dbd7dbcccdf635a7761e7730e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mhugo/code/claude-code-flow/src/api/websocket-client.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 9
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "1": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 21
        }
      },
      "2": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 25
        }
      },
      "3": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "4": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "5": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 16
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "9": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "10": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "11": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "12": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "13": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 70
        }
      },
      "14": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "15": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 42
        }
      },
      "16": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "17": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 47
        }
      },
      "18": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 43
        }
      },
      "19": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "20": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "21": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "22": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "23": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 60,
          column: 21
        }
      },
      "24": {
        start: {
          line: 55,
          column: 37
        },
        end: {
          line: 55,
          column: 59
        }
      },
      "25": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 51
        }
      },
      "26": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "27": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "28": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "29": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "30": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 41
        }
      },
      "31": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 72
        }
      },
      "32": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "33": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 49
        }
      },
      "34": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "35": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "36": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 46
        }
      },
      "37": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 34
        }
      },
      "38": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 30
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "40": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 46
        }
      },
      "41": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "42": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "43": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "44": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "45": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 33
        }
      },
      "46": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 78
        }
      },
      "47": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "48": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "49": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 38
        }
      },
      "50": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 42
        }
      },
      "51": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "52": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 39
        }
      },
      "53": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "54": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "55": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 38
        }
      },
      "56": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "57": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 121,
          column: 53
        }
      },
      "58": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "59": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 130,
          column: 17
        }
      },
      "60": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 42
        }
      },
      "61": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "62": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 55
        }
      },
      "63": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 129,
          column: 26
        }
      },
      "64": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 82
        }
      },
      "65": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 152,
          column: 18
        }
      },
      "66": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 37
        }
      },
      "67": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 62
        }
      },
      "68": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "69": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 37
        }
      },
      "70": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 51
        }
      },
      "71": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 150,
          column: 17
        }
      },
      "72": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 45
        }
      },
      "73": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 49
        }
      },
      "74": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 166,
          column: 18
        }
      },
      "75": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "76": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "77": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 67
        }
      },
      "78": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 46
        }
      },
      "79": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "80": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 47
        }
      },
      "81": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 39
        }
      },
      "82": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 32
        }
      },
      "83": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 24
        }
      },
      "84": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 37,
            column: 28
          }
        },
        loc: {
          start: {
            line: 37,
            column: 48
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 43
          },
          end: {
            line: 41,
            column: 44
          }
        },
        loc: {
          start: {
            line: 41,
            column: 49
          },
          end: {
            line: 43,
            column: 17
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 34
          }
        },
        loc: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 52,
            column: 17
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 53,
            column: 37
          }
        },
        loc: {
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 61,
            column: 17
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 35
          }
        },
        loc: {
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 71,
            column: 17
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 72,
            column: 35
          }
        },
        loc: {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 76,
            column: 17
          }
        },
        line: 72
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 17
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 15
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 111
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 119
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 135
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 137,
            column: 42
          }
        },
        loc: {
          start: {
            line: 137,
            column: 53
          },
          end: {
            line: 152,
            column: 9
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 156,
            column: 42
          },
          end: {
            line: 156,
            column: 43
          }
        },
        loc: {
          start: {
            line: 156,
            column: 48
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 156
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 20
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 169
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 176
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 24
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 180
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 25
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 184
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 21
          },
          end: {
            line: 24,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 33
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 68,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 46
          }
        }, {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 82
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 19
          }
        }, {
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 90,
            column: 39
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 24
          },
          end: {
            line: 96,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 51
          },
          end: {
            line: 96,
            column: 55
          }
        }, {
          start: {
            line: 96,
            column: 58
          },
          end: {
            line: 96,
            column: 78
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: 106,
            column: 13
          },
          end: {
            line: 108,
            column: 9
          }
        }],
        line: 97
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 28
          }
        }, {
          start: {
            line: 97,
            column: 32
          },
          end: {
            line: 97,
            column: 39
          }
        }],
        line: 97
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 120,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 120,
            column: 43
          }
        }, {
          start: {
            line: 120,
            column: 47
          },
          end: {
            line: 120,
            column: 63
          }
        }],
        line: 120
      },
      "11": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "12": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        }, {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 150,
            column: 17
          }
        }],
        line: 145
      },
      "13": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "14": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 32
          }
        }, {
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 157,
            column: 43
          }
        }],
        line: 157
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/home/mhugo/code/claude-code-flow/src/api/websocket-client.ts",
      mappings: "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",
      names: [],
      sources: ["/home/mhugo/code/claude-code-flow/src/api/websocket-client.ts"],
      sourcesContent: ["\n/** Node.js 22 Native WebSocket Client Implementation\n * Uses the built-in WebSocket client available in Node.js 22+\n * Provides high-performance, standards-compliant WebSocket connectivity\n */\n\nimport { EventEmitter } from 'node:events';\n\n// Use Node.js WebSocket API when available, fallback to DOM types\n\ninterface WebSocketClientOptions {\n  reconnect?: boolean;\n  reconnectInterval?: number;\n  maxReconnectAttempts?: number;\n  timeout?: number;\n}\n\n/** Native WebSocket Client using Node.js 22 built-in WebSocket\n *\n * Features:\n * - Auto-reconnection with exponential backoff\n * - Message queuing during disconnection\n * - Heartbeat/ping-pong support\n * - Connection state management\n * - Error handling and recovery\n */\n\nexport class WebSocketClient extends EventEmitter {\n  private url: string;\n  private options: WebSocketClientOptions;\n  private ws: WebSocket | null = null;\n  private messageQueue: string[] = [];\n  private reconnectTimer: NodeJS.Timeout | null = null;\n  private heartbeatTimer: NodeJS.Timeout | null = null;\n  private isConnected = false;\n  private reconnectAttempts = 0;\n\n  constructor(url: string, options: WebSocketClientOptions = {}) {\n    super();\n    this.url = url;\n    this.options = {\n      reconnect: true,\n      reconnectInterval: 1000,\n      maxReconnectAttempts: 10,\n      timeout: 30000,\n      ...options\n    };\n  }\n\n  /** Connect to WebSocket server */\n  async connect(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        // Use Node.js 22 built-in WebSocket\n        this.ws = new WebSocket(this.url);\n        \n        const timeout = setTimeout(() => {\n          reject(new Error('WebSocket connection timeout'));\n        }, this.options.timeout);\n\n        this.ws.onopen = () => {\n          clearTimeout(timeout);\n          this.isConnected = true;\n          this.reconnectAttempts = 0;\n          this.emit('connected');\n          this.startHeartbeat();\n          this.flushMessageQueue();\n          resolve();\n        };\n\n        this.ws.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            this.emit('message', data);\n          } catch {\n            this.emit('message', event.data);\n          }\n        };\n\n        this.ws.onclose = (event) => {\n          clearTimeout(timeout);\n          this.isConnected = false;\n          this.stopHeartbeat();\n          this.emit('disconnected', event.code, event.reason);\n\n          if (\n            this.options.reconnect &&\n            this.reconnectAttempts < this.options.maxReconnectAttempts!\n          ) {\n            this.scheduleReconnect();\n          }\n        };\n\n        this.ws.onerror = (error) => {\n          clearTimeout(timeout);\n          this.emit('error', error);\n          reject(error);\n        };\n      } catch(error) {\n        reject(error);\n      }\n    });\n  }\n\n  /** Disconnect from WebSocket server */\n  disconnect(): void {\n    if(this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    this.stopHeartbeat();\n    if(this.ws && this.isConnected) {\n      this.ws.close();\n    }\n    this.isConnected = false;\n  }\n\n  /** Send message to server */\n\nsend(data)\n: void\n  send(data: any): void {\n    const message = typeof data === 'string' ? data : JSON.stringify(data);\n    if(this.isConnected && this.ws) {\n      try {\n        this.ws.send(message);\n      } catch(error) {\n        this.emit('error', error);\n        this.queueMessage(message);\n      }\n    } else {\n      this.queueMessage(message);\n    }\n  }\n\n  /** Queue message for later sending */\n  private queueMessage(message: string): void {\n    this.messageQueue.push(message);\n    // Limit queue size to prevent memory issues\n    if(this.messageQueue.length > 1000) {\n      this.messageQueue.shift();\n    }\n  }\n\n  /** Send all queued messages */\n  private flushMessageQueue(): void {\n    while(this.messageQueue.length > 0 && this.isConnected) {\n      const message = this.messageQueue.shift();\n      if(message) {\n        try {\n          this.ws!.send(message);\n        } catch(error) {\n          this.emit('error', error);\n          this.messageQueue.unshift(message);\n          break;\n        }\n      }\n    }\n  }\n\n  /** Schedule reconnection attempt */\n  private scheduleReconnect(): void {\n    const delay = this.options.reconnectInterval! * 2 ** this.reconnectAttempts;\n    this.reconnectTimer = setTimeout(async() => {\n      this.reconnectAttempts++;\n      this.emit('reconnecting', this.reconnectAttempts);\n      try {\n        await this.connect();\n      } catch(error) {\n        this.emit('reconnectError', error);\n        if(this.reconnectAttempts < this.options.maxReconnectAttempts!) {\n          this.scheduleReconnect();\n        } else {\n          this.emit('reconnectFailed');\n        }\n      }\n    }, delay);\n  }\n\n  /** Start heartbeat mechanism */\n  private startHeartbeat(): void {\n    this.heartbeatTimer = setInterval(() => {\n      if(this.isConnected && this.ws) {\n        try {\n          // Note: WebSocket ping might not be available, use a message instead\n          this.ws.send(JSON.stringify({ type: 'ping' }));\n        } catch(error) {\n          this.emit('error', error);\n        }\n      }\n    }, 30000); // 30 seconds\n  }\n\n  /** Stop heartbeat mechanism */\n  private stopHeartbeat(): void {\n    if(this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  /** Get connection status */\n  get connected(): boolean {\n    return this.isConnected;\n  }\n\n  /** Get connection URL */\n  get connectionUrl(): string {\n    return this.url;\n  }\n\n  /** Get queued message count */\n  get queuedMessages(): number {\n    return this.messageQueue.length;\n  }\n}\n\n// Default export for convenience\nexport default WebSocketClient;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5bb8169648d7387dbd7dbcccdf635a7761e7730e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28kejc2mfq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28kejc2mfq();
/** Node.js 22 Native WebSocket Client Implementation
 * Uses the built-in WebSocket client available in Node.js 22+
 * Provides high-performance, standards-compliant WebSocket connectivity
 */
import { EventEmitter } from 'node:events';
/** Native WebSocket Client using Node.js 22 built-in WebSocket
 *
 * Features:
 * - Auto-reconnection with exponential backoff
 * - Message queuing during disconnection
 * - Heartbeat/ping-pong support
 * - Connection state management
 * - Error handling and recovery
 */
export class WebSocketClient extends EventEmitter {
  url;
  options;
  ws =
  /* istanbul ignore next */
  (cov_28kejc2mfq().s[0]++, null);
  messageQueue =
  /* istanbul ignore next */
  (cov_28kejc2mfq().s[1]++, []);
  reconnectTimer =
  /* istanbul ignore next */
  (cov_28kejc2mfq().s[2]++, null);
  heartbeatTimer =
  /* istanbul ignore next */
  (cov_28kejc2mfq().s[3]++, null);
  isConnected =
  /* istanbul ignore next */
  (cov_28kejc2mfq().s[4]++, false);
  reconnectAttempts =
  /* istanbul ignore next */
  (cov_28kejc2mfq().s[5]++, 0);
  constructor(url, options =
  /* istanbul ignore next */
  (cov_28kejc2mfq().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[0]++;
    cov_28kejc2mfq().s[6]++;
    super();
    /* istanbul ignore next */
    cov_28kejc2mfq().s[7]++;
    this.url = url;
    /* istanbul ignore next */
    cov_28kejc2mfq().s[8]++;
    this.options = {
      reconnect: true,
      reconnectInterval: 1000,
      maxReconnectAttempts: 10,
      timeout: 30000,
      ...options
    };
  }
  /** Connect to WebSocket server */
  async connect() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[1]++;
    cov_28kejc2mfq().s[9]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_28kejc2mfq().f[2]++;
      cov_28kejc2mfq().s[10]++;
      try {
        /* istanbul ignore next */
        cov_28kejc2mfq().s[11]++;
        // Use Node.js 22 built-in WebSocket
        this.ws = new WebSocket(this.url);
        const timeout =
        /* istanbul ignore next */
        (cov_28kejc2mfq().s[12]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_28kejc2mfq().f[3]++;
          cov_28kejc2mfq().s[13]++;
          reject(new Error('WebSocket connection timeout'));
        }, this.options.timeout));
        /* istanbul ignore next */
        cov_28kejc2mfq().s[14]++;
        this.ws.onopen = () => {
          /* istanbul ignore next */
          cov_28kejc2mfq().f[4]++;
          cov_28kejc2mfq().s[15]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[16]++;
          this.isConnected = true;
          /* istanbul ignore next */
          cov_28kejc2mfq().s[17]++;
          this.reconnectAttempts = 0;
          /* istanbul ignore next */
          cov_28kejc2mfq().s[18]++;
          this.emit('connected');
          /* istanbul ignore next */
          cov_28kejc2mfq().s[19]++;
          this.startHeartbeat();
          /* istanbul ignore next */
          cov_28kejc2mfq().s[20]++;
          this.flushMessageQueue();
          /* istanbul ignore next */
          cov_28kejc2mfq().s[21]++;
          resolve();
        };
        /* istanbul ignore next */
        cov_28kejc2mfq().s[22]++;
        this.ws.onmessage = event => {
          /* istanbul ignore next */
          cov_28kejc2mfq().f[5]++;
          cov_28kejc2mfq().s[23]++;
          try {
            const data =
            /* istanbul ignore next */
            (cov_28kejc2mfq().s[24]++, JSON.parse(event.data));
            /* istanbul ignore next */
            cov_28kejc2mfq().s[25]++;
            this.emit('message', data);
          } catch {
            /* istanbul ignore next */
            cov_28kejc2mfq().s[26]++;
            this.emit('message', event.data);
          }
        };
        /* istanbul ignore next */
        cov_28kejc2mfq().s[27]++;
        this.ws.onclose = event => {
          /* istanbul ignore next */
          cov_28kejc2mfq().f[6]++;
          cov_28kejc2mfq().s[28]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[29]++;
          this.isConnected = false;
          /* istanbul ignore next */
          cov_28kejc2mfq().s[30]++;
          this.stopHeartbeat();
          /* istanbul ignore next */
          cov_28kejc2mfq().s[31]++;
          this.emit('disconnected', event.code, event.reason);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[32]++;
          if (
          /* istanbul ignore next */
          (cov_28kejc2mfq().b[2][0]++, this.options.reconnect) &&
          /* istanbul ignore next */
          (cov_28kejc2mfq().b[2][1]++, this.reconnectAttempts < this.options.maxReconnectAttempts)) {
            /* istanbul ignore next */
            cov_28kejc2mfq().b[1][0]++;
            cov_28kejc2mfq().s[33]++;
            this.scheduleReconnect();
          } else
          /* istanbul ignore next */
          {
            cov_28kejc2mfq().b[1][1]++;
          }
        };
        /* istanbul ignore next */
        cov_28kejc2mfq().s[34]++;
        this.ws.onerror = error => {
          /* istanbul ignore next */
          cov_28kejc2mfq().f[7]++;
          cov_28kejc2mfq().s[35]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[36]++;
          this.emit('error', error);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[37]++;
          reject(error);
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_28kejc2mfq().s[38]++;
        reject(error);
      }
    });
  }
  /** Disconnect from WebSocket server */
  disconnect() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[8]++;
    cov_28kejc2mfq().s[39]++;
    if (this.reconnectTimer) {
      /* istanbul ignore next */
      cov_28kejc2mfq().b[3][0]++;
      cov_28kejc2mfq().s[40]++;
      clearTimeout(this.reconnectTimer);
      /* istanbul ignore next */
      cov_28kejc2mfq().s[41]++;
      this.reconnectTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_28kejc2mfq().b[3][1]++;
    }
    cov_28kejc2mfq().s[42]++;
    this.stopHeartbeat();
    /* istanbul ignore next */
    cov_28kejc2mfq().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[5][0]++, this.ws) &&
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[5][1]++, this.isConnected)) {
      /* istanbul ignore next */
      cov_28kejc2mfq().b[4][0]++;
      cov_28kejc2mfq().s[44]++;
      this.ws.close();
    } else
    /* istanbul ignore next */
    {
      cov_28kejc2mfq().b[4][1]++;
    }
    cov_28kejc2mfq().s[45]++;
    this.isConnected = false;
  }
  send(data) {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[9]++;
    const message =
    /* istanbul ignore next */
    (cov_28kejc2mfq().s[46]++, typeof data === 'string' ?
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[6][0]++, data) :
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[6][1]++, JSON.stringify(data)));
    /* istanbul ignore next */
    cov_28kejc2mfq().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[8][0]++, this.isConnected) &&
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[8][1]++, this.ws)) {
      /* istanbul ignore next */
      cov_28kejc2mfq().b[7][0]++;
      cov_28kejc2mfq().s[48]++;
      try {
        /* istanbul ignore next */
        cov_28kejc2mfq().s[49]++;
        this.ws.send(message);
      } catch (error) {
        /* istanbul ignore next */
        cov_28kejc2mfq().s[50]++;
        this.emit('error', error);
        /* istanbul ignore next */
        cov_28kejc2mfq().s[51]++;
        this.queueMessage(message);
      }
    } else {
      /* istanbul ignore next */
      cov_28kejc2mfq().b[7][1]++;
      cov_28kejc2mfq().s[52]++;
      this.queueMessage(message);
    }
  }
  /** Queue message for later sending */
  queueMessage(message) {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[10]++;
    cov_28kejc2mfq().s[53]++;
    this.messageQueue.push(message);
    // Limit queue size to prevent memory issues
    /* istanbul ignore next */
    cov_28kejc2mfq().s[54]++;
    if (this.messageQueue.length > 1000) {
      /* istanbul ignore next */
      cov_28kejc2mfq().b[9][0]++;
      cov_28kejc2mfq().s[55]++;
      this.messageQueue.shift();
    } else
    /* istanbul ignore next */
    {
      cov_28kejc2mfq().b[9][1]++;
    }
  }
  /** Send all queued messages */
  flushMessageQueue() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[11]++;
    cov_28kejc2mfq().s[56]++;
    while (
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[10][0]++, this.messageQueue.length > 0) &&
    /* istanbul ignore next */
    (cov_28kejc2mfq().b[10][1]++, this.isConnected)) {
      const message =
      /* istanbul ignore next */
      (cov_28kejc2mfq().s[57]++, this.messageQueue.shift());
      /* istanbul ignore next */
      cov_28kejc2mfq().s[58]++;
      if (message) {
        /* istanbul ignore next */
        cov_28kejc2mfq().b[11][0]++;
        cov_28kejc2mfq().s[59]++;
        try {
          /* istanbul ignore next */
          cov_28kejc2mfq().s[60]++;
          this.ws.send(message);
        } catch (error) {
          /* istanbul ignore next */
          cov_28kejc2mfq().s[61]++;
          this.emit('error', error);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[62]++;
          this.messageQueue.unshift(message);
          /* istanbul ignore next */
          cov_28kejc2mfq().s[63]++;
          break;
        }
      } else
      /* istanbul ignore next */
      {
        cov_28kejc2mfq().b[11][1]++;
      }
    }
  }
  /** Schedule reconnection attempt */
  scheduleReconnect() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[12]++;
    const delay =
    /* istanbul ignore next */
    (cov_28kejc2mfq().s[64]++, this.options.reconnectInterval * 2 ** this.reconnectAttempts);
    /* istanbul ignore next */
    cov_28kejc2mfq().s[65]++;
    this.reconnectTimer = setTimeout(async () => {
      /* istanbul ignore next */
      cov_28kejc2mfq().f[13]++;
      cov_28kejc2mfq().s[66]++;
      this.reconnectAttempts++;
      /* istanbul ignore next */
      cov_28kejc2mfq().s[67]++;
      this.emit('reconnecting', this.reconnectAttempts);
      /* istanbul ignore next */
      cov_28kejc2mfq().s[68]++;
      try {
        /* istanbul ignore next */
        cov_28kejc2mfq().s[69]++;
        await this.connect();
      } catch (error) {
        /* istanbul ignore next */
        cov_28kejc2mfq().s[70]++;
        this.emit('reconnectError', error);
        /* istanbul ignore next */
        cov_28kejc2mfq().s[71]++;
        if (this.reconnectAttempts < this.options.maxReconnectAttempts) {
          /* istanbul ignore next */
          cov_28kejc2mfq().b[12][0]++;
          cov_28kejc2mfq().s[72]++;
          this.scheduleReconnect();
        } else {
          /* istanbul ignore next */
          cov_28kejc2mfq().b[12][1]++;
          cov_28kejc2mfq().s[73]++;
          this.emit('reconnectFailed');
        }
      }
    }, delay);
  }
  /** Start heartbeat mechanism */
  startHeartbeat() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[14]++;
    cov_28kejc2mfq().s[74]++;
    this.heartbeatTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_28kejc2mfq().f[15]++;
      cov_28kejc2mfq().s[75]++;
      if (
      /* istanbul ignore next */
      (cov_28kejc2mfq().b[14][0]++, this.isConnected) &&
      /* istanbul ignore next */
      (cov_28kejc2mfq().b[14][1]++, this.ws)) {
        /* istanbul ignore next */
        cov_28kejc2mfq().b[13][0]++;
        cov_28kejc2mfq().s[76]++;
        try {
          /* istanbul ignore next */
          cov_28kejc2mfq().s[77]++;
          // Note: WebSocket ping might not be available, use a message instead
          this.ws.send(JSON.stringify({
            type: 'ping'
          }));
        } catch (error) {
          /* istanbul ignore next */
          cov_28kejc2mfq().s[78]++;
          this.emit('error', error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_28kejc2mfq().b[13][1]++;
      }
    }, 30000); // 30 seconds
  }
  /** Stop heartbeat mechanism */
  stopHeartbeat() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[16]++;
    cov_28kejc2mfq().s[79]++;
    if (this.heartbeatTimer) {
      /* istanbul ignore next */
      cov_28kejc2mfq().b[15][0]++;
      cov_28kejc2mfq().s[80]++;
      clearInterval(this.heartbeatTimer);
      /* istanbul ignore next */
      cov_28kejc2mfq().s[81]++;
      this.heartbeatTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_28kejc2mfq().b[15][1]++;
    }
  }
  /** Get connection status */
  get connected() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[17]++;
    cov_28kejc2mfq().s[82]++;
    return this.isConnected;
  }
  /** Get connection URL */
  get connectionUrl() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[18]++;
    cov_28kejc2mfq().s[83]++;
    return this.url;
  }
  /** Get queued message count */
  get queuedMessages() {
    /* istanbul ignore next */
    cov_28kejc2mfq().f[19]++;
    cov_28kejc2mfq().s[84]++;
    return this.messageQueue.length;
  }
}
// Default export for convenience
export default WebSocketClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,