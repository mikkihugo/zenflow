version: '3.8'

services:
  backend:
    build: .
    container_name: ruv-swarm-backend
    ports:
      - "3000:3000"     # API port
      - "9090:9090"     # Metrics port
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=/app/data/database.sqlite
      - JWT_SECRET=development-secret-change-in-production
      - JWT_EXPIRES_IN=7d
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
      - LOG_LEVEL=info
      - LOG_DIR=/app/logs
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
      - RUV_SWARM_ENABLED=true
    volumes:
      - ./data:/app/data         # Persist database
      - ./logs:/app/logs         # Persist logs
      - ./src:/app/src           # Hot reload in development
    networks:
      - ruv-swarm-network
    restart: unless-stopped

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ruv-swarm-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - ruv-swarm-network
    restart: unless-stopped

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ruv-swarm-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - ruv-swarm-network
    restart: unless-stopped

networks:
  ruv-swarm-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: