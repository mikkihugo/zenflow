{"numTotalTestSuites":15,"numPassedTestSuites":15,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":28,"numPassedTests":28,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1755386015949,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["BootstrapFinetune","Constructor and Configuration"],"fullName":"BootstrapFinetune Constructor and Configuration should initialize with default configuration","status":"passed","title":"should initialize with default configuration","duration":8.642328000000134,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Constructor and Configuration"],"fullName":"BootstrapFinetune Constructor and Configuration should merge custom configuration with defaults","status":"passed","title":"should merge custom configuration with defaults","duration":8.581637,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Constructor and Configuration"],"fullName":"BootstrapFinetune Constructor and Configuration should handle train_kwargs configuration","status":"passed","title":"should handle train_kwargs configuration","duration":8.52853099999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","LM Validation"],"fullName":"BootstrapFinetune LM Validation should validate that all predictors have LMs assigned","status":"passed","title":"should validate that all predictors have LMs assigned","duration":10.325171999999839,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","LM Validation"],"fullName":"BootstrapFinetune LM Validation should accept modules with properly assigned LMs","status":"passed","title":"should accept modules with properly assigned LMs","duration":13.244801000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","LM Validation"],"fullName":"BootstrapFinetune LM Validation should handle multiple predictors with different LMs","status":"passed","title":"should handle multiple predictors with different LMs","duration":8.18754100000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Fine-tuning Process"],"fullName":"BootstrapFinetune Fine-tuning Process should execute fine-tuning jobs successfully","status":"passed","title":"should execute fine-tuning jobs successfully","duration":7.61649999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Fine-tuning Process"],"fullName":"BootstrapFinetune Fine-tuning Process should update predictors with fine-tuned LMs","status":"passed","title":"should update predictors with fine-tuned LMs","duration":7.520837000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Fine-tuning Process"],"fullName":"BootstrapFinetune Fine-tuning Process should handle multitask training correctly","status":"passed","title":"should handle multitask training correctly","duration":6.934346999999889,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Fine-tuning Process"],"fullName":"BootstrapFinetune Fine-tuning Process should respect exclude_demos setting","status":"passed","title":"should respect exclude_demos setting","duration":6.900646000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Thread Management"],"fullName":"BootstrapFinetune Thread Management should validate thread count against job count","status":"passed","title":"should validate thread count against job count","duration":6.860645000000204,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Thread Management"],"fullName":"BootstrapFinetune Thread Management should handle appropriate thread count","status":"passed","title":"should handle appropriate thread count","duration":5.173125000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Error Handling"],"fullName":"BootstrapFinetune Error Handling should handle fine-tuning failures gracefully","status":"passed","title":"should handle fine-tuning failures gracefully","duration":6.476237999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Error Handling"],"fullName":"BootstrapFinetune Error Handling should handle structural validation between student and teacher","status":"passed","title":"should handle structural validation between student and teacher","duration":2.9937380000001212,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Error Handling"],"fullName":"BootstrapFinetune Error Handling should handle trace data collection errors","status":"passed","title":"should handle trace data collection errors","duration":3.8290259999998852,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Teacher Model Handling"],"fullName":"BootstrapFinetune Teacher Model Handling should use student as teacher when none provided","status":"passed","title":"should use student as teacher when none provided","duration":3.7172519999999167,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Teacher Model Handling"],"fullName":"BootstrapFinetune Teacher Model Handling should use provided teacher model","status":"passed","title":"should use provided teacher model","duration":3.6418939999998656,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Teacher Model Handling"],"fullName":"BootstrapFinetune Teacher Model Handling should handle multiple teacher models","status":"passed","title":"should handle multiple teacher models","duration":5.0209060000001955,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Data Format and Adapter Integration"],"fullName":"BootstrapFinetune Data Format and Adapter Integration should infer correct data format","status":"passed","title":"should infer correct data format","duration":3.488511000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["BootstrapFinetune","Data Format and Adapter Integration"],"fullName":"BootstrapFinetune Data Format and Adapter Integration should handle custom adapter configuration","status":"passed","title":"should handle custom adapter configuration","duration":1.875063000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["TrainDataFormat"],"fullName":"TrainDataFormat should have correct enum values","status":"passed","title":"should have correct enum values","duration":8.595731999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["LMCacheManager"],"fullName":"LMCacheManager should disable and restore LM cache","status":"passed","title":"should disable and restore LM cache","duration":8.316964999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["LMCacheManager"],"fullName":"LMCacheManager should handle predictors without LMs","status":"passed","title":"should handle predictors without LMs","duration":8.270245000000159,"failureMessages":[],"meta":{}},{"ancestorTitles":["Utility Functions","allPredictorsHaveLMs"],"fullName":"Utility Functions allPredictorsHaveLMs should return true when all predictors have LMs","status":"passed","title":"should return true when all predictors have LMs","duration":0.9839289999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["Utility Functions","allPredictorsHaveLMs"],"fullName":"Utility Functions allPredictorsHaveLMs should return false when any predictor lacks LM","status":"passed","title":"should return false when any predictor lacks LM","duration":1.6933450000001358,"failureMessages":[],"meta":{}},{"ancestorTitles":["Utility Functions","copyProgramWithLMs"],"fullName":"Utility Functions copyProgramWithLMs should create copy preserving LMs","status":"passed","title":"should create copy preserving LMs","duration":1.7559470000001056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Utility Functions","getUniqueLMs"],"fullName":"Utility Functions getUniqueLMs should return unique LMs from program","status":"passed","title":"should return unique LMs from program","duration":1.797521000000188,"failureMessages":[],"meta":{}},{"ancestorTitles":["Utility Functions","getUniqueLMs"],"fullName":"Utility Functions getUniqueLMs should handle predictors without LMs","status":"passed","title":"should handle predictors without LMs","duration":1.7832570000000487,"failureMessages":[],"meta":{}}],"startTime":1755386016994,"endTime":1755386017018.7976,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/lib/dspy/teleprompters/bootstrap-finetune.test.ts"}]}