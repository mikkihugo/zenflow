{"numTotalTestSuites":238,"numPassedTestSuites":70,"numFailedTestSuites":168,"numPendingTestSuites":0,"numTotalTests":316,"numPassedTests":205,"numFailedTests":100,"numPendingTests":11,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1754765017685,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Simple Test"],"fullName":"Simple Test should pass","status":"passed","title":"should pass","duration":1.888517999999749,"failureMessages":[],"meta":{}}],"startTime":1754765060450,"endTime":1754765060451.8884,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/basic-functionality.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/claude-zen-tdd-architecture.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../config/url-builder\" from \"src/interfaces/services/adapters/integration-service-adapter.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration-service-adapter.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/tdd-london-swarm.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/coordination/hive-knowledge-bridge.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/coordination/hive-knowledge-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/coordination/hive-knowledge-performance.test.ts"},{"assertionResults":[{"ancestorTitles":["Database Adapter Interface Consistency"],"fullName":"Database Adapter Interface Consistency interfaces are properly defined and can be imported","status":"passed","title":"interfaces are properly defined and can be imported","duration":1.8975330000030226,"failureMessages":[],"meta":{}},{"ancestorTitles":["Database Adapter Interface Consistency"],"fullName":"Database Adapter Interface Consistency validates interface consistency through TypeScript compilation","status":"passed","title":"validates interface consistency through TypeScript compilation","duration":1.9158349999997881,"failureMessages":[],"meta":{}}],"startTime":1754765058266,"endTime":1754765058269.9158,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/database/adapter-interface-consistency.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/database/document-manager-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../src/di/index\" from \"src/__tests__/di-integration/comprehensive-di.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/di-integration/comprehensive-di.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/di-integration/issue-63-comprehensive.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../database/core/database-coordinator\" from \"src/__tests__/e2e/complete-product-flow-sparc.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/complete-product-flow-sparc.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../coordination/mcp/mcp-server\" from \"src/__tests__/e2e/complete-workflow-automation.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/complete-workflow-automation.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:340:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:341:39: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:342:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:344:8: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/github-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:340:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:341:39: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:342:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:344:8: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/performance-load-testing.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:340:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:341:39: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:342:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:344:8: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/real-time-collaboration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:340:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:341:39: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:342:38: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/core/document-driven-system.ts:344:8: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/simplified-workflow.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/examples/hybrid-tdd-neural-coordination.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/helpers/example-usage.test.ts"},{"assertionResults":[{"ancestorTitles":["Auto-Swarm Integration"],"fullName":"Auto-Swarm Integration should be able to import all required swarm components","status":"failed","title":"should be able to import all required swarm components","duration":22.29174300000159,"failureMessages":["TypeError: __vite_ssr_import_0__.Logger is not a constructor\n    at LoggingConfigurationManager.createLoggerForComponent (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:113:26)\n    at LoggingConfigurationManager.getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:98:25)\n    at getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:210:32)\n    at /home/mhugo/code/claude-code-zen/src/config/logging-config.ts:228:11\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)\n    at VitestExecutor.directRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:381:5)\n    at VitestExecutor.cachedRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:206:14)\n    at VitestExecutor.dependencyRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:259:12)\n    at /home/mhugo/code/claude-code-zen/src/config/manager.ts:1:1\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)"],"meta":{}},{"ancestorTitles":["Auto-Swarm Integration"],"fullName":"Auto-Swarm Integration should be able to create auto-swarm factory with all dependencies","status":"failed","title":"should be able to create auto-swarm factory with all dependencies","duration":1.7346490000054473,"failureMessages":["TypeError: __vite_ssr_import_0__.Logger is not a constructor\n    at LoggingConfigurationManager.createLoggerForComponent (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:113:26)\n    at LoggingConfigurationManager.getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:98:25)\n    at getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:210:32)\n    at /home/mhugo/code/claude-code-zen/src/config/logging-config.ts:228:11\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)\n    at VitestExecutor.directRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:381:5)\n    at VitestExecutor.cachedRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:206:14)\n    at VitestExecutor.dependencyRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:259:12)\n    at /home/mhugo/code/claude-code-zen/src/config/manager.ts:1:1\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)"],"meta":{}}],"startTime":1754765057846,"endTime":1754765057869.7346,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/auto-swarm-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Discover Auto-Swarm Integration"],"fullName":"CLI Discover Auto-Swarm Integration should be able to create auto-swarm infrastructure for CLI integration","status":"failed","title":"should be able to create auto-swarm infrastructure for CLI integration","duration":21.30140599999868,"failureMessages":["TypeError: __vite_ssr_import_0__.Logger is not a constructor\n    at LoggingConfigurationManager.createLoggerForComponent (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:113:26)\n    at LoggingConfigurationManager.getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:98:25)\n    at getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:210:32)\n    at /home/mhugo/code/claude-code-zen/src/config/logging-config.ts:228:11\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)\n    at VitestExecutor.directRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:381:5)\n    at VitestExecutor.cachedRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:206:14)\n    at VitestExecutor.dependencyRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:259:12)\n    at /home/mhugo/code/claude-code-zen/src/config/manager.ts:1:1\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)"],"meta":{}},{"ancestorTitles":["CLI Discover Auto-Swarm Integration"],"fullName":"CLI Discover Auto-Swarm Integration should handle deployment verification","status":"passed","title":"should handle deployment verification","duration":9.91523700000107,"failureMessages":[],"meta":{}}],"startTime":1754765055809,"endTime":1754765055840.9153,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/cli-discover-auto-swarm.test.ts"},{"assertionResults":[{"ancestorTitles":["Complete Auto-Swarm Pipeline Integration"],"fullName":"Complete Auto-Swarm Pipeline Integration should complete the full auto-swarm creation pipeline","status":"failed","title":"should complete the full auto-swarm creation pipeline","duration":123.49820300000283,"failureMessages":["TypeError: __vite_ssr_import_0__.Logger is not a constructor\n    at LoggingConfigurationManager.createLoggerForComponent (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:113:26)\n    at LoggingConfigurationManager.getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:98:25)\n    at getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:210:32)\n    at /home/mhugo/code/claude-code-zen/src/config/logging-config.ts:228:11\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)\n    at VitestExecutor.directRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:381:5)\n    at VitestExecutor.cachedRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:206:14)\n    at VitestExecutor.dependencyRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:259:12)\n    at /home/mhugo/code/claude-code-zen/src/config/manager.ts:1:1\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)"],"meta":{}},{"ancestorTitles":["Complete Auto-Swarm Pipeline Integration"],"fullName":"Complete Auto-Swarm Pipeline Integration should handle error scenarios gracefully","status":"failed","title":"should handle error scenarios gracefully","duration":7.730753999996523,"failureMessages":["TypeError: __vite_ssr_import_0__.Logger is not a constructor\n    at LoggingConfigurationManager.createLoggerForComponent (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:113:26)\n    at LoggingConfigurationManager.getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:98:25)\n    at getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:210:32)\n    at /home/mhugo/code/claude-code-zen/src/config/logging-config.ts:228:11\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)\n    at VitestExecutor.directRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:381:5)\n    at VitestExecutor.cachedRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:206:14)\n    at VitestExecutor.dependencyRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:259:12)\n    at /home/mhugo/code/claude-code-zen/src/config/manager.ts:1:1\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)"],"meta":{}},{"ancestorTitles":["Complete Auto-Swarm Pipeline Integration"],"fullName":"Complete Auto-Swarm Pipeline Integration should validate resource constraints properly","status":"failed","title":"should validate resource constraints properly","duration":1.6556889999992563,"failureMessages":["TypeError: __vite_ssr_import_0__.Logger is not a constructor\n    at LoggingConfigurationManager.createLoggerForComponent (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:113:26)\n    at LoggingConfigurationManager.getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:98:25)\n    at getLogger (/home/mhugo/code/claude-code-zen/src/config/logging-config.ts:210:32)\n    at /home/mhugo/code/claude-code-zen/src/config/logging-config.ts:228:11\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)\n    at VitestExecutor.directRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:381:5)\n    at VitestExecutor.cachedRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:206:14)\n    at VitestExecutor.dependencyRequest (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:259:12)\n    at /home/mhugo/code/claude-code-zen/src/config/manager.ts:1:1\n    at VitestExecutor.runModule (file:///home/mhugo/code/claude-code-zen/node_modules/vite-node/dist/client.mjs:399:5)"],"meta":{}}],"startTime":1754765051615,"endTime":1754765051748.6558,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/complete-auto-swarm-pipeline.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../utils/error-system-integration\" from \"src/__tests__/integration/error-handling-system.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/error-handling-system.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../coordination/mcp/mcp-server\" from \"src/__tests__/integration/mcp-protocol-compliance.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/mcp-protocol-compliance.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/mcp-server-london-tdd.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"coordination/orchestrator\" from \"src/__tests__/integration/orchestrator.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/orchestrator.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../database/core/database-coordinator\" from \"src/__tests__/integration/product-flow-sparc-integration.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/product-flow-sparc-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/web-mcp-integration-london-tdd.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/websocket-client-london-tdd.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/websocket-realtime-coordination.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/websocket-swarm-coordination.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 1 error:\n/home/mhugo/code/claude-code-zen/src/integration/adapter-system.ts:703:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/patterns/adapter-pattern.test.ts"},{"assertionResults":[{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","SwarmInitCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) SwarmInitCommand should execute swarm initialization successfully","status":"failed","title":"should execute swarm initialization successfully","duration":15.616692000000512,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:92:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","SwarmInitCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) SwarmInitCommand should handle swarm initialization failures gracefully","status":"failed","title":"should handle swarm initialization failures gracefully","duration":1.75095599999986,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:116:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","SwarmInitCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) SwarmInitCommand should support undo operation for swarm initialization","status":"failed","title":"should support undo operation for swarm initialization","duration":1.335602000000108,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:148:45\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","SwarmInitCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) SwarmInitCommand should calculate resource usage accurately","status":"failed","title":"should calculate resource usage accurately","duration":1.4603139999999257,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:177:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","AgentSpawnCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) AgentSpawnCommand should spawn agents with correct configuration","status":"failed","title":"should spawn agents with correct configuration","duration":1.6593519999996715,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'healthy')\n    at AgentSpawnCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:303:22)\n    at AgentSpawnCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:312:24)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:216:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","AgentSpawnCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) AgentSpawnCommand should handle agent spawn failures with proper error context","status":"failed","title":"should handle agent spawn failures with proper error context","duration":1.1280189999997674,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'healthy')\n    at AgentSpawnCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:303:22)\n    at AgentSpawnCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:312:24)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:240:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","AgentSpawnCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) AgentSpawnCommand should support batch agent spawning","status":"failed","title":"should support batch agent spawning","duration":1.5028819999997722,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'healthy')\n    at AgentSpawnCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:303:22)\n    at AgentSpawnCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:312:24)\n    at async Promise.all (index 0)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:284:25\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","TaskOrchestrationCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) TaskOrchestrationCommand should orchestrate complex tasks across multiple agents","status":"failed","title":"should orchestrate complex tasks across multiple agents","duration":7.2493249999997715,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:330:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","TaskOrchestrationCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) TaskOrchestrationCommand should handle task orchestration with dependency resolution","status":"failed","title":"should handle task orchestration with dependency resolution","duration":1.8807170000000042,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:372:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","TaskOrchestrationCommand"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) TaskOrchestrationCommand should calculate accurate performance metrics for orchestration","status":"failed","title":"should calculate accurate performance metrics for orchestration","duration":1.7118769999997312,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:414:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","Command Validation and Security"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) Command Validation and Security should validate command permissions before execution","status":"failed","title":"should validate command permissions before execution","duration":1.2395120000001043,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:443:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","Command Validation and Security"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) Command Validation and Security should validate resource constraints before command execution","status":"failed","title":"should validate resource constraints before command execution","duration":1.2649120000005496,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:475:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","Command Validation and Security"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) Command Validation and Security should sanitize command parameters for security","status":"failed","title":"should sanitize command parameters for security","duration":1.3203919999996288,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:516:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","Command Performance and Optimization"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) Command Performance and Optimization should optimize command execution based on system resources","status":"failed","title":"should optimize command execution based on system resources","duration":1.6335760000001756,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:569:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Execution Algorithms (Classical TDD)","Command Performance and Optimization"],"fullName":"Command Pattern Implementation Command Execution Algorithms (Classical TDD) Command Performance and Optimization should handle command timeout and cancellation gracefully","status":"failed","title":"should handle command timeout and cancellation gracefully","duration":1.1681029999999737,"failureMessages":["TypeError: this.swarmManager.isHealthy is not a function\n    at SwarmInitCommand.validate (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:143:28)\n    at SwarmInitCommand.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:171:35)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:594:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should execute commands in queue order","status":"failed","title":"should execute commands in queue order","duration":1.4454169999999067,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:642:41\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should maintain command history","status":"failed","title":"should maintain command history","duration":1.210559999999532,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:664:26\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should handle command execution failures","status":"failed","title":"should handle command execution failures","duration":1.0516200000001845,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:682:41\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should support undo operations","status":"failed","title":"should support undo operations","duration":1.1048070000006192,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:715:26\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should validate commands before execution","status":"failed","title":"should validate commands before execution","duration":1.0905359999997017,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:732:41\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should handle concurrent command execution","status":"failed","title":"should handle concurrent command execution","duration":2.267786000000342,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:755:76\n    at Array.map (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:755:50\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Queue Management (London TDD)"],"fullName":"Command Pattern Implementation Command Queue Management (London TDD) should provide command queue metrics","status":"failed","title":"should provide command queue metrics","duration":1.9706569999998464,"failureMessages":["TypeError: command.getCommandType is not a function\n    at /home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:511:26\n    at new Promise (<anonymous>)\n    at MCPCommandQueue.execute (/home/mhugo/code/claude-code-zen/src/interfaces/mcp/command-system.ts:508:12)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:791:60\n    at Array.map (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:791:34\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Transaction Support (Hybrid TDD)"],"fullName":"Command Pattern Implementation Transaction Support (Hybrid TDD) should execute transaction successfully when all commands succeed","status":"failed","title":"should execute transaction successfully when all commands succeed","duration":12.821117999999842,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:889:47\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Transaction Support (Hybrid TDD)"],"fullName":"Command Pattern Implementation Transaction Support (Hybrid TDD) should rollback transaction when any command fails","status":"failed","title":"should rollback transaction when any command fails","duration":1.5446840000004158,"failureMessages":["TypeError: mockSwarmCommand.getId is not a function\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:932:37\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Transaction Support (Hybrid TDD)"],"fullName":"Command Pattern Implementation Transaction Support (Hybrid TDD) should handle nested transactions correctly","status":"failed","title":"should handle nested transactions correctly","duration":11.237828000000263,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:1006:53\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Factory and Utilities (Classical TDD)"],"fullName":"Command Pattern Implementation Command Factory and Utilities (Classical TDD) should create commands with correct types and metadata","status":"failed","title":"should create commands with correct types and metadata","duration":0.9150869999994029,"failureMessages":["TypeError: swarmCommand.getType is not a function\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:1064:27\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Factory and Utilities (Classical TDD)"],"fullName":"Command Pattern Implementation Command Factory and Utilities (Classical TDD) should validate command factory inputs","status":"failed","title":"should validate command factory inputs","duration":3.4456249999993815,"failureMessages":["AssertionError: expected [Function] to throw an error\n    at Proxy.<anonymous> (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Proxy.<anonymous> (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///home/mhugo/code/claude-code-zen/node_modules/chai/chai.js:1706:25)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:1085:10\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Factory and Utilities (Classical TDD)"],"fullName":"Command Pattern Implementation Command Factory and Utilities (Classical TDD) should support command serialization and deserialization","status":"failed","title":"should support command serialization and deserialization","duration":1.0493870000000243,"failureMessages":["TypeError: __vite_ssr_import_0__.CommandFactory.serializeCommand is not a function\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:1114:41\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Factory and Utilities (Classical TDD)"],"fullName":"Command Pattern Implementation Command Factory and Utilities (Classical TDD) should generate unique command IDs","status":"failed","title":"should generate unique command IDs","duration":0.8426269999999931,"failureMessages":["TypeError: command.getId is not a function\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:1139:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command Factory and Utilities (Classical TDD)"],"fullName":"Command Pattern Implementation Command Factory and Utilities (Classical TDD) should calculate command complexity correctly","status":"failed","title":"should calculate command complexity correctly","duration":0.9318700000003446,"failureMessages":["TypeError: simpleCommand.getMetadata is not a function\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts:1173:44\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command System Integration (Hybrid TDD)"],"fullName":"Command Pattern Implementation Command System Integration (Hybrid TDD) should integrate with event system for command lifecycle notifications","status":"passed","title":"should integrate with event system for command lifecycle notifications","duration":0.44961400000011054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command System Integration (Hybrid TDD)"],"fullName":"Command Pattern Implementation Command System Integration (Hybrid TDD) should integrate with facade pattern for simplified command execution","status":"passed","title":"should integrate with facade pattern for simplified command execution","duration":0.2867519999999786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Command Pattern Implementation","Command System Integration (Hybrid TDD)"],"fullName":"Command Pattern Implementation Command System Integration (Hybrid TDD) should support protocol adaptation through adapter pattern","status":"passed","title":"should support protocol adaptation through adapter pattern","duration":0.27203000000008615,"failureMessages":[],"meta":{}}],"startTime":1754765022016,"endTime":1754765022104.4497,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/patterns/command-pattern.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/patterns/composite-pattern.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/patterns/facade-pattern.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/patterns/observer-pattern.test.ts"},{"assertionResults":[{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","MeshStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) MeshStrategy should create full mesh connections for all agents","status":"passed","title":"should create full mesh connections for all agents","duration":5.800995000001421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","MeshStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) MeshStrategy should calculate performance metrics accurately","status":"passed","title":"should calculate performance metrics accurately","duration":0.6911489999984042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","MeshStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) MeshStrategy should have appropriate latency for mesh topology","status":"passed","title":"should have appropriate latency for mesh topology","duration":0.45046800000272924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","MeshStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) MeshStrategy should generate recommendations for large swarms","status":"passed","title":"should generate recommendations for large swarms","duration":0.6545909999986179,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","HierarchicalStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) HierarchicalStrategy should create hierarchical leadership structure","status":"failed","title":"should create hierarchical leadership structure","duration":9.658194999999978,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at HierarchicalStrategy.validateContext (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:243:22)\n    at HierarchicalStrategy.coordinate (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:214:15)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:107:39\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","HierarchicalStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) HierarchicalStrategy should select leaders based on capabilities","status":"failed","title":"should select leaders based on capabilities","duration":1.1317820000003849,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at HierarchicalStrategy.validateContext (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:243:22)\n    at HierarchicalStrategy.coordinate (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:214:15)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:118:39\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","HierarchicalStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) HierarchicalStrategy should have latency proportional to hierarchy depth","status":"failed","title":"should have latency proportional to hierarchy depth","duration":1.1373439999988477,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at HierarchicalStrategy.validateContext (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:243:22)\n    at HierarchicalStrategy.coordinate (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:214:15)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:129:39\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","RingStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) RingStrategy should create circular connections","status":"passed","title":"should create circular connections","duration":1.3646849999968254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","RingStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) RingStrategy should have latency proportional to ring size","status":"passed","title":"should have latency proportional to ring size","duration":0.5756650000002992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","StarStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) StarStrategy should select hub based on capabilities","status":"passed","title":"should select hub based on capabilities","duration":1.358883999997488,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","StarStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) StarStrategy should create star topology connections","status":"passed","title":"should create star topology connections","duration":1.6264799999989918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Algorithms (Classical TDD)","StarStrategy"],"fullName":"Strategy Pattern Implementation Strategy Algorithms (Classical TDD) StarStrategy should have low latency due to centralized communication","status":"passed","title":"should have low latency due to centralized communication","duration":0.41593700000157696,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Coordination (London TDD)"],"fullName":"Strategy Pattern Implementation Strategy Coordination (London TDD) should delegate coordination to the active strategy","status":"failed","title":"should delegate coordination to the active strategy","duration":2.6132440000001225,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'reliability')\n    at SwarmCoordinator.executeCoordination (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:557:47)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:254:22\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Coordination (London TDD)"],"fullName":"Strategy Pattern Implementation Strategy Coordination (London TDD) should switch strategies correctly","status":"passed","title":"should switch strategies correctly","duration":0.8484900000003108,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Coordination (London TDD)"],"fullName":"Strategy Pattern Implementation Strategy Coordination (London TDD) should record coordination history","status":"failed","title":"should record coordination history","duration":1.0755239999998594,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'reliability')\n    at SwarmCoordinator.executeCoordination (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:557:47)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:297:7\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Coordination (London TDD)"],"fullName":"Strategy Pattern Implementation Strategy Coordination (London TDD) should handle coordination failures gracefully","status":"passed","title":"should handle coordination failures gracefully","duration":2.8304489999973157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Coordination (London TDD)"],"fullName":"Strategy Pattern Implementation Strategy Coordination (London TDD) should optimize strategy periodically","status":"failed","title":"should optimize strategy periodically","duration":1.2514789999986533,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'reliability')\n    at SwarmCoordinator.executeCoordination (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:557:47)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:335:9\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","StrategyFactory (Classical TDD)"],"fullName":"Strategy Pattern Implementation StrategyFactory (Classical TDD) should create correct strategy instances","status":"passed","title":"should create correct strategy instances","duration":0.589760999999271,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","StrategyFactory (Classical TDD)"],"fullName":"Strategy Pattern Implementation StrategyFactory (Classical TDD) should throw error for unknown topology","status":"passed","title":"should throw error for unknown topology","duration":0.5062129999969329,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","StrategyFactory (Classical TDD)"],"fullName":"Strategy Pattern Implementation StrategyFactory (Classical TDD) should return all available strategies","status":"passed","title":"should return all available strategies","duration":0.7010469999986526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Auto-Strategy Selection (Hybrid TDD)"],"fullName":"Strategy Pattern Implementation Auto-Strategy Selection (Hybrid TDD) should select optimal strategy based on agent count and context","status":"failed","title":"should select optimal strategy based on agent count and context","duration":4.986818000001222,"failureMessages":["AssertionError: expected 'hierarchical' to be 'star' // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:427:52\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Strategy Validation (London TDD)"],"fullName":"Strategy Pattern Implementation Strategy Validation (London TDD) should validate context before coordination","status":"passed","title":"should validate context before coordination","duration":0.6033239999997022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategy Pattern Implementation","Performance Benchmarks (Classical TDD)"],"fullName":"Strategy Pattern Implementation Performance Benchmarks (Classical TDD) should meet performance requirements for different topologies","status":"failed","title":"should meet performance requirements for different topologies","duration":1.1135679999970307,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at HierarchicalStrategy.validateContext (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:243:22)\n    at HierarchicalStrategy.coordinate (/home/mhugo/code/claude-code-zen/src/coordination/swarm/core/strategy.ts:214:15)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts:483:39\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}}],"startTime":1754765039255,"endTime":1754765039300.1135,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/patterns/strategy-pattern.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/performance/swarm-coordination-benchmarks.test.ts"},{"assertionResults":[{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Algorithm Generation"],"fullName":"SPARC Pseudocode Engine Integration Tests Algorithm Generation should generate algorithms from specifications","status":"passed","title":"should generate algorithms from specifications","duration":3.2032210000033956,"failureMessages":[],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Algorithm Generation"],"fullName":"SPARC Pseudocode Engine Integration Tests Algorithm Generation should generate domain-specific algorithms for swarm coordination","status":"failed","title":"should generate domain-specific algorithms for swarm coordination","duration":11.282595999997284,"failureMessages":["AssertionError: expected [ 'Task Distribution' ] to include 'AgentRegistrationAlgorithm'\n    at Proxy.<anonymous> (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/expect/dist/index.js:1196:17)\n    at Proxy.<anonymous> (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///home/mhugo/code/claude-code-zen/node_modules/chai/chai.js:1706:25)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/sparc/pseudocode-engine.test.ts:93:30\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Algorithm Generation"],"fullName":"SPARC Pseudocode Engine Integration Tests Algorithm Generation should generate domain-specific algorithms for neural networks","status":"failed","title":"should generate domain-specific algorithms for neural networks","duration":1.2927180000006047,"failureMessages":["AssertionError: expected [ 'Neural Training' ] to include 'ForwardPropagationAlgorithm'\n    at Proxy.<anonymous> (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/expect/dist/index.js:1196:17)\n    at Proxy.<anonymous> (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///home/mhugo/code/claude-code-zen/node_modules/chai/chai.js:1706:25)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/sparc/pseudocode-engine.test.ts:128:30\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Data Structure Design"],"fullName":"SPARC Pseudocode Engine Integration Tests Data Structure Design should design data structures from requirements","status":"passed","title":"should design data structures from requirements","duration":0.6977020000012999,"failureMessages":[],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Control Flow Mapping"],"fullName":"SPARC Pseudocode Engine Integration Tests Control Flow Mapping should map control flows from algorithms","status":"passed","title":"should map control flows from algorithms","duration":0.8183570000001055,"failureMessages":[],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Algorithm Validation"],"fullName":"SPARC Pseudocode Engine Integration Tests Algorithm Validation should validate pseudocode logic","status":"passed","title":"should validate pseudocode logic","duration":0.5933989999975893,"failureMessages":[],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Complete Pseudocode Generation"],"fullName":"SPARC Pseudocode Engine Integration Tests Complete Pseudocode Generation should generate complete pseudocode structure from specification","status":"passed","title":"should generate complete pseudocode structure from specification","duration":2.4139030000005732,"failureMessages":[],"meta":{}},{"ancestorTitles":["SPARC Pseudocode Engine Integration Tests","Integration with SPARC Phases"],"fullName":"SPARC Pseudocode Engine Integration Tests Integration with SPARC Phases should integrate properly with Phase 1 specifications","status":"passed","title":"should integrate properly with Phase 1 specifications","duration":0.7918330000029528,"failureMessages":[],"meta":{}}],"startTime":1754765048550,"endTime":1754765048572.7917,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/sparc/pseudocode-engine.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/sparc/sparc-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/basic-functionality.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/product-flow-sparc-unit.test.ts"},{"assertionResults":[{"ancestorTitles":["Agent System Gap Analysis","New Agent Types"],"fullName":"Agent System Gap Analysis New Agent Types should include new performance optimization agents","status":"passed","title":"should include new performance optimization agents","duration":3.493132000003243,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","New Agent Types"],"fullName":"Agent System Gap Analysis New Agent Types should include new migration planning agents","status":"passed","title":"should include new migration planning agents","duration":0.7770709999967949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","New Agent Types"],"fullName":"Agent System Gap Analysis New Agent Types should include enhanced SPARC quality agents","status":"passed","title":"should include enhanced SPARC quality agents","duration":0.6249229999957606,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","New Agent Types"],"fullName":"Agent System Gap Analysis New Agent Types should include UI/UX enhancement agents","status":"passed","title":"should include UI/UX enhancement agents","duration":0.6198349999976926,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","New Agent Types"],"fullName":"Agent System Gap Analysis New Agent Types should have valid agent type definitions","status":"passed","title":"should have valid agent type definitions","duration":1.7107519999990473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Gap Analysis Functionality"],"fullName":"Agent System Gap Analysis Gap Analysis Functionality should perform comprehensive gap analysis","status":"passed","title":"should perform comprehensive gap analysis","duration":1.2840649999998277,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Gap Analysis Functionality"],"fullName":"Agent System Gap Analysis Gap Analysis Functionality should show our advantages in key categories","status":"passed","title":"should show our advantages in key categories","duration":0.5295140000016545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Gap Analysis Functionality"],"fullName":"Agent System Gap Analysis Gap Analysis Functionality should identify strategic missing capabilities","status":"passed","title":"should identify strategic missing capabilities","duration":0.5150480000011157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Gap Analysis Functionality"],"fullName":"Agent System Gap Analysis Gap Analysis Functionality should generate comprehensive comparison report","status":"passed","title":"should generate comprehensive comparison report","duration":1.0771260000037728,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Auto-Assignment Capabilities Audit"],"fullName":"Agent System Gap Analysis Auto-Assignment Capabilities Audit should audit current auto-assignment features","status":"passed","title":"should audit current auto-assignment features","duration":0.6471439999950235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Auto-Assignment Capabilities Audit"],"fullName":"Agent System Gap Analysis Auto-Assignment Capabilities Audit should identify intelligent selection capabilities","status":"passed","title":"should identify intelligent selection capabilities","duration":0.27578799999901094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Agent Category Structure"],"fullName":"Agent System Gap Analysis Agent Category Structure should have well-organized agent categories","status":"passed","title":"should have well-organized agent categories","duration":1.3311390000017127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Agent Category Structure"],"fullName":"Agent System Gap Analysis Agent Category Structure should have no duplicate agents across categories","status":"passed","title":"should have no duplicate agents across categories","duration":0.2435239999977057,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Agent Category Structure"],"fullName":"Agent System Gap Analysis Agent Category Structure should have reasonable agent distribution","status":"passed","title":"should have reasonable agent distribution","duration":1.5458579999976791,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Performance Benchmarks"],"fullName":"Agent System Gap Analysis Performance Benchmarks should track agent count growth","status":"passed","title":"should track agent count growth","duration":0.4090120000037132,"failureMessages":[],"meta":{}},{"ancestorTitles":["Agent System Gap Analysis","Performance Benchmarks"],"fullName":"Agent System Gap Analysis Performance Benchmarks should measure category coverage","status":"passed","title":"should measure category coverage","duration":0.45709099999658065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Integration with Agent Registry"],"fullName":"Integration with Agent Registry should handle new agent types in selection criteria","status":"passed","title":"should handle new agent types in selection criteria","duration":0.5114259999973001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Integration with Agent Registry"],"fullName":"Integration with Agent Registry should support intelligent agent matching","status":"passed","title":"should support intelligent agent matching","duration":0.5780129999984638,"failureMessages":[],"meta":{}}],"startTime":1754765053768,"endTime":1754765053786.5781,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/coordination/agents/gap-analysis.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Logger is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/coordination/discovery/auto-swarm-factory.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Logger is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/coordination/discovery/progressive-confidence-builder.test.ts"},{"assertionResults":[{"ancestorTitles":["Maestro Steering CLI End-to-End","maestro init-steering command"],"fullName":"Maestro Steering CLI End-to-End maestro init-steering command should create steering document with default content","status":"skipped","title":"should create steering document with default content","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","maestro init-steering command"],"fullName":"Maestro Steering CLI End-to-End maestro init-steering command should create steering document with custom content","status":"skipped","title":"should create steering document with custom content","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","maestro init-steering command"],"fullName":"Maestro Steering CLI End-to-End maestro init-steering command should handle multiple steering document creation","status":"skipped","title":"should handle multiple steering document creation","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","maestro create-spec with steering integration"],"fullName":"Maestro Steering CLI End-to-End maestro create-spec with steering integration should create spec with steering context integration","status":"skipped","title":"should create spec with steering context integration","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","maestro create-spec with steering integration"],"fullName":"Maestro Steering CLI End-to-End maestro create-spec with steering integration should complete full workflow from steering to implementation","status":"skipped","title":"should complete full workflow from steering to implementation","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","CLI error handling and validation"],"fullName":"Maestro Steering CLI End-to-End CLI error handling and validation should handle invalid domain names in steering creation","status":"skipped","title":"should handle invalid domain names in steering creation","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","CLI error handling and validation"],"fullName":"Maestro Steering CLI End-to-End CLI error handling and validation should provide helpful error messages for missing dependencies","status":"skipped","title":"should provide helpful error messages for missing dependencies","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","CLI error handling and validation"],"fullName":"Maestro Steering CLI End-to-End CLI error handling and validation should validate steering document content and structure","status":"skipped","title":"should validate steering document content and structure","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","CLI performance and usability"],"fullName":"Maestro Steering CLI End-to-End CLI performance and usability should complete steering operations within acceptable time","status":"skipped","title":"should complete steering operations within acceptable time","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","CLI performance and usability"],"fullName":"Maestro Steering CLI End-to-End CLI performance and usability should provide clear progress feedback during operations","status":"skipped","title":"should provide clear progress feedback during operations","failureMessages":[],"meta":{}},{"ancestorTitles":["Maestro Steering CLI End-to-End","CLI performance and usability"],"fullName":"Maestro Steering CLI End-to-End CLI performance and usability should handle concurrent CLI operations gracefully","status":"skipped","title":"should handle concurrent CLI operations gracefully","failureMessages":[],"meta":{}}],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/e2e/maestro/steering-cli.test.ts"},{"assertionResults":[{"ancestorTitles":["Kuzu Graph Database Integration","Graph Query Operations"],"fullName":"Kuzu Graph Database Integration Graph Query Operations should execute Cypher queries successfully","status":"passed","title":"should execute Cypher queries successfully","duration":105.4101429999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Query Operations"],"fullName":"Kuzu Graph Database Integration Graph Query Operations should handle parameterized Cypher queries","status":"passed","title":"should handle parameterized Cypher queries","duration":101.84852200000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Query Operations"],"fullName":"Kuzu Graph Database Integration Graph Query Operations should return error for invalid Cypher queries","status":"passed","title":"should return error for invalid Cypher queries","duration":104.84573800000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Query Operations"],"fullName":"Kuzu Graph Database Integration Graph Query Operations should detect and route Cypher queries in regular query endpoint","status":"passed","title":"should detect and route Cypher queries in regular query endpoint","duration":103.07477500000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Schema Operations"],"fullName":"Kuzu Graph Database Integration Graph Schema Operations should retrieve graph schema information","status":"passed","title":"should retrieve graph schema information","duration":87.8209960000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Schema Operations"],"fullName":"Kuzu Graph Database Integration Graph Schema Operations should return error for non-graph adapters","status":"passed","title":"should return error for non-graph adapters","duration":1.1338329999998678,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Analytics"],"fullName":"Kuzu Graph Database Integration Graph Analytics should provide comprehensive graph analytics","status":"passed","title":"should provide comprehensive graph analytics","duration":91.789843999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Analytics"],"fullName":"Kuzu Graph Database Integration Graph Analytics should calculate graph metrics correctly","status":"passed","title":"should calculate graph metrics correctly","duration":87.0873270000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Batch Operations"],"fullName":"Kuzu Graph Database Integration Graph Batch Operations should execute multiple graph operations in batch","status":"passed","title":"should execute multiple graph operations in batch","duration":154.31777500000317,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Batch Operations"],"fullName":"Kuzu Graph Database Integration Graph Batch Operations should handle errors in batch operations with continueOnError","status":"passed","title":"should handle errors in batch operations with continueOnError","duration":152.11019999999553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Cypher Query Detection"],"fullName":"Kuzu Graph Database Integration Cypher Query Detection should detect various Cypher query patterns","status":"passed","title":"should detect various Cypher query patterns","duration":283.16473199999746,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Cypher Query Detection"],"fullName":"Kuzu Graph Database Integration Cypher Query Detection should not route SQL queries to graph adapter","status":"passed","title":"should not route SQL queries to graph adapter","duration":142.0481559999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Database Configuration"],"fullName":"Kuzu Graph Database Integration Graph Database Configuration should recognize Kuzu adapter configuration","status":"passed","title":"should recognize Kuzu adapter configuration","duration":77.03212599999824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Kuzu Graph Database Integration","Graph Database Configuration"],"fullName":"Kuzu Graph Database Integration Graph Database Configuration should include graph-specific configuration in analytics","status":"passed","title":"should include graph-specific configuration in analytics","duration":1.7356630000067526,"failureMessages":[],"meta":{}}],"startTime":1754765051637,"endTime":1754765053133.7356,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/database/kuzu-graph-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/database/lancedb-adapter.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../database/lancedb-interface\" from \"src/__tests__/integration/database/lancedb-integration-validation.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/database/lancedb-integration-validation.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../maestro/maestro-orchestrator\" from \"src/__tests__/integration/maestro/steering-workflow.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/maestro/steering-workflow.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/memory-stores/cache-performance.test.ts"},{"assertionResults":[{"ancestorTitles":["Data Integrity Integration Tests","Data Integrity Utils (Classical School)"],"fullName":"Data Integrity Integration Tests Data Integrity Utils (Classical School) should calculate checksums correctly","status":"passed","title":"should calculate checksums correctly","duration":5.042750000000524,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Data Integrity Utils (Classical School)"],"fullName":"Data Integrity Integration Tests Data Integrity Utils (Classical School) should validate checksums correctly","status":"passed","title":"should validate checksums correctly","duration":0.551315999999133,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Data Integrity Utils (Classical School)"],"fullName":"Data Integrity Integration Tests Data Integrity Utils (Classical School) should detect data corruption accurately","status":"passed","title":"should detect data corruption accurately","duration":1.9602640000011888,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Data Integrity Utils (Classical School)"],"fullName":"Data Integrity Integration Tests Data Integrity Utils (Classical School) should attempt data repair using different strategies","status":"passed","title":"should attempt data repair using different strategies","duration":1.3565940000007686,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should store data with integrity metadata","status":"passed","title":"should store data with integrity metadata","duration":1.356222999998863,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should validate data integrity on retrieval","status":"passed","title":"should validate data integrity on retrieval","duration":0.947809999999663,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should detect and handle corruption","status":"passed","title":"should detect and handle corruption","duration":2.6384299999990617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should attempt automatic repair when enabled","status":"passed","title":"should attempt automatic repair when enabled","duration":0.8279570000013337,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should handle version tracking","status":"passed","title":"should handle version tracking","duration":2.15019299999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should validate all records in bulk","status":"passed","title":"should validate all records in bulk","duration":1.0214880000003177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Integrity Storage (Classical School)"],"fullName":"Data Integrity Integration Tests Integrity Storage (Classical School) should maintain backup copies for redundancy","status":"passed","title":"should maintain backup copies for redundancy","duration":0.575379999998404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Mock Corruption Scenarios (London School)"],"fullName":"Data Integrity Integration Tests Mock Corruption Scenarios (London School) should simulate storage corruption","status":"passed","title":"should simulate storage corruption","duration":1.0252920000002632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Mock Corruption Scenarios (London School)"],"fullName":"Data Integrity Integration Tests Mock Corruption Scenarios (London School) should simulate retrieval corruption","status":"passed","title":"should simulate retrieval corruption","duration":0.6526090000006661,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Mock Corruption Scenarios (London School)"],"fullName":"Data Integrity Integration Tests Mock Corruption Scenarios (London School) should handle normal operations when corruption is disabled","status":"passed","title":"should handle normal operations when corruption is disabled","duration":0.35694900000089547,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Mock Corruption Scenarios (London School)"],"fullName":"Data Integrity Integration Tests Mock Corruption Scenarios (London School) should track operations for verification","status":"passed","title":"should track operations for verification","duration":0.6392519999990327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Event Handling and Monitoring"],"fullName":"Data Integrity Integration Tests Event Handling and Monitoring should emit events for normal operations","status":"passed","title":"should emit events for normal operations","duration":0.9566730000005919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Event Handling and Monitoring"],"fullName":"Data Integrity Integration Tests Event Handling and Monitoring should emit corruption detection events","status":"passed","title":"should emit corruption detection events","duration":0.6219399999990856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Performance Under Corruption"],"fullName":"Data Integrity Integration Tests Performance Under Corruption should benchmark validation performance","status":"passed","title":"should benchmark validation performance","duration":29.559430999999677,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Performance Under Corruption"],"fullName":"Data Integrity Integration Tests Performance Under Corruption should handle mixed corruption scenarios","status":"passed","title":"should handle mixed corruption scenarios","duration":4.5429929999991145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Complex Data Structures"],"fullName":"Data Integrity Integration Tests Complex Data Structures should handle nested object integrity","status":"passed","title":"should handle nested object integrity","duration":1.1146349999999074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Complex Data Structures"],"fullName":"Data Integrity Integration Tests Complex Data Structures should detect subtle nested corruption","status":"passed","title":"should detect subtle nested corruption","duration":0.6553420000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Integrity Integration Tests","Complex Data Structures"],"fullName":"Data Integrity Integration Tests Complex Data Structures should maintain integrity with large datasets","status":"passed","title":"should maintain integrity with large datasets","duration":13.431224999998449,"failureMessages":[],"meta":{}}],"startTime":1754765026130,"endTime":1754765026204.4312,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/memory-stores/data-integrity.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/memory-stores/index.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../database/lancedb-interface\" from \"src/__tests__/integration/memory-stores/lancedb-vector-operations.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/memory-stores/lancedb-vector-operations.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/memory-stores/session-management.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"sqlite3\" from \"src/__tests__/integration/memory-stores/sqlite-persistence.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/integration/memory-stores/sqlite-persistence.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../maestro/maestro-orchestrator\" from \"src/__tests__/performance/maestro/steering-performance.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/performance/maestro/steering-performance.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../src/utils\" from \"src/__tests__/swarm-zen/unit/utils.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/swarm-zen/unit/utils.test.ts"},{"assertionResults":[{"ancestorTitles":["DI System Basic Test"],"fullName":"DI System Basic Test should pass basic test","status":"passed","title":"should pass basic test","duration":2.11323899999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["DI System Basic Test"],"fullName":"DI System Basic Test should be able to import reflect-metadata","status":"passed","title":"should be able to import reflect-metadata","duration":4.60243900000205,"failureMessages":[],"meta":{}},{"ancestorTitles":["DI System Basic Test"],"fullName":"DI System Basic Test should be able to create symbols","status":"passed","title":"should be able to create symbols","duration":0.6514499999975669,"failureMessages":[],"meta":{}},{"ancestorTitles":["DI System Basic Test"],"fullName":"DI System Basic Test should support decorators configuration","status":"passed","title":"should support decorators configuration","duration":0.4037850000022445,"failureMessages":[],"meta":{}}],"startTime":1754765058783,"endTime":1754765058790.6514,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/di/basic.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"getLogger is not a function","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/di/decorators.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"getLogger is not a function","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/di/di-container.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"getLogger is not a function","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/di/integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/events/communication-event-adapter.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../maestro/maestro-orchestrator\" from \"src/__tests__/unit/maestro/steering-documents.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/maestro/steering-documents.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/neural/property-based-tests.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"WasmMemoryOptimizer is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/neural/wasm-gateway.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Logger is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/optimization/performance-optimizer.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../core/interfaces\" from \"src/__tests__/interfaces/events/adapters/monitoring-event-adapter.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/interfaces/events/adapters/monitoring-event-adapter.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../../database/lancedb-interface\" from \"src/__tests__/unit/classical/database-operations/vector-database-performance.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/database-operations/vector-database-performance.test.ts"},{"assertionResults":[{"ancestorTitles":["Domain Splitting - Classical TDD","Domain Analysis Engine"],"fullName":"Domain Splitting - Classical TDD Domain Analysis Engine should analyze domain complexity correctly","status":"failed","title":"should analyze domain complexity correctly","duration":58.813537999998516,"failureMessages":["SyntaxError: Invalid regular expression: /\\b?\\b/g: Nothing to repeat\n    at new RegExp (<anonymous>)\n    at DomainAnalysisEngine.calculateSimpleComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:371:21)\n    at DomainAnalysisEngine.analyzeFile (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:183:25)\n    at async Promise.all (index 0)\n    at DomainAnalysisEngine.analyzeDomainComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:43:26)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts:37:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Domain Analysis Engine"],"fullName":"Domain Splitting - Classical TDD Domain Analysis Engine should categorize files correctly by purpose","status":"failed","title":"should categorize files correctly by purpose","duration":10.504009000000224,"failureMessages":["SyntaxError: Invalid regular expression: /\\b?\\b/g: Nothing to repeat\n    at new RegExp (<anonymous>)\n    at DomainAnalysisEngine.calculateSimpleComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:371:21)\n    at DomainAnalysisEngine.analyzeFile (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:183:25)\n    at async Promise.all (index 0)\n    at DomainAnalysisEngine.analyzeDomainComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:43:26)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts:89:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Domain Analysis Engine"],"fullName":"Domain Splitting - Classical TDD Domain Analysis Engine should build dependency graph correctly","status":"failed","title":"should build dependency graph correctly","duration":8.968061999999918,"failureMessages":["SyntaxError: Invalid regular expression: /\\b?\\b/g: Nothing to repeat\n    at new RegExp (<anonymous>)\n    at DomainAnalysisEngine.calculateSimpleComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:371:21)\n    at DomainAnalysisEngine.analyzeFile (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:183:25)\n    at async Promise.all (index 0)\n    at DomainAnalysisEngine.analyzeDomainComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:43:26)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts:132:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Domain Analysis Engine"],"fullName":"Domain Splitting - Classical TDD Domain Analysis Engine should identify sub-domains from analysis","status":"failed","title":"should identify sub-domains from analysis","duration":22.914794000000256,"failureMessages":["SyntaxError: Invalid regular expression: /\\b?\\b/g: Nothing to repeat\n    at new RegExp (<anonymous>)\n    at DomainAnalysisEngine.calculateSimpleComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:371:21)\n    at DomainAnalysisEngine.analyzeFile (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:183:25)\n    at async Promise.all (index 0)\n    at DomainAnalysisEngine.analyzeDomainComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:43:26)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts:150:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Domain Analysis Engine"],"fullName":"Domain Splitting - Classical TDD Domain Analysis Engine should calculate splitting benefits accurately","status":"passed","title":"should calculate splitting benefits accurately","duration":2.783278999999311,"failureMessages":[],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Neural Domain Splitting Plan"],"fullName":"Domain Splitting - Classical TDD Neural Domain Splitting Plan should have valid structure","status":"passed","title":"should have valid structure","duration":4.279325999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Neural Domain Splitting Plan"],"fullName":"Domain Splitting - Classical TDD Neural Domain Splitting Plan should have proper dependency relationships","status":"passed","title":"should have proper dependency relationships","duration":2.48927299999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","Neural Domain Splitting Plan"],"fullName":"Domain Splitting - Classical TDD Neural Domain Splitting Plan should follow kebab-case naming convention","status":"passed","title":"should follow kebab-case naming convention","duration":1.0849029999990307,"failureMessages":[],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","File Analysis"],"fullName":"Domain Splitting - Classical TDD File Analysis should extract imports and exports correctly","status":"failed","title":"should extract imports and exports correctly","duration":3.2597849999983737,"failureMessages":["SyntaxError: Invalid regular expression: /\\b?\\b/g: Nothing to repeat\n    at new RegExp (<anonymous>)\n    at DomainAnalysisEngine.calculateSimpleComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:371:21)\n    at DomainAnalysisEngine.analyzeFile (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:183:25)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts:253:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Domain Splitting - Classical TDD","File Analysis"],"fullName":"Domain Splitting - Classical TDD File Analysis should calculate complexity correctly","status":"failed","title":"should calculate complexity correctly","duration":2.80667899999753,"failureMessages":["SyntaxError: Invalid regular expression: /\\b?\\b/g: Nothing to repeat\n    at new RegExp (<anonymous>)\n    at DomainAnalysisEngine.calculateSimpleComplexity (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:371:21)\n    at DomainAnalysisEngine.analyzeFile (/home/mhugo/code/claude-code-zen/src/tools/domain-splitting/analyzers/domain-analyzer.ts:183:25)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts:322:30\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}}],"startTime":1754765043687,"endTime":1754765043805.8066,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/domain-splitting/domain-analysis.test.ts"},{"assertionResults":[{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 1: Small Network Training Speed","status":"passed","title":"Benchmark 1: Small Network Training Speed","duration":6.332650999999714,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 2: Medium Network Training Speed","status":"passed","title":"Benchmark 2: Medium Network Training Speed","duration":60.702576000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 3: Large Network Training Speed","status":"passed","title":"Benchmark 3: Large Network Training Speed","duration":407.84639000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 4: Deep Network Training Speed","status":"passed","title":"Benchmark 4: Deep Network Training Speed","duration":46.32814999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 5: Batch Training Performance","status":"passed","title":"Benchmark 5: Batch Training Performance","duration":27.552151999999296,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 6: Online Training Performance","status":"passed","title":"Benchmark 6: Online Training Performance","duration":21.351180999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 7: Regularized Training Performance","status":"failed","title":"Benchmark 7: Regularized Training Performance","duration":105.71160799999961,"failureMessages":["AssertionError: expected 0 to be greater than 0.7\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:176:31\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🏃‍♂️ Training Performance Benchmarks (8 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🏃‍♂️ Training Performance Benchmarks (8 tests) Benchmark 8: Convergence Speed Comparison","status":"passed","title":"Benchmark 8: Convergence Speed Comparison","duration":20.115421999999853,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 9: Single Inference Speed","status":"passed","title":"Benchmark 9: Single Inference Speed","duration":3.3289870000007795,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 10: Batch Inference Speed","status":"passed","title":"Benchmark 10: Batch Inference Speed","duration":20.924152999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 11: Large Batch Inference","status":"passed","title":"Benchmark 11: Large Batch Inference","duration":81.33440000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 12: Deep Network Inference","status":"passed","title":"Benchmark 12: Deep Network Inference","duration":32.67895899999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 13: Concurrent Inference Performance","status":"passed","title":"Benchmark 13: Concurrent Inference Performance","duration":1.8493920000000799,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 14: Memory Efficient Inference","status":"passed","title":"Benchmark 14: Memory Efficient Inference","duration":55.888020000000324,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🎯 Inference Performance Benchmarks (7 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🎯 Inference Performance Benchmarks (7 tests) Benchmark 15: Real-time Inference Latency","status":"passed","title":"Benchmark 15: Real-time Inference Latency","duration":3.0358640000004016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","📊 Scalability Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 📊 Scalability Benchmarks (5 tests) Benchmark 16: Network Size Scaling","status":"passed","title":"Benchmark 16: Network Size Scaling","duration":175.36194999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","📊 Scalability Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 📊 Scalability Benchmarks (5 tests) Benchmark 17: Dataset Size Scaling","status":"passed","title":"Benchmark 17: Dataset Size Scaling","duration":13.782704000000194,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","📊 Scalability Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 📊 Scalability Benchmarks (5 tests) Benchmark 18: Batch Size Optimization","status":"passed","title":"Benchmark 18: Batch Size Optimization","duration":84.50303000000076,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","📊 Scalability Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 📊 Scalability Benchmarks (5 tests) Benchmark 19: Memory Usage Scaling","status":"failed","title":"Benchmark 19: Memory Usage Scaling","duration":111.29603000000043,"failureMessages":["AssertionError: expected -12.895179748535156 to be greater than 0\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:485:36\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:483:21\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","📊 Scalability Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 📊 Scalability Benchmarks (5 tests) Benchmark 20: Concurrent Training Scaling","status":"passed","title":"Benchmark 20: Concurrent Training Scaling","duration":28.358879000000343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🔍 Optimization Algorithm Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🔍 Optimization Algorithm Benchmarks (5 tests) Benchmark 21: SGD vs Adam Performance","status":"failed","title":"Benchmark 21: SGD vs Adam Performance","duration":91.68456400000014,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:537:36\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:536:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🔍 Optimization Algorithm Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🔍 Optimization Algorithm Benchmarks (5 tests) Benchmark 22: Learning Rate Sensitivity","status":"failed","title":"Benchmark 22: Learning Rate Sensitivity","duration":3.017069999999876,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:567:34\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🔍 Optimization Algorithm Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🔍 Optimization Algorithm Benchmarks (5 tests) Benchmark 23: Regularization Impact","status":"failed","title":"Benchmark 23: Regularization Impact","duration":307.66808299999957,"failureMessages":["AssertionError: expected NaN to be greater than 0.5\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:592:33\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts:591:18\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🔍 Optimization Algorithm Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🔍 Optimization Algorithm Benchmarks (5 tests) Benchmark 24: Early Stopping Efficiency","status":"passed","title":"Benchmark 24: Early Stopping Efficiency","duration":12.21798200000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Neural Benchmarking Suite - Classical TDD","🔍 Optimization Algorithm Benchmarks (5 tests)"],"fullName":"Comprehensive Neural Benchmarking Suite - Classical TDD 🔍 Optimization Algorithm Benchmarks (5 tests) Benchmark 25: Cross-Validation Performance","status":"passed","title":"Benchmark 25: Cross-Validation Performance","duration":55.75714700000026,"failureMessages":[],"meta":{}}],"startTime":1754765020989,"endTime":1754765022770.757,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/comprehensive-neural-benchmarks.test.ts"},{"assertionResults":[{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🎮 WebGL GPU Acceleration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🎮 WebGL GPU Acceleration Tests should detect WebGL availability correctly","status":"passed","title":"should detect WebGL availability correctly","duration":104.16042000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🎮 WebGL GPU Acceleration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🎮 WebGL GPU Acceleration Tests should perform WebGL matrix operations correctly","status":"passed","title":"should perform WebGL matrix operations correctly","duration":314.5398240000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🎮 WebGL GPU Acceleration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🎮 WebGL GPU Acceleration Tests should demonstrate WebGL performance improvements","status":"failed","title":"should demonstrate WebGL performance improvements","duration":152.43286100000023,"failureMessages":["AssertionError: expected 46.36981100000048 to be less than or equal to 38.05644400000074\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/gpu-integration.test.ts:253:25\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🎮 WebGL GPU Acceleration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🎮 WebGL GPU Acceleration Tests should handle WebGL context loss gracefully","status":"passed","title":"should handle WebGL context loss gracefully","duration":115.8755170000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🎮 WebGL GPU Acceleration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🎮 WebGL GPU Acceleration Tests should manage WebGL memory efficiently","status":"passed","title":"should manage WebGL memory efficiently","duration":51.813742999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🖥️ CUDA Integration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🖥️ CUDA Integration Tests should detect CUDA availability correctly","status":"passed","title":"should detect CUDA availability correctly","duration":52.738720999999714,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🖥️ CUDA Integration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🖥️ CUDA Integration Tests should perform CUDA computations correctly","status":"passed","title":"should perform CUDA computations correctly","duration":600.4004949999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🖥️ CUDA Integration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🖥️ CUDA Integration Tests should query CUDA device properties correctly","status":"passed","title":"should query CUDA device properties correctly","duration":52.411833999999544,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🖥️ CUDA Integration Tests"],"fullName":"GPU Integration Testing Suite - Classical TDD 🖥️ CUDA Integration Tests should handle CUDA memory operations efficiently","status":"failed","title":"should handle CUDA memory operations efficiently","duration":53.22364000000016,"failureMessages":["AssertionError: expected undefined to be defined\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/gpu-integration.test.ts:387:28\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🔄 CPU Fallback Mechanisms"],"fullName":"GPU Integration Testing Suite - Classical TDD 🔄 CPU Fallback Mechanisms should fallback to CPU when GPU is unavailable","status":"passed","title":"should fallback to CPU when GPU is unavailable","duration":56.48637299999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🔄 CPU Fallback Mechanisms"],"fullName":"GPU Integration Testing Suite - Classical TDD 🔄 CPU Fallback Mechanisms should handle partial GPU failure gracefully","status":"passed","title":"should handle partial GPU failure gracefully","duration":81.26594599999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🔄 CPU Fallback Mechanisms"],"fullName":"GPU Integration Testing Suite - Classical TDD 🔄 CPU Fallback Mechanisms should maintain computational accuracy in fallback modes","status":"passed","title":"should maintain computational accuracy in fallback modes","duration":236.77240900000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🔄 CPU Fallback Mechanisms"],"fullName":"GPU Integration Testing Suite - Classical TDD 🔄 CPU Fallback Mechanisms should handle memory limitations gracefully","status":"passed","title":"should handle memory limitations gracefully","duration":64.727664,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","⚡ GPU vs CPU Performance Comparison"],"fullName":"GPU Integration Testing Suite - Classical TDD ⚡ GPU vs CPU Performance Comparison should demonstrate 5x+ speedup with GPU acceleration","status":"passed","title":"should demonstrate 5x+ speedup with GPU acceleration","duration":1474.5923279999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","⚡ GPU vs CPU Performance Comparison"],"fullName":"GPU Integration Testing Suite - Classical TDD ⚡ GPU vs CPU Performance Comparison should scale performance with problem size","status":"failed","title":"should scale performance with problem size","duration":693.4722220000003,"failureMessages":["AssertionError: expected 0.003049533983471686 to be greater than or equal to 0.0038185352365032476\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/gpu-integration.test.ts:651:31\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","⚡ GPU vs CPU Performance Comparison"],"fullName":"GPU Integration Testing Suite - Classical TDD ⚡ GPU vs CPU Performance Comparison should maintain performance under concurrent workloads","status":"passed","title":"should maintain performance under concurrent workloads","duration":100.79624800000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🧠 Neural Network GPU Acceleration"],"fullName":"GPU Integration Testing Suite - Classical TDD 🧠 Neural Network GPU Acceleration should accelerate neural network training with GPU","status":"failed","title":"should accelerate neural network training with GPU","duration":2518.6831509999993,"failureMessages":["AssertionError: expected NaN to be less than 1\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/gpu-integration.test.ts:725:36\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["GPU Integration Testing Suite - Classical TDD","🧠 Neural Network GPU Acceleration"],"fullName":"GPU Integration Testing Suite - Classical TDD 🧠 Neural Network GPU Acceleration should handle large batch neural network inference on GPU","status":"passed","title":"should handle large batch neural network inference on GPU","duration":175.63797800000066,"failureMessages":[],"meta":{}}],"startTime":1754765023965,"endTime":1754765030867.638,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/gpu-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🔄 Backpropagation Algorithm Validation"],"fullName":"Advanced Neural Algorithms - Classical TDD 🔄 Backpropagation Algorithm Validation should compute backpropagation gradients correctly","status":"failed","title":"should compute backpropagation gradients correctly","duration":16.32530100000008,"failureMessages":["AssertionError: expected 0.00043502840026908714 to be less than 0.00001\n    at expectGradientsNearlyEqual (/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:817:22)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:54:7\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🔄 Backpropagation Algorithm Validation"],"fullName":"Advanced Neural Algorithms - Classical TDD 🔄 Backpropagation Algorithm Validation should handle vanishing gradient problem in deep networks","status":"passed","title":"should handle vanishing gradient problem in deep networks","duration":40.185204999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🔄 Backpropagation Algorithm Validation"],"fullName":"Advanced Neural Algorithms - Classical TDD 🔄 Backpropagation Algorithm Validation should implement momentum correctly in backpropagation","status":"passed","title":"should implement momentum correctly in backpropagation","duration":2.1610440000001745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🚀 RPROP Training Algorithm"],"fullName":"Advanced Neural Algorithms - Classical TDD 🚀 RPROP Training Algorithm should implement RPROP weight updates correctly","status":"failed","title":"should implement RPROP weight updates correctly","duration":4.659850000000006,"failureMessages":["AssertionError: expected 0.5 to be greater than 0.7\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:180:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🚀 RPROP Training Algorithm"],"fullName":"Advanced Neural Algorithms - Classical TDD 🚀 RPROP Training Algorithm should converge faster than standard backpropagation on XOR","status":"failed","title":"should converge faster than standard backpropagation on XOR","duration":58.55312600000002,"failureMessages":["AssertionError: expected 0.5 to be less than 0.4\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:213:38\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","⚡ QuickProp Training Algorithm"],"fullName":"Advanced Neural Algorithms - Classical TDD ⚡ QuickProp Training Algorithm should implement QuickProp weight updates correctly","status":"failed","title":"should implement QuickProp weight updates correctly","duration":197.48101900000006,"failureMessages":["AssertionError: expected 156.11052532414107 to be less than 0.5\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:273:26\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","⚡ QuickProp Training Algorithm"],"fullName":"Advanced Neural Algorithms - Classical TDD ⚡ QuickProp Training Algorithm should handle quadratic approximation correctly","status":"passed","title":"should handle quadratic approximation correctly","duration":0.4008600000001934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🏗️ Cascade Training Implementation"],"fullName":"Advanced Neural Algorithms - Classical TDD 🏗️ Cascade Training Implementation should implement cascade correlation training correctly","status":"failed","title":"should implement cascade correlation training correctly","duration":13.105735999999979,"failureMessages":["AssertionError: expected 0.5 to be greater than 0.6\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:334:24\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🏗️ Cascade Training Implementation"],"fullName":"Advanced Neural Algorithms - Classical TDD 🏗️ Cascade Training Implementation should add neurons incrementally when needed","status":"passed","title":"should add neurons incrementally when needed","duration":21.78606899999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🎯 XOR Problem Convergence Testing"],"fullName":"Advanced Neural Algorithms - Classical TDD 🎯 XOR Problem Convergence Testing should solve XOR with different network architectures","status":"passed","title":"should solve XOR with different network architectures","duration":85.24934699999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🎯 XOR Problem Convergence Testing"],"fullName":"Advanced Neural Algorithms - Classical TDD 🎯 XOR Problem Convergence Testing should demonstrate XOR is not linearly separable","status":"passed","title":"should demonstrate XOR is not linearly separable","duration":16.202828999999838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","🎯 XOR Problem Convergence Testing"],"fullName":"Advanced Neural Algorithms - Classical TDD 🎯 XOR Problem Convergence Testing should maintain XOR solution stability","status":"failed","title":"should maintain XOR solution stability","duration":37.62580100000014,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts:459:40\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","📐 Mathematical Correctness Validation"],"fullName":"Advanced Neural Algorithms - Classical TDD 📐 Mathematical Correctness Validation should maintain numerical precision in weight updates","status":"passed","title":"should maintain numerical precision in weight updates","duration":4003.6152300000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","📐 Mathematical Correctness Validation"],"fullName":"Advanced Neural Algorithms - Classical TDD 📐 Mathematical Correctness Validation should satisfy gradient descent optimization conditions","status":"passed","title":"should satisfy gradient descent optimization conditions","duration":0.4392410000000382,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Algorithms - Classical TDD","📐 Mathematical Correctness Validation"],"fullName":"Advanced Neural Algorithms - Classical TDD 📐 Mathematical Correctness Validation should handle extreme weight values gracefully","status":"passed","title":"should handle extreme weight values gracefully","duration":0.8100000000004002,"failureMessages":[],"meta":{}}],"startTime":1754765018971,"endTime":1754765023471.81,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-algorithms.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/neural-network-training.test.ts"},{"assertionResults":[{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🛡️ Regularization Techniques"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🛡️ Regularization Techniques should implement L1 regularization correctly","status":"passed","title":"should implement L1 regularization correctly","duration":16.439863999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🛡️ Regularization Techniques"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🛡️ Regularization Techniques should implement L2 regularization correctly","status":"passed","title":"should implement L2 regularization correctly","duration":8.765128000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🛡️ Regularization Techniques"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🛡️ Regularization Techniques should prevent overfitting with L1/L2 regularization","status":"passed","title":"should prevent overfitting with L1/L2 regularization","duration":1920.3271799999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🛡️ Regularization Techniques"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🛡️ Regularization Techniques should implement dropout correctly during training","status":"failed","title":"should implement dropout correctly during training","duration":18.496494999999868,"failureMessages":["AssertionError: expected 0.8702515529017018 to be 0.5221509317410211 // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:173:30\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:168:26\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🛡️ Regularization Techniques"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🛡️ Regularization Techniques should handle combined regularization techniques","status":"failed","title":"should handle combined regularization techniques","duration":74.54276299999992,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:201:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⚡ Learning Rate Optimization Algorithms"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⚡ Learning Rate Optimization Algorithms should implement Adam optimizer correctly","status":"failed","title":"should implement Adam optimizer correctly","duration":2.1816909999997733,"failureMessages":["AssertionError: expected 0.003599999999999999 to be less than 1e-8\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:258:50\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:255:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⚡ Learning Rate Optimization Algorithms"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⚡ Learning Rate Optimization Algorithms should implement RMSprop optimizer correctly","status":"passed","title":"should implement RMSprop optimizer correctly","duration":0.9912580000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⚡ Learning Rate Optimization Algorithms"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⚡ Learning Rate Optimization Algorithms should compare optimizer performance on XOR problem","status":"failed","title":"should compare optimizer performance on XOR problem","duration":83.2532369999999,"failureMessages":["AssertionError: expected 0 to be greater than 0\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:329:42\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⚡ Learning Rate Optimization Algorithms"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⚡ Learning Rate Optimization Algorithms should adapt learning rates dynamically","status":"passed","title":"should adapt learning rates dynamically","duration":57.928965999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⏰ Early Stopping and Convergence Detection"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⏰ Early Stopping and Convergence Detection should implement early stopping correctly","status":"passed","title":"should implement early stopping correctly","duration":5.390965999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⏰ Early Stopping and Convergence Detection"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⏰ Early Stopping and Convergence Detection should detect convergence accurately","status":"failed","title":"should detect convergence accurately","duration":1.4528740000000653,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:433:32\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⏰ Early Stopping and Convergence Detection"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⏰ Early Stopping and Convergence Detection should handle learning rate reduction on plateau","status":"passed","title":"should handle learning rate reduction on plateau","duration":3.6562560000002122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","⏰ Early Stopping and Convergence Detection"],"fullName":"Advanced Neural Training Techniques - Classical TDD ⏰ Early Stopping and Convergence Detection should implement patience-based stopping correctly","status":"passed","title":"should implement patience-based stopping correctly","duration":0.7374939999999697,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🔄 Cross-Validation and Model Selection"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🔄 Cross-Validation and Model Selection should implement k-fold cross-validation correctly","status":"passed","title":"should implement k-fold cross-validation correctly","duration":5.235428000000411,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🔄 Cross-Validation and Model Selection"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🔄 Cross-Validation and Model Selection should perform cross-validation model evaluation","status":"failed","title":"should perform cross-validation model evaluation","duration":3500.7012129999994,"failureMessages":["AssertionError: expected 204.4583189636805 to be less than 1\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:620:35\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🔄 Cross-Validation and Model Selection"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🔄 Cross-Validation and Model Selection should implement hyperparameter grid search","status":"failed","title":"should implement hyperparameter grid search","duration":42.5375839999997,"failureMessages":["AssertionError: expected 0.24999706832771912 to be less than 0.1\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:670:42\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🔄 Cross-Validation and Model Selection"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🔄 Cross-Validation and Model Selection should implement stratified cross-validation for classification","status":"passed","title":"should implement stratified cross-validation for classification","duration":2.2677530000000843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Advanced Neural Training Techniques - Classical TDD","🔄 Cross-Validation and Model Selection"],"fullName":"Advanced Neural Training Techniques - Classical TDD 🔄 Cross-Validation and Model Selection should implement nested cross-validation for unbiased evaluation","status":"failed","title":"should implement nested cross-validation for unbiased evaluation","duration":1988.466272999999,"failureMessages":["AssertionError: expected 3.401589788260233 to be less than 2\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts:744:29\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}}],"startTime":1754765018972,"endTime":1754765026706.4663,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/training-techniques.test.ts"},{"assertionResults":[{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🚀 WASM Acceleration Performance Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 🚀 WASM Acceleration Performance Tests should achieve 2x+ speedup for matrix operations","status":"passed","title":"should achieve 2x+ speedup for matrix operations","duration":848.509016,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🚀 WASM Acceleration Performance Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 🚀 WASM Acceleration Performance Tests should demonstrate neural network forward pass acceleration","status":"failed","title":"should demonstrate neural network forward pass acceleration","duration":4019.76152,"failureMessages":["AssertionError: expected 399.32511890000023 to be less than or equal to 100\n    at Function.benchmarkPrediction (/home/mhugo/code/claude-code-zen/src/__tests__/helpers/neural-test-helpers.ts:396:21)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts:110:60\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🚀 WASM Acceleration Performance Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 🚀 WASM Acceleration Performance Tests should validate memory-efficient training with large datasets","status":"failed","title":"should validate memory-efficient training with large datasets","duration":14.722352000000683,"failureMessages":["AssertionError: expected +0 to be 10 // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts:155:55\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🧮 SIMD Vector Operations Validation"],"fullName":"WASM Neural Performance Validation - Classical TDD 🧮 SIMD Vector Operations Validation should implement SIMD vector addition correctly","status":"passed","title":"should implement SIMD vector addition correctly","duration":23.66952300000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🧮 SIMD Vector Operations Validation"],"fullName":"WASM Neural Performance Validation - Classical TDD 🧮 SIMD Vector Operations Validation should implement SIMD vector multiplication correctly","status":"passed","title":"should implement SIMD vector multiplication correctly","duration":69.37035900000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🧮 SIMD Vector Operations Validation"],"fullName":"WASM Neural Performance Validation - Classical TDD 🧮 SIMD Vector Operations Validation should show performance improvement with SIMD operations","status":"passed","title":"should show performance improvement with SIMD operations","duration":901.2448360000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🧮 SIMD Vector Operations Validation"],"fullName":"WASM Neural Performance Validation - Classical TDD 🧮 SIMD Vector Operations Validation should handle SIMD alignment requirements correctly","status":"passed","title":"should handle SIMD alignment requirements correctly","duration":4.765562999997201,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🔄 Data Transfer Efficiency Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 🔄 Data Transfer Efficiency Tests should minimize JS-WASM data transfer overhead","status":"passed","title":"should minimize JS-WASM data transfer overhead","duration":2082.9843340000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🔄 Data Transfer Efficiency Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 🔄 Data Transfer Efficiency Tests should handle large tensor transfers efficiently","status":"passed","title":"should handle large tensor transfers efficiently","duration":34488.642616,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","🔄 Data Transfer Efficiency Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 🔄 Data Transfer Efficiency Tests should manage WASM memory allocation efficiently","status":"failed","title":"should manage WASM memory allocation efficiently","duration":2.6898680000012973,"failureMessages":["AssertionError: expected true to be false // Object.is equality\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts:427:49\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","📊 WASM Performance Regression Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 📊 WASM Performance Regression Tests should maintain performance across different data sizes","status":"passed","title":"should maintain performance across different data sizes","duration":38.81123600000137,"failureMessages":[],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","📊 WASM Performance Regression Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 📊 WASM Performance Regression Tests should handle concurrent WASM operations efficiently","status":"failed","title":"should handle concurrent WASM operations efficiently","duration":8.153173999999126,"failureMessages":["Error: Invalid Chai property: toBeFinite\n    at Object.proxyGetter [as get] (file:///home/mhugo/code/claude-code-zen/node_modules/chai/chai.js:1659:17)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts:515:23\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts:514:23\n    at Array.forEach (<anonymous>)\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts:507:15\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["WASM Neural Performance Validation - Classical TDD","📊 WASM Performance Regression Tests"],"fullName":"WASM Neural Performance Validation - Classical TDD 📊 WASM Performance Regression Tests should validate WASM compilation and initialization performance","status":"passed","title":"should validate WASM compilation and initialization performance","duration":174.36005699999805,"failureMessages":[],"meta":{}}],"startTime":1754765028662,"endTime":1754765071342.36,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural/wasm-performance-validation.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/index.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/memory-efficiency.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/neural-network-training.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/prediction-accuracy.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../../../ruv-FANN-zen/ruv-swarm-zen/npm/src/neural-network\" from \"src/__tests__/unit/classical/neural-algorithms/ruv-fann-integration.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/ruv-fann-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/simd-optimization.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/training-algorithms.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/neural-algorithms/training-convergence.test.ts"},{"assertionResults":[{"ancestorTitles":["Type Guards - Classical TDD","Database Result Type Guards"],"fullName":"Type Guards - Classical TDD Database Result Type Guards should correctly identify successful query results","status":"passed","title":"should correctly identify successful query results","duration":4.040748000006715,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Database Result Type Guards"],"fullName":"Type Guards - Classical TDD Database Result Type Guards should correctly identify query error results","status":"passed","title":"should correctly identify query error results","duration":0.788074999996752,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Database Result Type Guards"],"fullName":"Type Guards - Classical TDD Database Result Type Guards should handle union type discrimination correctly","status":"passed","title":"should handle union type discrimination correctly","duration":3.8198709999996936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Memory Result Type Guards"],"fullName":"Type Guards - Classical TDD Memory Result Type Guards should correctly identify successful memory operations","status":"passed","title":"should correctly identify successful memory operations","duration":1.0211740000013378,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Memory Result Type Guards"],"fullName":"Type Guards - Classical TDD Memory Result Type Guards should correctly identify memory not found results","status":"passed","title":"should correctly identify memory not found results","duration":0.6573080000016489,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Memory Result Type Guards"],"fullName":"Type Guards - Classical TDD Memory Result Type Guards should correctly identify memory error results","status":"passed","title":"should correctly identify memory error results","duration":0.7999280000003637,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Neural Result Type Guards"],"fullName":"Type Guards - Classical TDD Neural Result Type Guards should correctly identify training results","status":"passed","title":"should correctly identify training results","duration":0.7645740000007208,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Neural Result Type Guards"],"fullName":"Type Guards - Classical TDD Neural Result Type Guards should correctly identify inference results","status":"passed","title":"should correctly identify inference results","duration":0.756387999994331,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Neural Result Type Guards"],"fullName":"Type Guards - Classical TDD Neural Result Type Guards should correctly identify neural errors","status":"passed","title":"should correctly identify neural errors","duration":11.160876000001736,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Utility Functions"],"fullName":"Type Guards - Classical TDD Utility Functions should safely extract data from database results","status":"passed","title":"should safely extract data from database results","duration":1.0682400000005146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Utility Functions"],"fullName":"Type Guards - Classical TDD Utility Functions should safely extract error messages from various result types","status":"passed","title":"should safely extract error messages from various result types","duration":0.7705309999946621,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Utility Functions"],"fullName":"Type Guards - Classical TDD Utility Functions should check property existence safely","status":"passed","title":"should check property existence safely","duration":0.7988929999992251,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards - Classical TDD","Utility Functions"],"fullName":"Type Guards - Classical TDD Utility Functions should access properties safely","status":"passed","title":"should access properties safely","duration":0.9268420000007609,"failureMessages":[],"meta":{}}],"startTime":1754765053785,"endTime":1754765053814.9268,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/utils/type-guards.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/wasm-computations/matrix-operations.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/classical/wasm-computations/neural-acceleration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Logger is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-engine.test.ts"},{"assertionResults":[{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🚀 Batch Execute Tool - Core Claude-zen Pattern"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🚀 Batch Execute Tool - Core Claude-zen Pattern should execute the classic claude-zen pattern via MCP","status":"failed","title":"should execute the classic claude-zen pattern via MCP","duration":795.7051119999996,"failureMessages":["AssertionError: expected '# 🚀 Batch Execution Complete\\n\\n**Op…' to contain 'Operations: 7'\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts:79:28\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🚀 Batch Execute Tool - Core Claude-zen Pattern"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🚀 Batch Execute Tool - Core Claude-zen Pattern should handle dependencies correctly in batch execution","status":"passed","title":"should handle dependencies correctly in batch execution","duration":279.9506330000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🚀 Batch Execute Tool - Core Claude-zen Pattern"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🚀 Batch Execute Tool - Core Claude-zen Pattern should provide proper error handling for failed operations","status":"passed","title":"should provide proper error handling for failed operations","duration":114.04083099999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🎯 Project Init Batch Tool - Full Project Setup"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🎯 Project Init Batch Tool - Full Project Setup should initialize a complete project with claude-zen optimization","status":"failed","title":"should initialize a complete project with claude-zen optimization","duration":9.516546000002563,"failureMessages":["AssertionError: expected '# 🎉 Project \"claude-zen-test\" Initia…' to contain 'Agents spawned: researcher, coder, an…'\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts:178:28\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🎯 Project Init Batch Tool - Full Project Setup"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🎯 Project Init Batch Tool - Full Project Setup should use sensible defaults when minimal config provided","status":"failed","title":"should use sensible defaults when minimal config provided","duration":3.1966900000006717,"failureMessages":["AssertionError: expected '# 🎉 Project \"minimal-test\" Initializ…' to contain 'Agents spawned: researcher, coder, an…'\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts:197:28\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","📊 Batch Performance Tool - Monitoring and Analytics"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 📊 Batch Performance Tool - Monitoring and Analytics should provide performance summary","status":"failed","title":"should provide performance summary","duration":223.7479020000028,"failureMessages":["AssertionError: expected '# 📊 Batch Performance Summary (Last …' to contain 'Claude-zen Target Assessment:'\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts:233:28\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","📊 Batch Performance Tool - Monitoring and Analytics"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 📊 Batch Performance Tool - Monitoring and Analytics should provide performance trends analysis","status":"passed","title":"should provide performance trends analysis","duration":0.9212679999982356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","📊 Batch Performance Tool - Monitoring and Analytics"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 📊 Batch Performance Tool - Monitoring and Analytics should clear performance history","status":"passed","title":"should clear performance history","duration":0.6261979999981122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","📊 Batch Performance Tool - Monitoring and Analytics"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 📊 Batch Performance Tool - Monitoring and Analytics should handle unknown actions gracefully","status":"passed","title":"should handle unknown actions gracefully","duration":0.9751169999981357,"failureMessages":[],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🎯 Claude-zen Compliance Validation"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🎯 Claude-zen Compliance Validation should demonstrate superiority over sequential operations","status":"failed","title":"should demonstrate superiority over sequential operations","duration":798.9131020000023,"failureMessages":["AssertionError: expected null to be truthy\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts:300:26\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Batch MCP Tools Integration - Claude-zen End-to-End","🎯 Claude-zen Compliance Validation"],"fullName":"Batch MCP Tools Integration - Claude-zen End-to-End 🎯 Claude-zen Compliance Validation should report token reduction benefits","status":"failed","title":"should report token reduction benefits","duration":611.242465000003,"failureMessages":["AssertionError: expected '# 🚀 Batch Execution Complete\\n\\n**Op…' to match /Token Reduction:\\s*\\*\\*[\\d.]+%\\*\\*/\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts:357:28\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}}],"startTime":1754765047656,"endTime":1754765050496.2424,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/batch-mcp-integration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Logger is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/batch/performance-monitor.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../core/event-bus\" from \"src/__tests__/unit/coordination/maestro/native-hive-mind-integration.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/coordination/maestro/native-hive-mind-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["ArgumentParser - TDD London","parsing behavior"],"fullName":"ArgumentParser - TDD London parsing behavior should parse simple command with arguments","status":"passed","title":"should parse simple command with arguments","duration":4.486794000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","parsing behavior"],"fullName":"ArgumentParser - TDD London parsing behavior should parse command with flags","status":"passed","title":"should parse command with flags","duration":1.1296370000018214,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","parsing behavior"],"fullName":"ArgumentParser - TDD London parsing behavior should handle unknown flags based on options","status":"passed","title":"should handle unknown flags based on options","duration":1.9705059999978403,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","parsing behavior"],"fullName":"ArgumentParser - TDD London parsing behavior should handle boolean flags correctly","status":"passed","title":"should handle boolean flags correctly","duration":0.5865929999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","parsing behavior"],"fullName":"ArgumentParser - TDD London parsing behavior should parse array flags","status":"passed","title":"should parse array flags","duration":0.6725149999983842,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","command definition behavior"],"fullName":"ArgumentParser - TDD London command definition behavior should register command with configuration","status":"passed","title":"should register command with configuration","duration":0.6704600000011851,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","command definition behavior"],"fullName":"ArgumentParser - TDD London command definition behavior should register multiple commands without conflicts","status":"passed","title":"should register multiple commands without conflicts","duration":0.4732000000003609,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","command definition behavior"],"fullName":"ArgumentParser - TDD London command definition behavior should handle command aliases correctly","status":"passed","title":"should handle command aliases correctly","duration":0.6192550000014307,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","validation behavior"],"fullName":"ArgumentParser - TDD London validation behavior should validate parsed result and return validation errors","status":"passed","title":"should validate parsed result and return validation errors","duration":1.4171130000031553,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","validation behavior"],"fullName":"ArgumentParser - TDD London validation behavior should validate required flags","status":"passed","title":"should validate required flags","duration":0.8150659999992058,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","validation behavior"],"fullName":"ArgumentParser - TDD London validation behavior should validate flag types","status":"passed","title":"should validate flag types","duration":0.6890830000011192,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","validation behavior"],"fullName":"ArgumentParser - TDD London validation behavior should return warnings for deprecated flags","status":"passed","title":"should return warnings for deprecated flags","duration":0.8696190000009665,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","options configuration behavior"],"fullName":"ArgumentParser - TDD London options configuration behavior should apply parser options correctly","status":"passed","title":"should apply parser options correctly","duration":0.5392089999986638,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","options configuration behavior"],"fullName":"ArgumentParser - TDD London options configuration behavior should merge options with existing configuration","status":"passed","title":"should merge options with existing configuration","duration":0.37285699999847566,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","help generation behavior"],"fullName":"ArgumentParser - TDD London help generation behavior should generate help text","status":"passed","title":"should generate help text","duration":0.3325650000006135,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","edge case behavior"],"fullName":"ArgumentParser - TDD London edge case behavior should handle empty argument array","status":"passed","title":"should handle empty argument array","duration":0.5919260000009672,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","edge case behavior"],"fullName":"ArgumentParser - TDD London edge case behavior should handle flags without values","status":"passed","title":"should handle flags without values","duration":0.354444999997213,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","edge case behavior"],"fullName":"ArgumentParser - TDD London edge case behavior should handle special characters in arguments","status":"passed","title":"should handle special characters in arguments","duration":0.32461400000102003,"failureMessages":[],"meta":{}},{"ancestorTitles":["ArgumentParser - TDD London","edge case behavior"],"fullName":"ArgumentParser - TDD London edge case behavior should handle variadic arguments","status":"passed","title":"should handle variadic arguments","duration":0.3381699999990815,"failureMessages":[],"meta":{}}],"startTime":1754765042728,"endTime":1754765042747.3381,"status":"passed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/argument-parser.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/cli-command-processing.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../../cli/core/base-command\" from \"src/__tests__/unit/london/cli-commands/command-base.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/command-base.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Failed to resolve import \"../../../../cli/core/base-command\" from \"src/__tests__/unit/london/cli-commands/command-registry.test.ts\". Does the file exist?","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/command-registry.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/error-handler.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Commands Integration - TDD London","system initialization behavior"],"fullName":"CLI Commands Integration - TDD London system initialization behavior should initialize all components in correct order","status":"passed","title":"should initialize all components in correct order","duration":3.8009709999969346,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","system initialization behavior"],"fullName":"CLI Commands Integration - TDD London system initialization behavior should not reinitialize if already initialized","status":"passed","title":"should not reinitialize if already initialized","duration":0.9739499999996042,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","system initialization behavior"],"fullName":"CLI Commands Integration - TDD London system initialization behavior should emit initialization events","status":"passed","title":"should emit initialization events","duration":2.228273000000627,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","command execution flow behavior"],"fullName":"CLI Commands Integration - TDD London command execution flow behavior should execute complete command flow with successful result","status":"passed","title":"should execute complete command flow with successful result","duration":1.6720470000000205,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","command execution flow behavior"],"fullName":"CLI Commands Integration - TDD London command execution flow behavior should handle command execution errors through error handler","status":"passed","title":"should handle command execution errors through error handler","duration":2.749761999999464,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","command execution flow behavior"],"fullName":"CLI Commands Integration - TDD London command execution flow behavior should emit execution events","status":"passed","title":"should emit execution events","duration":1.7467980000001262,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","command execution flow behavior"],"fullName":"CLI Commands Integration - TDD London command execution flow behavior should throw error if system not initialized","status":"passed","title":"should throw error if system not initialized","duration":0.957578999998077,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","component interaction behavior"],"fullName":"CLI Commands Integration - TDD London component interaction behavior should coordinate between parser and registry","status":"passed","title":"should coordinate between parser and registry","duration":1.5870219999997062,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","component interaction behavior"],"fullName":"CLI Commands Integration - TDD London component interaction behavior should format output using formatter when command succeeds","status":"passed","title":"should format output using formatter when command succeeds","duration":1.307915999997931,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","component interaction behavior"],"fullName":"CLI Commands Integration - TDD London component interaction behavior should use error handler when command fails","status":"passed","title":"should use error handler when command fails","duration":1.216284000001906,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","command registration integration behavior"],"fullName":"CLI Commands Integration - TDD London command registration integration behavior should register command and make it available for execution","status":"passed","title":"should register command and make it available for execution","duration":1.2399570000015956,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","command registration integration behavior"],"fullName":"CLI Commands Integration - TDD London command registration integration behavior should find and execute registered commands by category","status":"passed","title":"should find and execute registered commands by category","duration":0.891367000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","help and documentation behavior"],"fullName":"CLI Commands Integration - TDD London help and documentation behavior should provide help for registered commands","status":"passed","title":"should provide help for registered commands","duration":1.0301409999992757,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","lifecycle and cleanup behavior"],"fullName":"CLI Commands Integration - TDD London lifecycle and cleanup behavior should dispose all components in correct order","status":"failed","title":"should dispose all components in correct order","duration":9.003477000002022,"failureMessages":["AssertionError: expected \"spy\" to be called 2 times, but got 1 times\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/index.test.ts:554:30\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///home/mhugo/code/claude-code-zen/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","lifecycle and cleanup behavior"],"fullName":"CLI Commands Integration - TDD London lifecycle and cleanup behavior should remove all event listeners on disposal","status":"passed","title":"should remove all event listeners on disposal","duration":0.8808570000001055,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","error propagation behavior"],"fullName":"CLI Commands Integration - TDD London error propagation behavior should emit error events during execution failures","status":"passed","title":"should emit error events during execution failures","duration":1.239001999998436,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Commands Integration - TDD London","error propagation behavior"],"fullName":"CLI Commands Integration - TDD London error propagation behavior should handle initialization errors gracefully","status":"passed","title":"should handle initialization errors gracefully","duration":1.0955090000024938,"failureMessages":[],"meta":{}}],"startTime":1754765040155,"endTime":1754765040190.0955,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/index.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/cli-commands/output-formatter.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/agent-communication-protocols.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/agent-manager.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-orchestration.test.ts"},{"assertionResults":[{"ancestorTitles":["Swarm Topology Management (London TDD)","Mesh Topology Creation"],"fullName":"Swarm Topology Management (London TDD) Mesh Topology Creation should initialize mesh topology with full connectivity","status":"failed","title":"should initialize mesh topology with full connectivity","duration":11.093581999997696,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Mesh Topology Creation"],"fullName":"Swarm Topology Management (London TDD) Mesh Topology Creation should handle mesh topology failures gracefully","status":"failed","title":"should handle mesh topology failures gracefully","duration":2.469874999998865,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Hierarchical Topology Management"],"fullName":"Swarm Topology Management (London TDD) Hierarchical Topology Management should create hierarchical structure with coordinator agents","status":"failed","title":"should create hierarchical structure with coordinator agents","duration":1.942418999999063,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Hierarchical Topology Management"],"fullName":"Swarm Topology Management (London TDD) Hierarchical Topology Management should elect new coordinator when current coordinator fails","status":"failed","title":"should elect new coordinator when current coordinator fails","duration":2.0597619999971357,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Ring Topology Coordination"],"fullName":"Swarm Topology Management (London TDD) Ring Topology Coordination should establish circular communication pattern","status":"failed","title":"should establish circular communication pattern","duration":2.0505510000002687,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Ring Topology Coordination"],"fullName":"Swarm Topology Management (London TDD) Ring Topology Coordination should handle ring break and self-healing","status":"failed","title":"should handle ring break and self-healing","duration":1.9177440000021306,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Star Topology Hub Management"],"fullName":"Swarm Topology Management (London TDD) Star Topology Hub Management should designate central hub and establish spoke connections","status":"failed","title":"should designate central hub and establish spoke connections","duration":3.2169409999987693,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Star Topology Hub Management"],"fullName":"Swarm Topology Management (London TDD) Star Topology Hub Management should handle hub failure with immediate failover","status":"failed","title":"should handle hub failure with immediate failover","duration":1.836978999999701,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Dynamic Topology Optimization"],"fullName":"Swarm Topology Management (London TDD) Dynamic Topology Optimization should continuously monitor and optimize topology performance","status":"failed","title":"should continuously monitor and optimize topology performance","duration":1.9797920000019076,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Dynamic Topology Optimization"],"fullName":"Swarm Topology Management (London TDD) Dynamic Topology Optimization should adapt topology based on workload patterns","status":"failed","title":"should adapt topology based on workload patterns","duration":1.9924279999977443,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Load Balancing Integration"],"fullName":"Swarm Topology Management (London TDD) Load Balancing Integration should distribute agents based on topology constraints","status":"failed","title":"should distribute agents based on topology constraints","duration":1.9124689999989641,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Load Balancing Integration"],"fullName":"Swarm Topology Management (London TDD) Load Balancing Integration should respect topology-specific load balancing rules","status":"failed","title":"should respect topology-specific load balancing rules","duration":1.9473639999996522,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Fault Tolerance and Recovery"],"fullName":"Swarm Topology Management (London TDD) Fault Tolerance and Recovery should detect and isolate byzantine agents","status":"failed","title":"should detect and isolate byzantine agents","duration":2.485296999999264,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Swarm Topology Management (London TDD)","Fault Tolerance and Recovery"],"fullName":"Swarm Topology Management (London TDD) Fault Tolerance and Recovery should implement consensus mechanisms for critical decisions","status":"failed","title":"should implement consensus mechanisms for critical decisions","duration":2.5411590000003343,"failureMessages":["TypeError: __vite_ssr_import_0__.SwarmTopologyManager is not a constructor\n    at /home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts:57:23\n    at file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:146:14\n    at runWithTimeout (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:39:7)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:964:28)\n    at callSuiteHook (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:953:10)\n    at runTest (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1040:30)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/mhugo/code/claude-code-zen/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}}],"startTime":1754765035921,"endTime":1754765035963.5413,"status":"failed","message":"","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/swarm-topology-management.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Transform failed with 4 errors:\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:240:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:242:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:263:8: ERROR: Invalid assignment target\n/home/mhugo/code/claude-code-zen/src/config/loader.ts:272:6: ERROR: Invalid assignment target","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/domain-splitting/orchestration.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/mcp-protocol/error-scenarios.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/mcp-protocol/index.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/mcp-protocol/protocol-message-validation.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/mcp-protocol/request-response-handling.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/mcp-protocol/streaming-support.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/mcp-protocol/tool-registration-discovery.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Logger is not a constructor","name":"/home/mhugo/code/claude-code-zen/src/__tests__/unit/london/coordination/hooks/hook-system.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/tests/intelligence/conversation-framework/memory.test.ts"},{"assertionResults":[],"startTime":1754765017685,"endTime":1754765017685,"status":"failed","message":"Do not import `@jest/globals` outside of the Jest test environment","name":"/home/mhugo/code/claude-code-zen/tests/intelligence/conversation-framework/orchestrator.test.ts"}]}