[package]
name = "zen-swarm-cli"
version.workspace = true
edition = "2021"
authors = ["Zen Neural Stack Contributors"]
description = "Distributed zen-swarm orchestration CLI with cognitive diversity"
readme = "README.md"
repository = "https://github.com/zen-neural-stack/zen-swarm"
license = "MIT OR Apache-2.0"
keywords = ["swarm", "distributed", "orchestration", "ai", "cli"]
categories = ["command-line-utilities", "development-tools"]

[[bin]]
name = "zen-swarm"
path = "src/main.rs"

[dependencies]
# Local dependencies
zen-swarm-core = { path = "../zen-swarm-core" }
zen-swarm-agents = { path = "../zen-swarm-agents" }

# CLI and argument parsing
clap = { version = "4.5", features = ["derive", "env", "color", "suggestions", "cargo"] }
clap_complete = "4.5"

# Async runtime
tokio = { version = "1.39", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.8"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Output formatting
comfy-table = "7.1"
indicatif = "0.17"
colored = "2.1"
dialoguer = "0.11"
atty = "0.2"

# Configuration management
config = { version = "0.14", features = ["yaml", "toml", "json", "ini"] }
directories = "5.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }

# HTTP client for API interactions
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# UUID generation
uuid = { version = "1.10", features = ["v4", "serde"] }

[features]
default = ["onboarding", "enhanced-logging"]

# User experience features
onboarding = []                    # Interactive CLI setup and guided initialization
enhanced-logging = []              # Enhanced logging with status levels and formatting
backtrace = []                     # Detailed error backtraces for debugging

# Monitoring and metrics
performance-metrics = []           # Performance counters and monitoring
memory-tracking = []               # Memory usage tracking with AtomicU64
health-checks = []                 # System health monitoring

# Advanced features  
gpu-integration = []               # GPU compute context integration
distributed-coordination = []      # Advanced distributed swarm coordination
auto-scaling = []                  # Automatic agent scaling based on load

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.1"
tempfile = "3.10"
mockall = "0.13"