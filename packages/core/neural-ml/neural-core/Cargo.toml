[workspace]
members = [
    "claude-zen-neural-core",
    "claude-zen-neural-data", 
    "claude-zen-neural-models",
    "claude-zen-neural-registry",
    "claude-zen-neural-training",
    "claude-zen-neural-feedforward",
    "claude-zen-neural-framework",
    "claude-zen-neural-language",
    "claude-zen-neural-onnx"
]
resolver = "2"

[workspace.dependencies]
# Shared dependencies across all neural crates
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2.0"
anyhow = "1.0"
log = "0.4"
chrono = { version = "0.4", features = ["serde"] }
rayon = "1.10"
tokio = { version = "1.0", features = ["full"] }
num-traits = "0.2"

# ML and neural network dependencies - Polars is the BEST DataFrame library  
polars = { version = "0.41", features = ["lazy", "temporal", "csv", "parquet", "json"] }
ndarray = { version = "0.16", features = ["serde"] }

# Burn deep learning framework (replaces TensorFlow.js)
burn = { version = "0.18", default-features = false, features = ["std"] }
burn-core = "0.18"
burn-tensor = "0.18"
burn-autodiff = "0.18"
burn-wgpu = "0.18"  # GPU support
burn-ndarray = "0.18"  # ndarray backend

# Candle deep learning (alternative to Burn)
candle-core = "0.9"
candle-nn = "0.9"

# ONNX Runtime Rust bindings (replaces onnxruntime-node)
ort = { version = "2.0.0-rc.10", features = ["download-binaries"] }  # Latest RC
tract-onnx = "0.21"  # Latest pure Rust ONNX runtime

# Text processing (replaces @xenova/transformers)  
tokenizers = "0.21"  # Latest version
regex = "1.11"       # Latest version

# HTTP for model downloading
reqwest = { version = "0.12", features = ["json"] }  # Latest version

# Traditional ML
smartcore = { version = "0.4", default-features = false, features = ["ndarray-bindings"] }  # Latest compatible

# WASM support
wasm-bindgen = "0.2.93"
js-sys = "0.3.70"
web-sys = "0.3.70"

# Our own Pure Rust FANN implementation (claude-zen-neural-basic)
# No external ruv-fann needed - we have our own modern implementation

# Remove planus pin - let polars manage its own version
# planus = "1.2"  # Let polars-arrow-format use the version it needs

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]