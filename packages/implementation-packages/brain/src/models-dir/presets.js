/**
 * Neural Model Presets
 */
export const NEURAL_PRESETS = {
    autoencoder: {
        id: 'autoencoder',
        name: 'Autoencoder Network',
        type: 'unsupervised',
        architecture: 'autoencoder',
        layers: [256, 128, 64, 128, 256],
        activation: 'relu',
        outputActivation: 'sigmoid',
        learningRate: 0.001,
        batchSize: 32,
        useCase: ['dimensionality_reduction', 'anomaly_detection'],
    },
    cnn: {
        id: 'cnn',
        name: 'Convolutional Neural Network',
        type: 'computer_vision',
        architecture: 'cnn',
        layers: [32, 64, 128],
        activation: 'relu',
        outputActivation: 'softmax',
        learningRate: 0.001,
        batchSize: 32,
        useCase: ['image_classification', 'object_detection'],
    },
    lstm: {
        id: 'lstm',
        name: 'Long Short-Term Memory Network',
        type: 'sequence',
        architecture: 'lstm',
        layers: [64, 32],
        activation: 'tanh',
        outputActivation: 'softmax',
        learningRate: 0.001,
        batchSize: 32,
        useCase: ['time_series', 'text_generation'],
    },
    transformer: {
        id: 'transformer',
        name: 'Transformer Model',
        type: 'nlp',
        architecture: 'transformer',
        layers: [512, 256],
        activation: 'gelu',
        outputActivation: 'softmax',
        learningRate: 0.0001,
        batchSize: 16,
        useCase: ['machine_translation', 'text_classification'],
    },
    gnn: {
        id: 'gnn',
        name: 'Graph Neural Network',
        type: 'graph',
        architecture: 'gnn',
        layers: [64, 32, 16],
        activation: 'relu',
        outputActivation: 'sigmoid',
        learningRate: 0.001,
        batchSize: 32,
        useCase: ['node_classification', 'graph_classification'],
    },
    vae: {
        id: 'vae',
        name: 'Variational Autoencoder',
        type: 'generative',
        architecture: 'vae',
        layers: [128, 64, 32, 64, 128],
        activation: 'relu',
        outputActivation: 'sigmoid',
        learningRate: 0.001,
        batchSize: 32,
        useCase: ['data_generation', 'anomaly_detection'],
    }
};
//# sourceMappingURL=presets.js.map