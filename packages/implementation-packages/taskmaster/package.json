{
  "name": "@claude-zen/taskmaster",
  "version": "2.0.0",
  "private": true,
  "description": "GOLD STANDARD Enterprise TaskMaster - Production-ready Task Flow Management System with XState, WASM performance modules, Svelte dashboards, real-time monitoring, and comprehensive security",
  "type": "module",
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "./svelte": {
      "types": "./dist/svelte/index.d.ts",
      "import": "./dist/svelte/index.mjs",
      "require": "./dist/svelte/index.cjs"
    },
    "./cli": {
      "types": "./dist/cli/index.d.ts",
      "import": "./dist/cli/index.mjs",
      "require": "./dist/cli/index.cjs"
    },
    "./wasm": {
      "types": "./dist/wasm/index.d.ts",
      "import": "./dist/wasm/index.mjs",
      "require": "./dist/wasm/index.cjs"
    }
  },
  "bin": {
    "taskmaster": "./dist/cli/bin.js",
    "taskmaster-admin": "./dist/cli/admin.js",
    "taskmaster-monitor": "./dist/cli/monitor.js"
  },
  "files": [
    "dist",
    "README.md",
    "CHANGELOG.md",
    "SECURITY.md",
    "docs",
    "migrations",
    "docker"
  ],
  "scripts": {
    "build": "pnpm run build:wasm && pnpm run build:typescript && pnpm run build:svelte && pnpm run build:docker",
    "build:typescript": "tsup && tsc --emitDeclarationOnly --declaration --declarationMap --outDir dist",
    "build:wasm": "cd src/wasm && ./build.sh",
    "build:svelte": "cd src/svelte && svelte-kit sync && svelte-kit build",
    "build:docker": "docker build -t taskmaster:latest .",
    "dev": "concurrently \"pnpm:dev:typescript\" \"pnpm:dev:svelte\" \"pnpm:dev:wasm\"",
    "dev:typescript": "tsup src/index.ts --format cjs,esm --dts --watch",
    "dev:svelte": "cd src/svelte && svelte-kit dev",
    "dev:wasm": "cd src/wasm && cargo watch -x build",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:unit": "vitest run --config vitest.unit.config.ts",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "test:e2e": "playwright test",
    "test:coverage": "vitest run --coverage",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx,.svelte",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx,.svelte --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,md,svelte}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,md,svelte}\"",
    "docs:build": "typedoc && vitepress build docs",
    "docs:dev": "vitepress dev docs",
    "docs:serve": "vitepress serve docs",
    "security:audit": "npm audit && snyk test",
    "security:fix": "npm audit fix && snyk wizard",
    "db:setup": "node scripts/setup-database.js",
    "start:production": "NODE_ENV=production node dist/server/index.js",
    "start:cluster": "NODE_ENV=production pm2 start ecosystem.config.js",
    "cli:help": "node dist/cli/bin.js --help",
    "benchmark": "node dist/benchmarks/performance.js",
    "_prepublishOnly_disabled": "pnpm run build && pnpm run test && pnpm run security:audit"
  },
  "keywords": [
    "taskmaster",
    "task-flow",
    "task-management",
    "enterprise",
    "production-ready",
    "agui",
    "approval-gates",
    "xstate",
    "state-machine",
    "wip-limits",
    "capacity-control",
    "bottleneck-detection",
    "flow-optimization",
    "human-in-the-loop",
    "kanban",
    "svelte",
    "dashboard",
    "real-time",
    "websockets",
    "wasm",
    "rust",
    "performance",
    "monitoring",
    "analytics",
    "security",
    "docker",
    "microservices",
    "rest-api",
    "openapi",
    "cli",
    "database",
    "postgresql",
    "redis",
    "authentication",
    "authorization",
    "observability",
    "telemetry",
    "scalability",
    "high-availability"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/zen-neural/claude-code-zen.git",
    "directory": "packages/implementation-packages/taskmaster"
  },
  "bugs": {
    "url": "https://github.com/zen-neural/claude-code-zen/issues"
  },
  "homepage": "https://github.com/zen-neural/claude-code-zen/tree/main/packages/implementation-packages/taskmaster",
  "license": "MIT",
  "engines": {
    "node": ">=20.0.0",
    "pnpm": ">=8.0.0"
  },
  "dependencies": {
    "@claude-zen/foundation": "workspace:*",
    "@claude-zen/event-system": "workspace:*",
    "immer": "^10.1.1",
    "xstate": "^5.20.2",
    "@xstate/inspect": "^0.8.0",
    "@statelyai/inspect": "^0.4.0",
    "zod": "^3.23.8",
    "chalk": "^5.6.0",
    "express": "^4.19.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "rate-limiter-flexible": "^5.0.3",
    "ws": "^8.18.0",
    "socket.io": "^4.7.5",
    "socket.io-client": "^4.7.5",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "multer": "^1.4.5-lts.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "openapi3-ts": "^4.3.3",
    "inquirer": "^10.2.2",
    "ora": "^8.1.0",
    "table": "^6.8.2",
    "prom-client": "^15.1.3",
    "node-cron": "^3.0.3",
    "config": "^3.3.12",
    "class-validator": "^0.14.1",
    "class-transformer": "^0.5.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@types/node": "22.17.1",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/ws": "^8.5.12",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/bcryptjs": "^2.4.6",
    "@types/passport": "^1.0.16",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/multer": "^1.4.12",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/uuid": "^10.0.0",
    "@types/lodash": "^4.17.7",
    "@types/inquirer": "^9.0.7",
    "@types/pg": "^8.11.10",
    "eslint": "^9.33.0",
    "eslint-plugin-svelte": "^2.43.0",
    "@typescript-eslint/eslint-plugin": "^8.8.0",
    "@typescript-eslint/parser": "^8.8.0",
    "prettier": "^3.4.2",
    "prettier-plugin-svelte": "^3.2.7",
    "tsup": "^8.5.0",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "@playwright/test": "^1.47.2",
    "playwright": "^1.47.2",
    "supertest": "^7.0.0",
    "@types/supertest": "^6.0.2",
    "testcontainers": "^10.13.2",
    "dockerode": "^4.0.2",
    "@types/dockerode": "^3.3.31",
    "@sveltejs/kit": "^2.5.28",
    "@sveltejs/adapter-node": "^5.2.5",
    "svelte": "^4.2.19",
    "svelte-check": "^4.0.2",
    "vite": "^5.4.8",
    "@sveltejs/vite-plugin-svelte": "^3.1.2",
    "autoprefixer": "^10.4.20",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.13",
    "@tailwindcss/forms": "^0.5.9",
    "@tailwindcss/typography": "^0.5.15",
    "lucide-svelte": "^0.447.0",
    "chart.js": "^4.4.4",
    "chartjs-adapter-date-fns": "^3.0.0",
    "d3": "^7.9.0",
    "@types/d3": "^7.4.3",
    "typedoc": "^0.26.7",
    "vitepress": "^1.3.4",
    "concurrently": "^9.0.1",
    "wasm-pack": "^0.13.0",
    "docker": "^1.0.0",
    "pm2": "^5.4.2",
    "snyk": "^1.1293.1",
    "nodemon": "^3.1.7",
    "cross-env": "^7.0.3",
    "rimraf": "^6.0.1",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "commitizen": "^4.3.1",
    "@commitlint/cli": "^19.5.0",
    "@commitlint/config-conventional": "^19.5.0",
    "semantic-release": "^24.2.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1"
  },
  "peerDependencies": {
    "svelte": "^4.0.0 || ^5.0.0",
    "@sveltejs/kit": "^2.0.0"
  },
  "peerDependenciesMeta": {
    "svelte": {
      "optional": true
    },
    "@sveltejs/kit": {
      "optional": true
    }
  },
  "optionalDependencies": {
    "sharp": "^0.33.5",
    "canvas": "^2.11.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx,svelte}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}
