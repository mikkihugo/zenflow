---
# Claude Code CLI Agent - Autonomous issue resolution and development
name: "Claude Code CLI Agent"

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        default: '139'

concurrency:
  group: claude-code-cli-agent
  cancel-in-progress: false

jobs:
  claude-solver:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    if: contains(github.event.comment.body, '@claude') || github.event.action == 'opened' || (github.event.action == 'labeled' && github.event.label.name == 'claude-code') || github.event_name == 'workflow_dispatch'

    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read
      metadata: read
      statuses: write
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Claude Code Agent
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          direct_prompt: |
            Resolve GitHub issue #${{ github.event.issue.number || inputs.issue_number }}.
            
            Issue Details:
            Title: ${{ github.event.issue.title }}
            Body: ${{ github.event.issue.body || github.event.comment.body }}
            
            Follow these phases:
            1. Analyze requirements and create implementation plan
            2. Implement solution with comprehensive tests  
            3. Commit changes and create pull request
            
            Use CLAUDE_AGENT.md guidelines and domain-driven architecture.
            Focus on working, tested code that solves the actual problem.

  auto-merge:
    needs: claude-solver
    runs-on: ubuntu-latest
    if: needs.claude-solver.outputs.pull_request_number != ''

    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Auto-merge PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ needs.claude-solver.outputs.pull_request_number }}
        run: |
          echo "Auto-merging PR #$PR_NUMBER"
          gh pr merge $PR_NUMBER --auto --squash